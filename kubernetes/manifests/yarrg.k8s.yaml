apiVersion: v1
kind: Namespace
metadata:
  name: yarrg
  namespace: yarrg
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yarrg-radarr-config-pvc-c8669b0f
  namespace: yarrg
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarrg-radarr-deployment-c8835f9d
  namespace: yarrg
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: yarrg-radarr-deployment-c891f9ae
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: yarrg-radarr-deployment-c891f9ae
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: lscr.io/linuxserver/radarr:5.17.2
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - API_KEY=$(awk -F'[<>]' '/ApiKey/{print $3}' /config/config.xml) && curl --fail localhost:7878/api/v3/system/status?apiKey=$API_KEY
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: radarr
          ports:
            - containerPort: 7878
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 7878
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 7878
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /config
              name: pvc-yarrg-radarr-config-pvc-c8669b0f
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: media
          nfs:
            path: /mnt/WD-6D-8T/fin
            server: 10.0.10.180
        - name: pvc-yarrg-radarr-config-pvc-c8669b0f
          persistentVolumeClaim:
            claimName: yarrg-radarr-config-pvc-c8669b0f
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: yarrg-radarr-service-c8178200
  namespace: yarrg
spec:
  externalIPs: []
  ports:
    - name: http
      port: 7878
      protocol: TCP
  selector:
    cdk8s.io/metadata.addr: yarrg-radarr-deployment-c891f9ae
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: yarr-radarr-yarrg-radarr-service-c8178200-tls-c8d9182e
  namespace: yarrg
immutable: false
stringData: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
  name: yarrg-radarr-ingress-c87ef447
  namespace: yarrg
spec:
  ingressClassName: nginx
  rules:
    - host: radarr.us-drig-1.drigs.org
      http:
        paths:
          - backend:
              service:
                name: yarrg-radarr-service-c8178200
                port:
                  number: 7878
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - radarr.us-drig-1.drigs.org
      secretName: yarr-radarr-yarrg-radarr-service-c8178200-tls-c8d9182e
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yarrg-sonarr-config-pvc-c83d6d52
  namespace: yarrg
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarrg-sonarr-deployment-c8f7742c
  namespace: yarrg
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: yarrg-sonarr-deployment-c82400f8
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: yarrg-sonarr-deployment-c82400f8
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: lscr.io/linuxserver/sonarr:latest
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - API_KEY=$(awk -F'[<>]' '/ApiKey/{print $3}' /config/config.xml) && curl --fail localhost:8989/api/v3/system/status?apiKey=$API_KEY
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: sonarr
          ports:
            - containerPort: 8989
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 8989
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 8989
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /config
              name: pvc-yarrg-sonarr-config-pvc-c83d6d52
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: media
          nfs:
            path: /mnt/WD-6D-8T/fin
            server: 10.0.10.180
        - name: pvc-yarrg-sonarr-config-pvc-c83d6d52
          persistentVolumeClaim:
            claimName: yarrg-sonarr-config-pvc-c83d6d52
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: yarrg-sonarr-service-c850f64d
  namespace: yarrg
spec:
  externalIPs: []
  ports:
    - name: http
      port: 8989
      protocol: TCP
  selector:
    cdk8s.io/metadata.addr: yarrg-sonarr-deployment-c82400f8
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: yarr-sonarr-yarrg-sonarr-service-c850f64d-tls-c820699b
  namespace: yarrg
immutable: false
stringData: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
  name: yarrg-sonarr-ingress-c84812a8
  namespace: yarrg
spec:
  ingressClassName: nginx
  rules:
    - host: sonarr.us-drig-1.drigs.org
      http:
        paths:
          - backend:
              service:
                name: yarrg-sonarr-service-c850f64d
                port:
                  number: 8989
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - sonarr.us-drig-1.drigs.org
      secretName: yarr-sonarr-yarrg-sonarr-service-c850f64d-tls-c820699b
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yarrg-lidarr-config-pvc-c8c484de
  namespace: yarrg
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarrg-lidarr-deployment-c8caac39
  namespace: yarrg
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: yarrg-lidarr-deployment-c82cd501
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: yarrg-lidarr-deployment-c82cd501
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: lscr.io/linuxserver/lidarr:2.8.2
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - API_KEY=$(awk -F'[<>]' '/ApiKey/{print $3}' /config/config.xml) && curl --fail localhost:8686/api/v1/system/status?apiKey=$API_KEY
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: lidarr
          ports:
            - containerPort: 8686
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 8686
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 8686
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /config
              name: pvc-yarrg-lidarr-config-pvc-c8c484de
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: media
          nfs:
            path: /mnt/WD-6D-8T/fin
            server: 10.0.10.180
        - name: pvc-yarrg-lidarr-config-pvc-c8c484de
          persistentVolumeClaim:
            claimName: yarrg-lidarr-config-pvc-c8c484de
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: yarrg-lidarr-service-c86e0d14
  namespace: yarrg
spec:
  externalIPs: []
  ports:
    - name: http
      port: 8686
      protocol: TCP
  selector:
    cdk8s.io/metadata.addr: yarrg-lidarr-deployment-c82cd501
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: yarr-lidarr-yarrg-lidarr-service-c86e0d14-tls-c8579e22
  namespace: yarrg
immutable: false
stringData: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
  name: yarrg-lidarr-ingress-c85dc195
  namespace: yarrg
spec:
  ingressClassName: nginx
  rules:
    - host: lidarr.us-drig-1.drigs.org
      http:
        paths:
          - backend:
              service:
                name: yarrg-lidarr-service-c86e0d14
                port:
                  number: 8686
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - lidarr.us-drig-1.drigs.org
      secretName: yarr-lidarr-yarrg-lidarr-service-c86e0d14-tls-c8579e22
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yarrg-readarr-config-pvc-c83da581
  namespace: yarrg
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarrg-readarr-deployment-c8a14afe
  namespace: yarrg
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: yarrg-readarr-deployment-c8c61b5b
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: yarrg-readarr-deployment-c8c61b5b
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: lscr.io/linuxserver/readarr:0.4.10-develop
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - API_KEY=$(awk -F'[<>]' '/ApiKey/{print $3}' /config/config.xml) && curl --fail localhost:8787/api/v1/system/status?apiKey=$API_KEY
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: readarr
          ports:
            - containerPort: 8787
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 8787
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 8787
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /config
              name: pvc-yarrg-readarr-config-pvc-c83da581
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: media
          nfs:
            path: /mnt/WD-6D-8T/fin
            server: 10.0.10.180
        - name: pvc-yarrg-readarr-config-pvc-c83da581
          persistentVolumeClaim:
            claimName: yarrg-readarr-config-pvc-c83da581
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: yarrg-readarr-service-c8851e55
  namespace: yarrg
spec:
  externalIPs: []
  ports:
    - name: http
      port: 8787
      protocol: TCP
  selector:
    cdk8s.io/metadata.addr: yarrg-readarr-deployment-c8c61b5b
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: ya-readarr-yarrg-readarr-service-c8851e55-tls-c89a5f46
  namespace: yarrg
immutable: false
stringData: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
  name: yarrg-readarr-ingress-c8b95d5d
  namespace: yarrg
spec:
  ingressClassName: nginx
  rules:
    - host: readarr.us-drig-1.drigs.org
      http:
        paths:
          - backend:
              service:
                name: yarrg-readarr-service-c8851e55
                port:
                  number: 8787
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - readarr.us-drig-1.drigs.org
      secretName: ya-readarr-yarrg-readarr-service-c8851e55-tls-c89a5f46
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yarrg-bazarr-config-pvc-c8321f91
  namespace: yarrg
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarrg-bazarr-deployment-c84bbba8
  namespace: yarrg
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: yarrg-bazarr-deployment-c87b5d55
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: yarrg-bazarr-deployment-c87b5d55
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: lscr.io/linuxserver/bazarr:1.5.1
          imagePullPolicy: Always
          name: bazarr
          ports:
            - containerPort: 6767
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 6767
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 6767
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /config
              name: pvc-yarrg-bazarr-config-pvc-c8321f91
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: media
          nfs:
            path: /mnt/WD-6D-8T/fin
            server: 10.0.10.180
        - name: pvc-yarrg-bazarr-config-pvc-c8321f91
          persistentVolumeClaim:
            claimName: yarrg-bazarr-config-pvc-c8321f91
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: yarrg-bazarr-service-c8953911
  namespace: yarrg
spec:
  externalIPs: []
  ports:
    - name: http
      port: 6767
      protocol: TCP
  selector:
    cdk8s.io/metadata.addr: yarrg-bazarr-deployment-c87b5d55
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: yarr-bazarr-yarrg-bazarr-service-c8953911-tls-c812ec01
  namespace: yarrg
immutable: false
stringData: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
  name: yarrg-bazarr-ingress-c84330d1
  namespace: yarrg
spec:
  ingressClassName: nginx
  rules:
    - host: bazarr.us-drig-1.drigs.org
      http:
        paths:
          - backend:
              service:
                name: yarrg-bazarr-service-c8953911
                port:
                  number: 6767
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - bazarr.us-drig-1.drigs.org
      secretName: yarr-bazarr-yarrg-bazarr-service-c8953911-tls-c812ec01
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yarrg-prowlarr-config-pvc-c826c13c
  namespace: yarrg
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarrg-prowlarr-deployment-c875d51f
  namespace: yarrg
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: yarrg-prowlarr-deployment-c8b6c757
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: yarrg-prowlarr-deployment-c8b6c757
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: lscr.io/linuxserver/prowlarr:1.30.2
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - API_KEY=$(awk -F'[<>]' '/ApiKey/{print $3}' /config/config.xml) && curl --fail localhost:9696/api/v1/system/status?apiKey=$API_KEY
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: prowlarr
          ports:
            - containerPort: 9696
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 9696
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 9696
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /config
              name: pvc-yarrg-prowlarr-config-pvc-c826c13c
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-yarrg-prowlarr-config-pvc-c826c13c
          persistentVolumeClaim:
            claimName: yarrg-prowlarr-config-pvc-c826c13c
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: yarrg-prowlarr-service-c832eff5
  namespace: yarrg
spec:
  externalIPs: []
  ports:
    - name: http
      port: 9696
      protocol: TCP
  selector:
    cdk8s.io/metadata.addr: yarrg-prowlarr-deployment-c8b6c757
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: prowlarr-yarrg-prowlarr-service-c832eff5-tls-c87917d6
  namespace: yarrg
immutable: false
stringData: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
  name: yarrg-prowlarr-ingress-c82f983d
  namespace: yarrg
spec:
  ingressClassName: nginx
  rules:
    - host: prowlarr.us-drig-1.drigs.org
      http:
        paths:
          - backend:
              service:
                name: yarrg-prowlarr-service-c832eff5
                port:
                  number: 9696
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - prowlarr.us-drig-1.drigs.org
      secretName: prowlarr-yarrg-prowlarr-service-c832eff5-tls-c87917d6
