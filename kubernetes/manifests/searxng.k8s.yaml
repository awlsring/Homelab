apiVersion: v1
kind: Namespace
metadata:
  name: searxng
  namespace: searxng
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: searxng-valkey-pvc-c8f06b85
  namespace: searxng
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: searxng-valkey-deployment-c8cf20b1
  namespace: searxng
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: searxng-valkey-deployment-c89d9d12
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: searxng-valkey-deployment-c89d9d12
    spec:
      automountServiceAccountToken: false
      containers:
        - command:
            - valkey-server
            - --save
            - "30"
            - "1"
            - --loglevel
            - warning
          image: docker.io/valkey/valkey:8-alpine
          imagePullPolicy: Always
          name: valkey
          ports:
            - containerPort: 6379
              name: valkey
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - SETGID
                - SETUID
                - DAC_OVERRIDE
              drop:
                - ALL
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /data
              name: pvc-searxng-valkey-pvc-c8f06b85
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-searxng-valkey-pvc-c8f06b85
          persistentVolumeClaim:
            claimName: searxng-valkey-pvc-c8f06b85
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: searxng-valkey-service-c8b828b4
  namespace: searxng
spec:
  externalIPs: []
  ports:
    - name: http
      port: 6379
      targetPort: 6379
  selector:
    cdk8s.io/metadata.addr: searxng-valkey-deployment-c89d9d12
  type: ClusterIP
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: searxng-searxng-secret-key-c82ff3ce
  namespace: searxng
spec:
  dataFrom:
    - extract:
        key: searxng-secret-key
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-secret-store
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: searxng-app-settings-c889eca2
  namespace: searxng
data:
  settings.yml: |
    use_default_settings: true

    server:
        limiter: false
        image_proxy: true
        port: 8080
        bind_address: "0.0.0.0"

    ui:
        static_use_hash: true

    search:
        safe_search: 0
        autocomplete: ""
        default_lang: ""
        formats:
        - html
        - json
immutable: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: searxng-app-limiter-c8c5b9bc
  namespace: searxng
data:
  limiter.toml: |
    [botdetection.ip_limit]
    # activate link_token method in the ip_limit method
    link_token = true
immutable: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: searxng-app-uwsgi-c831d691
  namespace: searxng
data:
  uwsgi.ini: |
    [uwsgi]
    # Who will run the code
    uid = searxng
    gid = searxng

    # Number of workers (usually CPU count)
    # default value: %k (= number of CPU core, see Dockerfile)
    workers = %k

    # Number of threads per worker
    # default value: 4 (see Dockerfile)
    threads = 4

    # The right granted on the created socket
    chmod-socket = 666

    # Plugin to use and interpreter config
    single-interpreter = true
    master = true
    plugin = python3
    lazy-apps = true
    enable-threads = 4

    # Module to import
    module = searx.webapp

    # Virtualenv and python path
    pythonpath = /usr/local/searxng/
    chdir = /usr/local/searxng/searx/

    # automatically set processes name to something meaningful
    auto-procname = true

    # Disable request logging for privacy
    disable-logging = true
    log-5xx = true

    # Set the max size of a request (request-body excluded)
    buffer-size = 8192

    # No keep alive
    # See https://github.com/searx/searx-docker/issues/24
    add-header = Connection: close

    # uwsgi serves the static files
    static-map = /static=/usr/local/searxng/searx/static
    # expires set to one day
    static-expires = /* 86400
    static-gzip-all = True
    offload-threads = 4
immutable: false
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: searxng-app-service-account-c855fa8a
  namespace: searxng
automountServiceAccountToken: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: searxng-app-deployment-c86524d6
  namespace: searxng
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: searxng-app-deployment-c8e204e3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: searxng-app-deployment-c8e204e3
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: SEARXNG_REDIS_URL
              value: redis://searxng-valkey-service-c8b828b4:6379/0
            - name: SEARXNG_URL
              value: search.us-drig-1.drigs.org
            - name: SEARXNG_SECRET
              valueFrom:
                secretKeyRef:
                  key: password
                  name: searxng-searxng-secret-key-c82ff3ce
          image: searxng/searxng:2025.2.3-4ab7984ed
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          name: searxng
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /etc/searxng/settings.yml
              name: configmap-searxng-app-settings-c889eca2
              readOnly: true
              subPath: settings.yml
            - mountPath: /etc/searxng/limiter.toml
              name: configmap-searxng-app-limiter-c8c5b9bc
              readOnly: true
              subPath: limiter.toml
            - mountPath: /etc/searxng/uwsgi.ini
              name: configmap-searxng-app-uwsgi-c831d691
              readOnly: true
              subPath: uwsgi.ini
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      serviceAccountName: searxng-app-service-account-c855fa8a
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: searxng-app-settings-c889eca2
          name: configmap-searxng-app-settings-c889eca2
        - configMap:
            name: searxng-app-limiter-c8c5b9bc
          name: configmap-searxng-app-limiter-c8c5b9bc
        - configMap:
            name: searxng-app-uwsgi-c831d691
          name: configmap-searxng-app-uwsgi-c831d691
---
apiVersion: v1
kind: Service
metadata:
  name: searxng-app-service-c8f97b83
  namespace: searxng
spec:
  externalIPs: []
  ports:
    - name: http
      port: 8080
      protocol: TCP
  selector:
    cdk8s.io/metadata.addr: searxng-app-deployment-c8e204e3
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: searxng-searxng-app-service-c8f97b83-tls-c8e5811c
  namespace: searxng
immutable: false
stringData: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
  name: searxng-ingress-c8f6b82e
  namespace: searxng
spec:
  ingressClassName: nginx
  rules:
    - host: search.us-drig-1.drigs.org
      http:
        paths:
          - backend:
              service:
                name: searxng-app-service-c8f97b83
                port:
                  number: 8080
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - search.us-drig-1.drigs.org
      secretName: searxng-searxng-app-service-c8f97b83-tls-c8e5811c
