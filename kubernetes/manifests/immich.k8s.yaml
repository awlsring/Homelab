apiVersion: v1
kind: Namespace
metadata:
  name: immich
  namespace: immich
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: immich-database-secret-c86932a0
  namespace: immich
spec:
  dataFrom:
    - extract:
        key: immich-database-password
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-secret-store
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: immich-backup-store-access-key-c87d982f
  namespace: immich
spec:
  dataFrom:
    - extract:
        key: cnpg-backup-access-key-id
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-secret-store
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: immich-backup-store-secret-key-c8ce2246
  namespace: immich
spec:
  dataFrom:
    - extract:
        key: cnpg-backup-secret-access-key
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-secret-store
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-immich-db-c88c515f
  namespace: immich
spec:
  backup:
    barmanObjectStore:
      destinationPath: s3://awlsring-homelab-cnpg-db-backups/immich
      endpointURL: https://s3.us-east-005.backblazeb2.com
      s3Credentials:
        accessKeyId:
          key: password
          name: immich-backup-store-access-key-c87d982f
        secretAccessKey:
          key: password
          name: immich-backup-store-secret-key-c8ce2246
      wal:
        compression: gzip
    retentionPolicy: 14d
  bootstrap:
    initdb:
      database: immich
      owner: immich
      postInitApplicationSQL:
        - ALTER SYSTEM SET search_path TO "immich", public, vectors;
        - CREATE EXTENSION IF NOT EXISTS "vectors";
        - CREATE EXTENSION IF NOT EXISTS cube WITH SCHEMA pg_catalog;
        - CREATE EXTENSION IF NOT EXISTS earthdistance WITH SCHEMA pg_catalog;
        - ALTER SCHEMA vectors OWNER TO immich;
      secret:
        name: immich-database-secret-c86932a0
  externalClusters: []
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16-v0.2.1
  instances: 3
  monitoring: {}
  postgresql:
    shared_preload_libraries:
      - vectors.so
  primaryUpdateStrategy: unsupervised
  storage:
    size: 10Gi
    storageClass: local-path
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: immich-immich-db-immich-db-backup-c84741a2
  namespace: immich
spec:
  cluster:
    name: immich-db
  schedule: 0 1 * * *
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-redis-deployment-c820f290
  namespace: immich
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: immich-redis-deployment-c8d07aae
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: immich-redis-deployment-c8d07aae
    spec:
      automountServiceAccountToken: false
      containers:
        - image: redis:6.2-alpine3.19
          imagePullPolicy: Always
          name: redis
          ports:
            - containerPort: 6379
              name: redis
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: immich-redis-service-c83c7595
  namespace: immich
spec:
  externalIPs: []
  ports:
    - name: http
      port: 6379
      targetPort: 6379
  selector:
    cdk8s.io/metadata.addr: immich-redis-deployment-c8d07aae
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    immich/monitoring: "false"
  name: immich-app-machine-learning-service-c858f540
  namespace: immich
spec:
  externalIPs: []
  ports:
    - name: http
      port: 3003
      targetPort: 3003
  selector:
    cdk8s.io/metadata.addr: immich-app-machine-learning-deployment-c8099966
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-app-server-deployment-c8ec8ea8
  namespace: immich
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: immich-app-server-deployment-c8e8f010
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: immich-app-server-deployment-c8e8f010
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: IMMICH_METRICS
              value: "true"
            - name: UPLOAD_LOCATION
              value: ./library
            - name: DB_HOSTNAME
              value: immich-immich-db-c88c515f-rw
            - name: DB_USERNAME
              value: immich
            - name: DB_DATABASE_NAME
              value: immich
            - name: DB_PORT
              value: "5432"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: immich-database-secret-c86932a0
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: immich-database-secret-c86932a0
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-app-machine-learning-service-c858f540:3003
            - name: PUBLIC_IMMICH_SERVER_URL
              value: immich.us-drig-1.drigs.org
            - name: REDIS_HOSTNAME
              value: immich-redis-service-c83c7595
            - name: MACHINE_LEARNING_EAGER_STARTUP
              value: "false"
          image: ghcr.io/immich-app/immich-server:release
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/server/ping
              port: 2283
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
          name: immich-server
          ports:
            - containerPort: 2283
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/server/ping
              port: 2283
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 8000m
              memory: 16384Mi
            requests:
              cpu: 200m
              memory: 1024Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /api/server/ping
              port: 2283
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /usr/src/app/upload
              name: media
            - mountPath: photos
              name: photos
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: media
          nfs:
            path: /mnt/WD-6D-8T/immich-uploads
            server: 10.0.10.180
        - name: photos
          nfs:
            path: /mnt/WD-6D-8T/photos
            server: 10.0.10.180
---
apiVersion: v1
kind: Service
metadata:
  labels:
    immich/monitoring: "true"
  name: immich-app-server-service-c8f37b56
  namespace: immich
spec:
  externalIPs: []
  ports:
    - name: http
      port: 2283
      targetPort: 2283
    - name: metrics
      port: 8081
      targetPort: 8081
  selector:
    cdk8s.io/metadata.addr: immich-app-server-deployment-c8e8f010
  type: LoadBalancer
---
apiVersion: v1
kind: Secret
metadata:
  name: im-app-immich-app-server-service-c8f37b56-tls-c8e57554
  namespace: immich
immutable: false
stringData: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
    nginx.ingress.kubernetes.io/proxy-body-size: 50000M
    nginx.ingress.kubernetes.io/proxy-read-timeout: 600s
    nginx.ingress.kubernetes.io/proxy-send-timeout: 600s
  name: immich-app-server-ingress-c8a51a5b
  namespace: immich
spec:
  ingressClassName: nginx
  rules:
    - host: immich.us-drig-1.drigs.org
      http:
        paths:
          - backend:
              service:
                name: immich-app-server-service-c8f37b56
                port:
                  number: 2283
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - immich.us-drig-1.drigs.org
      secretName: im-app-immich-app-server-service-c8f37b56-tls-c8e57554
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-app-ml-cache-pvc-c8a24147
  namespace: immich
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-app-machine-learning-deployment-c8078083
  namespace: immich
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: immich-app-machine-learning-deployment-c8099966
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: immich-app-machine-learning-deployment-c8099966
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: IMMICH_METRICS
              value: "true"
            - name: UPLOAD_LOCATION
              value: ./library
            - name: DB_HOSTNAME
              value: immich-immich-db-c88c515f-rw
            - name: DB_USERNAME
              value: immich
            - name: DB_DATABASE_NAME
              value: immich
            - name: DB_PORT
              value: "5432"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: immich-database-secret-c86932a0
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: immich-database-secret-c86932a0
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-app-machine-learning-service-c858f540:3003
            - name: PUBLIC_IMMICH_SERVER_URL
              value: immich.us-drig-1.drigs.org
            - name: REDIS_HOSTNAME
              value: immich-redis-service-c83c7595
            - name: MACHINE_LEARNING_EAGER_STARTUP
              value: "false"
          image: ghcr.io/immich-app/immich-machine-learning:release
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 3003
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          name: immich-machine-learning
          ports:
            - containerPort: 3003
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 3003
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /cache
              name: pvc-immich-app-ml-cache-pvc-c8a24147
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-immich-app-ml-cache-pvc-c8a24147
          persistentVolumeClaim:
            claimName: immich-app-ml-cache-pvc-c8a24147
            readOnly: false
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: immich-app-service-monitor-c865032d
  namespace: immich
spec:
  endpoints:
    - port: metrics
  selector:
    matchLabels:
      immich/monitoring: "true"
