apiVersion: v1
kind: Namespace
metadata:
  name: descheduler
  namespace: descheduler
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: descheduler-helm-c80f662c
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: descheduler
    app.kubernetes.io/version: 0.32.1
    helm.sh/chart: descheduler-0.32.1
  name: descheduler-helm-c80f662c
  namespace: descheduler
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: descheduler-helm-c80f662c
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: descheduler
    app.kubernetes.io/version: 0.32.1
    helm.sh/chart: descheduler-0.32.1
  name: descheduler-helm-c80f662c
  namespace: descheduler
data:
  policy.yaml: |
    apiVersion: "descheduler/v1alpha2"
    kind: "DeschedulerPolicy"
    profiles:
    - name: default
      pluginConfig:
      - args:
          evictLocalStoragePods: true
          ignorePvcPods: true
        name: DefaultEvictor
      - name: RemoveDuplicates
      - args:
          includingInitContainers: true
          podRestartThreshold: 100
        name: RemovePodsHavingTooManyRestarts
      - args:
          nodeAffinityType:
          - requiredDuringSchedulingIgnoredDuringExecution
        name: RemovePodsViolatingNodeAffinity
      - name: RemovePodsViolatingNodeTaints
      - name: RemovePodsViolatingInterPodAntiAffinity
      - name: RemovePodsViolatingTopologySpreadConstraint
      - args:
          targetThresholds:
            cpu: 50
            memory: 50
            pods: 50
          thresholds:
            cpu: 20
            memory: 20
            pods: 20
        name: LowNodeUtilization
      plugins:
        balance:
          enabled:
          - RemoveDuplicates
          - RemovePodsViolatingTopologySpreadConstraint
          - LowNodeUtilization
        deschedule:
          enabled:
          - RemovePodsHavingTooManyRestarts
          - RemovePodsViolatingNodeTaints
          - RemovePodsViolatingNodeAffinity
          - RemovePodsViolatingInterPodAntiAffinity
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: descheduler-helm-c80f662c
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: descheduler
    app.kubernetes.io/version: 0.32.1
    helm.sh/chart: descheduler-0.32.1
  name: descheduler-helm-c80f662c
  namespace: descheduler
rules:
  - apiGroups:
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - list
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - scheduling.k8s.io
    resources:
      - priorityclasses
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: descheduler-helm-c80f662c
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: descheduler
    app.kubernetes.io/version: 0.32.1
    helm.sh/chart: descheduler-0.32.1
  name: descheduler-helm-c80f662c
  namespace: descheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: descheduler-helm-c80f662c
subjects:
  - kind: ServiceAccount
    name: descheduler-helm-c80f662c
    namespace: descheduler
---
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/instance: descheduler-helm-c80f662c
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: descheduler
    app.kubernetes.io/version: 0.32.1
    helm.sh/chart: descheduler-0.32.1
  name: descheduler-helm-c80f662c
  namespace: descheduler
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            checksum/config: 6e887595571b52010be4af7de31f86d43459cfcbb800b30e14cc02c6d2ec5a90
          labels:
            app.kubernetes.io/instance: descheduler-helm-c80f662c
            app.kubernetes.io/name: descheduler
          name: descheduler-helm-c80f662c
        spec:
          containers:
            - args:
                - --policy-config-file=/policy-dir/policy.yaml
                - --v=3
              command:
                - /bin/descheduler
              image: registry.k8s.io/descheduler/descheduler:v0.32.1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 10258
                  scheme: HTTPS
                initialDelaySeconds: 3
                periodSeconds: 10
              name: descheduler
              ports:
                - containerPort: 10258
                  protocol: TCP
              resources:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 500m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 1000
              volumeMounts:
                - mountPath: /policy-dir
                  name: policy-volume
          priorityClassName: system-cluster-critical
          restartPolicy: Never
          serviceAccountName: descheduler-helm-c80f662c
          volumes:
            - configMap:
                name: descheduler-helm-c80f662c
              name: policy-volume
  schedule: "*/2 * * * *"
