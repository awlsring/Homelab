// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema Instrumentation
 */
export class Instrumentation extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Instrumentation"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'opentelemetry.io/v1alpha1',
    kind: 'Instrumentation',
  }

  /**
   * Renders a Kubernetes manifest for "Instrumentation".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: InstrumentationProps = {}): any {
    return {
      ...Instrumentation.GVK,
      ...toJson_InstrumentationProps(props),
    };
  }

  /**
   * Defines a "Instrumentation" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: InstrumentationProps = {}) {
    super(scope, id, {
      ...Instrumentation.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...Instrumentation.GVK,
      ...toJson_InstrumentationProps(resolved),
    };
  }
}

/**
 * @schema Instrumentation
 */
export interface InstrumentationProps {
  /**
   * @schema Instrumentation#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema Instrumentation#spec
   */
  readonly spec?: InstrumentationSpec;

}

/**
 * Converts an object of type 'InstrumentationProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationProps(obj: InstrumentationProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_InstrumentationSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpec
 */
export interface InstrumentationSpec {
  /**
   * @schema InstrumentationSpec#apacheHttpd
   */
  readonly apacheHttpd?: InstrumentationSpecApacheHttpd;

  /**
   * @schema InstrumentationSpec#defaults
   */
  readonly defaults?: InstrumentationSpecDefaults;

  /**
   * @schema InstrumentationSpec#dotnet
   */
  readonly dotnet?: InstrumentationSpecDotnet;

  /**
   * @schema InstrumentationSpec#env
   */
  readonly env?: InstrumentationSpecEnv[];

  /**
   * @schema InstrumentationSpec#exporter
   */
  readonly exporter?: InstrumentationSpecExporter;

  /**
   * @schema InstrumentationSpec#go
   */
  readonly go?: InstrumentationSpecGo;

  /**
   * @schema InstrumentationSpec#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema InstrumentationSpec#java
   */
  readonly java?: InstrumentationSpecJava;

  /**
   * @schema InstrumentationSpec#nginx
   */
  readonly nginx?: InstrumentationSpecNginx;

  /**
   * @schema InstrumentationSpec#nodejs
   */
  readonly nodejs?: InstrumentationSpecNodejs;

  /**
   * @schema InstrumentationSpec#propagators
   */
  readonly propagators?: InstrumentationSpecPropagators[];

  /**
   * @schema InstrumentationSpec#python
   */
  readonly python?: InstrumentationSpecPython;

  /**
   * @schema InstrumentationSpec#resource
   */
  readonly resource?: InstrumentationSpecResource;

  /**
   * @schema InstrumentationSpec#sampler
   */
  readonly sampler?: InstrumentationSpecSampler;

}

/**
 * Converts an object of type 'InstrumentationSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpec(obj: InstrumentationSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apacheHttpd': toJson_InstrumentationSpecApacheHttpd(obj.apacheHttpd),
    'defaults': toJson_InstrumentationSpecDefaults(obj.defaults),
    'dotnet': toJson_InstrumentationSpecDotnet(obj.dotnet),
    'env': obj.env?.map(y => toJson_InstrumentationSpecEnv(y)),
    'exporter': toJson_InstrumentationSpecExporter(obj.exporter),
    'go': toJson_InstrumentationSpecGo(obj.go),
    'imagePullPolicy': obj.imagePullPolicy,
    'java': toJson_InstrumentationSpecJava(obj.java),
    'nginx': toJson_InstrumentationSpecNginx(obj.nginx),
    'nodejs': toJson_InstrumentationSpecNodejs(obj.nodejs),
    'propagators': obj.propagators?.map(y => y),
    'python': toJson_InstrumentationSpecPython(obj.python),
    'resource': toJson_InstrumentationSpecResource(obj.resource),
    'sampler': toJson_InstrumentationSpecSampler(obj.sampler),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpd
 */
export interface InstrumentationSpecApacheHttpd {
  /**
   * @schema InstrumentationSpecApacheHttpd#attrs
   */
  readonly attrs?: InstrumentationSpecApacheHttpdAttrs[];

  /**
   * @schema InstrumentationSpecApacheHttpd#configPath
   */
  readonly configPath?: string;

  /**
   * @schema InstrumentationSpecApacheHttpd#env
   */
  readonly env?: InstrumentationSpecApacheHttpdEnv[];

  /**
   * @schema InstrumentationSpecApacheHttpd#image
   */
  readonly image?: string;

  /**
   * @schema InstrumentationSpecApacheHttpd#resourceRequirements
   */
  readonly resourceRequirements?: InstrumentationSpecApacheHttpdResourceRequirements;

  /**
   * @schema InstrumentationSpecApacheHttpd#version
   */
  readonly version?: string;

  /**
   * @schema InstrumentationSpecApacheHttpd#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: InstrumentationSpecApacheHttpdVolumeClaimTemplate;

  /**
   * @schema InstrumentationSpecApacheHttpd#volumeLimitSize
   */
  readonly volumeLimitSize?: InstrumentationSpecApacheHttpdVolumeLimitSize;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpd(obj: InstrumentationSpecApacheHttpd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'attrs': obj.attrs?.map(y => toJson_InstrumentationSpecApacheHttpdAttrs(y)),
    'configPath': obj.configPath,
    'env': obj.env?.map(y => toJson_InstrumentationSpecApacheHttpdEnv(y)),
    'image': obj.image,
    'resourceRequirements': toJson_InstrumentationSpecApacheHttpdResourceRequirements(obj.resourceRequirements),
    'version': obj.version,
    'volumeClaimTemplate': toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplate(obj.volumeClaimTemplate),
    'volumeLimitSize': obj.volumeLimitSize?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDefaults
 */
export interface InstrumentationSpecDefaults {
  /**
   * @schema InstrumentationSpecDefaults#useLabelsForResourceAttributes
   */
  readonly useLabelsForResourceAttributes?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecDefaults' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDefaults(obj: InstrumentationSpecDefaults | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'useLabelsForResourceAttributes': obj.useLabelsForResourceAttributes,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnet
 */
export interface InstrumentationSpecDotnet {
  /**
   * @schema InstrumentationSpecDotnet#env
   */
  readonly env?: InstrumentationSpecDotnetEnv[];

  /**
   * @schema InstrumentationSpecDotnet#image
   */
  readonly image?: string;

  /**
   * @schema InstrumentationSpecDotnet#resourceRequirements
   */
  readonly resourceRequirements?: InstrumentationSpecDotnetResourceRequirements;

  /**
   * @schema InstrumentationSpecDotnet#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: InstrumentationSpecDotnetVolumeClaimTemplate;

  /**
   * @schema InstrumentationSpecDotnet#volumeLimitSize
   */
  readonly volumeLimitSize?: InstrumentationSpecDotnetVolumeLimitSize;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnet(obj: InstrumentationSpecDotnet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'env': obj.env?.map(y => toJson_InstrumentationSpecDotnetEnv(y)),
    'image': obj.image,
    'resourceRequirements': toJson_InstrumentationSpecDotnetResourceRequirements(obj.resourceRequirements),
    'volumeClaimTemplate': toJson_InstrumentationSpecDotnetVolumeClaimTemplate(obj.volumeClaimTemplate),
    'volumeLimitSize': obj.volumeLimitSize?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecEnv
 */
export interface InstrumentationSpecEnv {
  /**
   * @schema InstrumentationSpecEnv#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecEnv#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecEnv#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecEnvValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecEnv(obj: InstrumentationSpecEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecExporter
 */
export interface InstrumentationSpecExporter {
  /**
   * @schema InstrumentationSpecExporter#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema InstrumentationSpecExporter#tls
   */
  readonly tls?: InstrumentationSpecExporterTls;

}

/**
 * Converts an object of type 'InstrumentationSpecExporter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecExporter(obj: InstrumentationSpecExporter | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoint': obj.endpoint,
    'tls': toJson_InstrumentationSpecExporterTls(obj.tls),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGo
 */
export interface InstrumentationSpecGo {
  /**
   * @schema InstrumentationSpecGo#env
   */
  readonly env?: InstrumentationSpecGoEnv[];

  /**
   * @schema InstrumentationSpecGo#image
   */
  readonly image?: string;

  /**
   * @schema InstrumentationSpecGo#resourceRequirements
   */
  readonly resourceRequirements?: InstrumentationSpecGoResourceRequirements;

  /**
   * @schema InstrumentationSpecGo#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: InstrumentationSpecGoVolumeClaimTemplate;

  /**
   * @schema InstrumentationSpecGo#volumeLimitSize
   */
  readonly volumeLimitSize?: InstrumentationSpecGoVolumeLimitSize;

}

/**
 * Converts an object of type 'InstrumentationSpecGo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGo(obj: InstrumentationSpecGo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'env': obj.env?.map(y => toJson_InstrumentationSpecGoEnv(y)),
    'image': obj.image,
    'resourceRequirements': toJson_InstrumentationSpecGoResourceRequirements(obj.resourceRequirements),
    'volumeClaimTemplate': toJson_InstrumentationSpecGoVolumeClaimTemplate(obj.volumeClaimTemplate),
    'volumeLimitSize': obj.volumeLimitSize?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJava
 */
export interface InstrumentationSpecJava {
  /**
   * @schema InstrumentationSpecJava#env
   */
  readonly env?: InstrumentationSpecJavaEnv[];

  /**
   * @schema InstrumentationSpecJava#extensions
   */
  readonly extensions?: InstrumentationSpecJavaExtensions[];

  /**
   * @schema InstrumentationSpecJava#image
   */
  readonly image?: string;

  /**
   * @schema InstrumentationSpecJava#resources
   */
  readonly resources?: InstrumentationSpecJavaResources;

  /**
   * @schema InstrumentationSpecJava#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: InstrumentationSpecJavaVolumeClaimTemplate;

  /**
   * @schema InstrumentationSpecJava#volumeLimitSize
   */
  readonly volumeLimitSize?: InstrumentationSpecJavaVolumeLimitSize;

}

/**
 * Converts an object of type 'InstrumentationSpecJava' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJava(obj: InstrumentationSpecJava | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'env': obj.env?.map(y => toJson_InstrumentationSpecJavaEnv(y)),
    'extensions': obj.extensions?.map(y => toJson_InstrumentationSpecJavaExtensions(y)),
    'image': obj.image,
    'resources': toJson_InstrumentationSpecJavaResources(obj.resources),
    'volumeClaimTemplate': toJson_InstrumentationSpecJavaVolumeClaimTemplate(obj.volumeClaimTemplate),
    'volumeLimitSize': obj.volumeLimitSize?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginx
 */
export interface InstrumentationSpecNginx {
  /**
   * @schema InstrumentationSpecNginx#attrs
   */
  readonly attrs?: InstrumentationSpecNginxAttrs[];

  /**
   * @schema InstrumentationSpecNginx#configFile
   */
  readonly configFile?: string;

  /**
   * @schema InstrumentationSpecNginx#env
   */
  readonly env?: InstrumentationSpecNginxEnv[];

  /**
   * @schema InstrumentationSpecNginx#image
   */
  readonly image?: string;

  /**
   * @schema InstrumentationSpecNginx#resourceRequirements
   */
  readonly resourceRequirements?: InstrumentationSpecNginxResourceRequirements;

  /**
   * @schema InstrumentationSpecNginx#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: InstrumentationSpecNginxVolumeClaimTemplate;

  /**
   * @schema InstrumentationSpecNginx#volumeLimitSize
   */
  readonly volumeLimitSize?: InstrumentationSpecNginxVolumeLimitSize;

}

/**
 * Converts an object of type 'InstrumentationSpecNginx' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginx(obj: InstrumentationSpecNginx | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'attrs': obj.attrs?.map(y => toJson_InstrumentationSpecNginxAttrs(y)),
    'configFile': obj.configFile,
    'env': obj.env?.map(y => toJson_InstrumentationSpecNginxEnv(y)),
    'image': obj.image,
    'resourceRequirements': toJson_InstrumentationSpecNginxResourceRequirements(obj.resourceRequirements),
    'volumeClaimTemplate': toJson_InstrumentationSpecNginxVolumeClaimTemplate(obj.volumeClaimTemplate),
    'volumeLimitSize': obj.volumeLimitSize?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejs
 */
export interface InstrumentationSpecNodejs {
  /**
   * @schema InstrumentationSpecNodejs#env
   */
  readonly env?: InstrumentationSpecNodejsEnv[];

  /**
   * @schema InstrumentationSpecNodejs#image
   */
  readonly image?: string;

  /**
   * @schema InstrumentationSpecNodejs#resourceRequirements
   */
  readonly resourceRequirements?: InstrumentationSpecNodejsResourceRequirements;

  /**
   * @schema InstrumentationSpecNodejs#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: InstrumentationSpecNodejsVolumeClaimTemplate;

  /**
   * @schema InstrumentationSpecNodejs#volumeLimitSize
   */
  readonly volumeLimitSize?: InstrumentationSpecNodejsVolumeLimitSize;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejs(obj: InstrumentationSpecNodejs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'env': obj.env?.map(y => toJson_InstrumentationSpecNodejsEnv(y)),
    'image': obj.image,
    'resourceRequirements': toJson_InstrumentationSpecNodejsResourceRequirements(obj.resourceRequirements),
    'volumeClaimTemplate': toJson_InstrumentationSpecNodejsVolumeClaimTemplate(obj.volumeClaimTemplate),
    'volumeLimitSize': obj.volumeLimitSize?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPropagators
 */
export enum InstrumentationSpecPropagators {
  /** tracecontext */
  TRACECONTEXT = "tracecontext",
  /** baggage */
  BAGGAGE = "baggage",
  /** b3 */
  B3 = "b3",
  /** b3multi */
  B3MULTI = "b3multi",
  /** jaeger */
  JAEGER = "jaeger",
  /** xray */
  XRAY = "xray",
  /** ottrace */
  OTTRACE = "ottrace",
  /** none */
  NONE = "none",
}

/**
 * @schema InstrumentationSpecPython
 */
export interface InstrumentationSpecPython {
  /**
   * @schema InstrumentationSpecPython#env
   */
  readonly env?: InstrumentationSpecPythonEnv[];

  /**
   * @schema InstrumentationSpecPython#image
   */
  readonly image?: string;

  /**
   * @schema InstrumentationSpecPython#resourceRequirements
   */
  readonly resourceRequirements?: InstrumentationSpecPythonResourceRequirements;

  /**
   * @schema InstrumentationSpecPython#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: InstrumentationSpecPythonVolumeClaimTemplate;

  /**
   * @schema InstrumentationSpecPython#volumeLimitSize
   */
  readonly volumeLimitSize?: InstrumentationSpecPythonVolumeLimitSize;

}

/**
 * Converts an object of type 'InstrumentationSpecPython' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPython(obj: InstrumentationSpecPython | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'env': obj.env?.map(y => toJson_InstrumentationSpecPythonEnv(y)),
    'image': obj.image,
    'resourceRequirements': toJson_InstrumentationSpecPythonResourceRequirements(obj.resourceRequirements),
    'volumeClaimTemplate': toJson_InstrumentationSpecPythonVolumeClaimTemplate(obj.volumeClaimTemplate),
    'volumeLimitSize': obj.volumeLimitSize?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecResource
 */
export interface InstrumentationSpecResource {
  /**
   * @schema InstrumentationSpecResource#addK8sUIDAttributes
   */
  readonly addK8SUidAttributes?: boolean;

  /**
   * @schema InstrumentationSpecResource#resourceAttributes
   */
  readonly resourceAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'InstrumentationSpecResource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecResource(obj: InstrumentationSpecResource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addK8sUIDAttributes': obj.addK8SUidAttributes,
    'resourceAttributes': ((obj.resourceAttributes) === undefined) ? undefined : (Object.entries(obj.resourceAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecSampler
 */
export interface InstrumentationSpecSampler {
  /**
   * @schema InstrumentationSpecSampler#argument
   */
  readonly argument?: string;

  /**
   * @schema InstrumentationSpecSampler#type
   */
  readonly type?: InstrumentationSpecSamplerType;

}

/**
 * Converts an object of type 'InstrumentationSpecSampler' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecSampler(obj: InstrumentationSpecSampler | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'argument': obj.argument,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdAttrs
 */
export interface InstrumentationSpecApacheHttpdAttrs {
  /**
   * @schema InstrumentationSpecApacheHttpdAttrs#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrs#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrs#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecApacheHttpdAttrsValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdAttrs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdAttrs(obj: InstrumentationSpecApacheHttpdAttrs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecApacheHttpdAttrsValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdEnv
 */
export interface InstrumentationSpecApacheHttpdEnv {
  /**
   * @schema InstrumentationSpecApacheHttpdEnv#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecApacheHttpdEnv#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdEnv#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecApacheHttpdEnvValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdEnv(obj: InstrumentationSpecApacheHttpdEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecApacheHttpdEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdResourceRequirements
 */
export interface InstrumentationSpecApacheHttpdResourceRequirements {
  /**
   * @schema InstrumentationSpecApacheHttpdResourceRequirements#claims
   */
  readonly claims?: InstrumentationSpecApacheHttpdResourceRequirementsClaims[];

  /**
   * @schema InstrumentationSpecApacheHttpdResourceRequirements#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecApacheHttpdResourceRequirementsLimits };

  /**
   * @schema InstrumentationSpecApacheHttpdResourceRequirements#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecApacheHttpdResourceRequirementsRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdResourceRequirements' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdResourceRequirements(obj: InstrumentationSpecApacheHttpdResourceRequirements | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_InstrumentationSpecApacheHttpdResourceRequirementsClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplate
 */
export interface InstrumentationSpecApacheHttpdVolumeClaimTemplate {
  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplate#metadata
   */
  readonly metadata?: InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplate#spec
   */
  readonly spec: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplate(obj: InstrumentationSpecApacheHttpdVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdVolumeLimitSize
 */
export class InstrumentationSpecApacheHttpdVolumeLimitSize {
  public static fromNumber(value: number): InstrumentationSpecApacheHttpdVolumeLimitSize {
    return new InstrumentationSpecApacheHttpdVolumeLimitSize(value);
  }
  public static fromString(value: string): InstrumentationSpecApacheHttpdVolumeLimitSize {
    return new InstrumentationSpecApacheHttpdVolumeLimitSize(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecDotnetEnv
 */
export interface InstrumentationSpecDotnetEnv {
  /**
   * @schema InstrumentationSpecDotnetEnv#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecDotnetEnv#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecDotnetEnv#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecDotnetEnvValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetEnv(obj: InstrumentationSpecDotnetEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecDotnetEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetResourceRequirements
 */
export interface InstrumentationSpecDotnetResourceRequirements {
  /**
   * @schema InstrumentationSpecDotnetResourceRequirements#claims
   */
  readonly claims?: InstrumentationSpecDotnetResourceRequirementsClaims[];

  /**
   * @schema InstrumentationSpecDotnetResourceRequirements#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecDotnetResourceRequirementsLimits };

  /**
   * @schema InstrumentationSpecDotnetResourceRequirements#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecDotnetResourceRequirementsRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetResourceRequirements' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetResourceRequirements(obj: InstrumentationSpecDotnetResourceRequirements | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_InstrumentationSpecDotnetResourceRequirementsClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplate
 */
export interface InstrumentationSpecDotnetVolumeClaimTemplate {
  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplate#metadata
   */
  readonly metadata?: InstrumentationSpecDotnetVolumeClaimTemplateMetadata;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplate#spec
   */
  readonly spec: InstrumentationSpecDotnetVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetVolumeClaimTemplate(obj: InstrumentationSpecDotnetVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_InstrumentationSpecDotnetVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetVolumeLimitSize
 */
export class InstrumentationSpecDotnetVolumeLimitSize {
  public static fromNumber(value: number): InstrumentationSpecDotnetVolumeLimitSize {
    return new InstrumentationSpecDotnetVolumeLimitSize(value);
  }
  public static fromString(value: string): InstrumentationSpecDotnetVolumeLimitSize {
    return new InstrumentationSpecDotnetVolumeLimitSize(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecEnvValueFrom
 */
export interface InstrumentationSpecEnvValueFrom {
  /**
   * @schema InstrumentationSpecEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecEnvValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecEnvValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecEnvValueFromFieldRef;

  /**
   * @schema InstrumentationSpecEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecEnvValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecEnvValueFrom(obj: InstrumentationSpecEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecExporterTls
 */
export interface InstrumentationSpecExporterTls {
  /**
   * @schema InstrumentationSpecExporterTls#ca_file
   */
  readonly caFile?: string;

  /**
   * @schema InstrumentationSpecExporterTls#cert_file
   */
  readonly certFile?: string;

  /**
   * @schema InstrumentationSpecExporterTls#configMapName
   */
  readonly configMapName?: string;

  /**
   * @schema InstrumentationSpecExporterTls#key_file
   */
  readonly keyFile?: string;

  /**
   * @schema InstrumentationSpecExporterTls#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecExporterTls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecExporterTls(obj: InstrumentationSpecExporterTls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ca_file': obj.caFile,
    'cert_file': obj.certFile,
    'configMapName': obj.configMapName,
    'key_file': obj.keyFile,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoEnv
 */
export interface InstrumentationSpecGoEnv {
  /**
   * @schema InstrumentationSpecGoEnv#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecGoEnv#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecGoEnv#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecGoEnvValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecGoEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoEnv(obj: InstrumentationSpecGoEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecGoEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoResourceRequirements
 */
export interface InstrumentationSpecGoResourceRequirements {
  /**
   * @schema InstrumentationSpecGoResourceRequirements#claims
   */
  readonly claims?: InstrumentationSpecGoResourceRequirementsClaims[];

  /**
   * @schema InstrumentationSpecGoResourceRequirements#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecGoResourceRequirementsLimits };

  /**
   * @schema InstrumentationSpecGoResourceRequirements#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecGoResourceRequirementsRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecGoResourceRequirements' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoResourceRequirements(obj: InstrumentationSpecGoResourceRequirements | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_InstrumentationSpecGoResourceRequirementsClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplate
 */
export interface InstrumentationSpecGoVolumeClaimTemplate {
  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplate#metadata
   */
  readonly metadata?: InstrumentationSpecGoVolumeClaimTemplateMetadata;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplate#spec
   */
  readonly spec: InstrumentationSpecGoVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'InstrumentationSpecGoVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoVolumeClaimTemplate(obj: InstrumentationSpecGoVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_InstrumentationSpecGoVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_InstrumentationSpecGoVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoVolumeLimitSize
 */
export class InstrumentationSpecGoVolumeLimitSize {
  public static fromNumber(value: number): InstrumentationSpecGoVolumeLimitSize {
    return new InstrumentationSpecGoVolumeLimitSize(value);
  }
  public static fromString(value: string): InstrumentationSpecGoVolumeLimitSize {
    return new InstrumentationSpecGoVolumeLimitSize(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecJavaEnv
 */
export interface InstrumentationSpecJavaEnv {
  /**
   * @schema InstrumentationSpecJavaEnv#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecJavaEnv#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecJavaEnv#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecJavaEnvValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaEnv(obj: InstrumentationSpecJavaEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecJavaEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaExtensions
 */
export interface InstrumentationSpecJavaExtensions {
  /**
   * @schema InstrumentationSpecJavaExtensions#dir
   */
  readonly dir: string;

  /**
   * @schema InstrumentationSpecJavaExtensions#image
   */
  readonly image: string;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaExtensions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaExtensions(obj: InstrumentationSpecJavaExtensions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'dir': obj.dir,
    'image': obj.image,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaResources
 */
export interface InstrumentationSpecJavaResources {
  /**
   * @schema InstrumentationSpecJavaResources#claims
   */
  readonly claims?: InstrumentationSpecJavaResourcesClaims[];

  /**
   * @schema InstrumentationSpecJavaResources#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecJavaResourcesLimits };

  /**
   * @schema InstrumentationSpecJavaResources#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecJavaResourcesRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecJavaResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaResources(obj: InstrumentationSpecJavaResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_InstrumentationSpecJavaResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplate
 */
export interface InstrumentationSpecJavaVolumeClaimTemplate {
  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplate#metadata
   */
  readonly metadata?: InstrumentationSpecJavaVolumeClaimTemplateMetadata;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplate#spec
   */
  readonly spec: InstrumentationSpecJavaVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaVolumeClaimTemplate(obj: InstrumentationSpecJavaVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_InstrumentationSpecJavaVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_InstrumentationSpecJavaVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaVolumeLimitSize
 */
export class InstrumentationSpecJavaVolumeLimitSize {
  public static fromNumber(value: number): InstrumentationSpecJavaVolumeLimitSize {
    return new InstrumentationSpecJavaVolumeLimitSize(value);
  }
  public static fromString(value: string): InstrumentationSpecJavaVolumeLimitSize {
    return new InstrumentationSpecJavaVolumeLimitSize(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNginxAttrs
 */
export interface InstrumentationSpecNginxAttrs {
  /**
   * @schema InstrumentationSpecNginxAttrs#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecNginxAttrs#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecNginxAttrs#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecNginxAttrsValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxAttrs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxAttrs(obj: InstrumentationSpecNginxAttrs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecNginxAttrsValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxEnv
 */
export interface InstrumentationSpecNginxEnv {
  /**
   * @schema InstrumentationSpecNginxEnv#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecNginxEnv#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecNginxEnv#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecNginxEnvValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxEnv(obj: InstrumentationSpecNginxEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecNginxEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxResourceRequirements
 */
export interface InstrumentationSpecNginxResourceRequirements {
  /**
   * @schema InstrumentationSpecNginxResourceRequirements#claims
   */
  readonly claims?: InstrumentationSpecNginxResourceRequirementsClaims[];

  /**
   * @schema InstrumentationSpecNginxResourceRequirements#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecNginxResourceRequirementsLimits };

  /**
   * @schema InstrumentationSpecNginxResourceRequirements#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecNginxResourceRequirementsRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecNginxResourceRequirements' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxResourceRequirements(obj: InstrumentationSpecNginxResourceRequirements | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_InstrumentationSpecNginxResourceRequirementsClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplate
 */
export interface InstrumentationSpecNginxVolumeClaimTemplate {
  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplate#metadata
   */
  readonly metadata?: InstrumentationSpecNginxVolumeClaimTemplateMetadata;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplate#spec
   */
  readonly spec: InstrumentationSpecNginxVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxVolumeClaimTemplate(obj: InstrumentationSpecNginxVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_InstrumentationSpecNginxVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_InstrumentationSpecNginxVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxVolumeLimitSize
 */
export class InstrumentationSpecNginxVolumeLimitSize {
  public static fromNumber(value: number): InstrumentationSpecNginxVolumeLimitSize {
    return new InstrumentationSpecNginxVolumeLimitSize(value);
  }
  public static fromString(value: string): InstrumentationSpecNginxVolumeLimitSize {
    return new InstrumentationSpecNginxVolumeLimitSize(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNodejsEnv
 */
export interface InstrumentationSpecNodejsEnv {
  /**
   * @schema InstrumentationSpecNodejsEnv#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecNodejsEnv#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecNodejsEnv#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecNodejsEnvValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsEnv(obj: InstrumentationSpecNodejsEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecNodejsEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsResourceRequirements
 */
export interface InstrumentationSpecNodejsResourceRequirements {
  /**
   * @schema InstrumentationSpecNodejsResourceRequirements#claims
   */
  readonly claims?: InstrumentationSpecNodejsResourceRequirementsClaims[];

  /**
   * @schema InstrumentationSpecNodejsResourceRequirements#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecNodejsResourceRequirementsLimits };

  /**
   * @schema InstrumentationSpecNodejsResourceRequirements#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecNodejsResourceRequirementsRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsResourceRequirements' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsResourceRequirements(obj: InstrumentationSpecNodejsResourceRequirements | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_InstrumentationSpecNodejsResourceRequirementsClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplate
 */
export interface InstrumentationSpecNodejsVolumeClaimTemplate {
  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplate#metadata
   */
  readonly metadata?: InstrumentationSpecNodejsVolumeClaimTemplateMetadata;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplate#spec
   */
  readonly spec: InstrumentationSpecNodejsVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsVolumeClaimTemplate(obj: InstrumentationSpecNodejsVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_InstrumentationSpecNodejsVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsVolumeLimitSize
 */
export class InstrumentationSpecNodejsVolumeLimitSize {
  public static fromNumber(value: number): InstrumentationSpecNodejsVolumeLimitSize {
    return new InstrumentationSpecNodejsVolumeLimitSize(value);
  }
  public static fromString(value: string): InstrumentationSpecNodejsVolumeLimitSize {
    return new InstrumentationSpecNodejsVolumeLimitSize(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecPythonEnv
 */
export interface InstrumentationSpecPythonEnv {
  /**
   * @schema InstrumentationSpecPythonEnv#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecPythonEnv#value
   */
  readonly value?: string;

  /**
   * @schema InstrumentationSpecPythonEnv#valueFrom
   */
  readonly valueFrom?: InstrumentationSpecPythonEnvValueFrom;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonEnv(obj: InstrumentationSpecPythonEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_InstrumentationSpecPythonEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonResourceRequirements
 */
export interface InstrumentationSpecPythonResourceRequirements {
  /**
   * @schema InstrumentationSpecPythonResourceRequirements#claims
   */
  readonly claims?: InstrumentationSpecPythonResourceRequirementsClaims[];

  /**
   * @schema InstrumentationSpecPythonResourceRequirements#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecPythonResourceRequirementsLimits };

  /**
   * @schema InstrumentationSpecPythonResourceRequirements#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecPythonResourceRequirementsRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecPythonResourceRequirements' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonResourceRequirements(obj: InstrumentationSpecPythonResourceRequirements | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_InstrumentationSpecPythonResourceRequirementsClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplate
 */
export interface InstrumentationSpecPythonVolumeClaimTemplate {
  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplate#metadata
   */
  readonly metadata?: InstrumentationSpecPythonVolumeClaimTemplateMetadata;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplate#spec
   */
  readonly spec: InstrumentationSpecPythonVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonVolumeClaimTemplate(obj: InstrumentationSpecPythonVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_InstrumentationSpecPythonVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_InstrumentationSpecPythonVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonVolumeLimitSize
 */
export class InstrumentationSpecPythonVolumeLimitSize {
  public static fromNumber(value: number): InstrumentationSpecPythonVolumeLimitSize {
    return new InstrumentationSpecPythonVolumeLimitSize(value);
  }
  public static fromString(value: string): InstrumentationSpecPythonVolumeLimitSize {
    return new InstrumentationSpecPythonVolumeLimitSize(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecSamplerType
 */
export enum InstrumentationSpecSamplerType {
  /** always_on */
  ALWAYS_UNDERSCORE_ON = "always_on",
  /** always_off */
  ALWAYS_UNDERSCORE_OFF = "always_off",
  /** traceidratio */
  TRACEIDRATIO = "traceidratio",
  /** parentbased_always_on */
  PARENTBASED_UNDERSCORE_ALWAYS_UNDERSCORE_ON = "parentbased_always_on",
  /** parentbased_always_off */
  PARENTBASED_UNDERSCORE_ALWAYS_UNDERSCORE_OFF = "parentbased_always_off",
  /** parentbased_traceidratio */
  PARENTBASED_UNDERSCORE_TRACEIDRATIO = "parentbased_traceidratio",
  /** jaeger_remote */
  JAEGER_UNDERSCORE_REMOTE = "jaeger_remote",
  /** xray */
  XRAY = "xray",
}

/**
 * @schema InstrumentationSpecApacheHttpdAttrsValueFrom
 */
export interface InstrumentationSpecApacheHttpdAttrsValueFrom {
  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecApacheHttpdAttrsValueFromFieldRef;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdAttrsValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdAttrsValueFrom(obj: InstrumentationSpecApacheHttpdAttrsValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecApacheHttpdAttrsValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdEnvValueFrom
 */
export interface InstrumentationSpecApacheHttpdEnvValueFrom {
  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecApacheHttpdEnvValueFromFieldRef;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdEnvValueFrom(obj: InstrumentationSpecApacheHttpdEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecApacheHttpdEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdResourceRequirementsClaims
 */
export interface InstrumentationSpecApacheHttpdResourceRequirementsClaims {
  /**
   * @schema InstrumentationSpecApacheHttpdResourceRequirementsClaims#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecApacheHttpdResourceRequirementsClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdResourceRequirementsClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdResourceRequirementsClaims(obj: InstrumentationSpecApacheHttpdResourceRequirementsClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdResourceRequirementsLimits
 */
export class InstrumentationSpecApacheHttpdResourceRequirementsLimits {
  public static fromNumber(value: number): InstrumentationSpecApacheHttpdResourceRequirementsLimits {
    return new InstrumentationSpecApacheHttpdResourceRequirementsLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecApacheHttpdResourceRequirementsLimits {
    return new InstrumentationSpecApacheHttpdResourceRequirementsLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecApacheHttpdResourceRequirementsRequests
 */
export class InstrumentationSpecApacheHttpdResourceRequirementsRequests {
  public static fromNumber(value: number): InstrumentationSpecApacheHttpdResourceRequirementsRequests {
    return new InstrumentationSpecApacheHttpdResourceRequirementsRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecApacheHttpdResourceRequirementsRequests {
    return new InstrumentationSpecApacheHttpdResourceRequirementsRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata
 */
export interface InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata {
  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata(obj: InstrumentationSpecApacheHttpdVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec
 */
export interface InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec {
  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#resources
   */
  readonly resources?: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#selector
   */
  readonly selector?: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec(obj: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetEnvValueFrom
 */
export interface InstrumentationSpecDotnetEnvValueFrom {
  /**
   * @schema InstrumentationSpecDotnetEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecDotnetEnvValueFromFieldRef;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecDotnetEnvValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecDotnetEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetEnvValueFrom(obj: InstrumentationSpecDotnetEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecDotnetEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecDotnetEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecDotnetEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetResourceRequirementsClaims
 */
export interface InstrumentationSpecDotnetResourceRequirementsClaims {
  /**
   * @schema InstrumentationSpecDotnetResourceRequirementsClaims#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecDotnetResourceRequirementsClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetResourceRequirementsClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetResourceRequirementsClaims(obj: InstrumentationSpecDotnetResourceRequirementsClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetResourceRequirementsLimits
 */
export class InstrumentationSpecDotnetResourceRequirementsLimits {
  public static fromNumber(value: number): InstrumentationSpecDotnetResourceRequirementsLimits {
    return new InstrumentationSpecDotnetResourceRequirementsLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecDotnetResourceRequirementsLimits {
    return new InstrumentationSpecDotnetResourceRequirementsLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecDotnetResourceRequirementsRequests
 */
export class InstrumentationSpecDotnetResourceRequirementsRequests {
  public static fromNumber(value: number): InstrumentationSpecDotnetResourceRequirementsRequests {
    return new InstrumentationSpecDotnetResourceRequirementsRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecDotnetResourceRequirementsRequests {
    return new InstrumentationSpecDotnetResourceRequirementsRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateMetadata
 */
export interface InstrumentationSpecDotnetVolumeClaimTemplateMetadata {
  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetVolumeClaimTemplateMetadata(obj: InstrumentationSpecDotnetVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec
 */
export interface InstrumentationSpecDotnetVolumeClaimTemplateSpec {
  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#resources
   */
  readonly resources?: InstrumentationSpecDotnetVolumeClaimTemplateSpecResources;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#selector
   */
  readonly selector?: InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpec(obj: InstrumentationSpecDotnetVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecEnvValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecEnvValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecEnvValueFromConfigMapKeyRef(obj: InstrumentationSpecEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecEnvValueFromFieldRef
 */
export interface InstrumentationSpecEnvValueFromFieldRef {
  /**
   * @schema InstrumentationSpecEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecEnvValueFromFieldRef(obj: InstrumentationSpecEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecEnvValueFromResourceFieldRef
 */
export interface InstrumentationSpecEnvValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecEnvValueFromResourceFieldRef(obj: InstrumentationSpecEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecEnvValueFromSecretKeyRef
 */
export interface InstrumentationSpecEnvValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecEnvValueFromSecretKeyRef(obj: InstrumentationSpecEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoEnvValueFrom
 */
export interface InstrumentationSpecGoEnvValueFrom {
  /**
   * @schema InstrumentationSpecGoEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecGoEnvValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecGoEnvValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecGoEnvValueFromFieldRef;

  /**
   * @schema InstrumentationSpecGoEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecGoEnvValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecGoEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecGoEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecGoEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoEnvValueFrom(obj: InstrumentationSpecGoEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecGoEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecGoEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecGoEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecGoEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoResourceRequirementsClaims
 */
export interface InstrumentationSpecGoResourceRequirementsClaims {
  /**
   * @schema InstrumentationSpecGoResourceRequirementsClaims#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecGoResourceRequirementsClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecGoResourceRequirementsClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoResourceRequirementsClaims(obj: InstrumentationSpecGoResourceRequirementsClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoResourceRequirementsLimits
 */
export class InstrumentationSpecGoResourceRequirementsLimits {
  public static fromNumber(value: number): InstrumentationSpecGoResourceRequirementsLimits {
    return new InstrumentationSpecGoResourceRequirementsLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecGoResourceRequirementsLimits {
    return new InstrumentationSpecGoResourceRequirementsLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecGoResourceRequirementsRequests
 */
export class InstrumentationSpecGoResourceRequirementsRequests {
  public static fromNumber(value: number): InstrumentationSpecGoResourceRequirementsRequests {
    return new InstrumentationSpecGoResourceRequirementsRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecGoResourceRequirementsRequests {
    return new InstrumentationSpecGoResourceRequirementsRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateMetadata
 */
export interface InstrumentationSpecGoVolumeClaimTemplateMetadata {
  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecGoVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoVolumeClaimTemplateMetadata(obj: InstrumentationSpecGoVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateSpec
 */
export interface InstrumentationSpecGoVolumeClaimTemplateSpec {
  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: InstrumentationSpecGoVolumeClaimTemplateSpecDataSource;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#resources
   */
  readonly resources?: InstrumentationSpecGoVolumeClaimTemplateSpecResources;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#selector
   */
  readonly selector?: InstrumentationSpecGoVolumeClaimTemplateSpecSelector;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecGoVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoVolumeClaimTemplateSpec(obj: InstrumentationSpecGoVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_InstrumentationSpecGoVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_InstrumentationSpecGoVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_InstrumentationSpecGoVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaEnvValueFrom
 */
export interface InstrumentationSpecJavaEnvValueFrom {
  /**
   * @schema InstrumentationSpecJavaEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecJavaEnvValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecJavaEnvValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecJavaEnvValueFromFieldRef;

  /**
   * @schema InstrumentationSpecJavaEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecJavaEnvValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecJavaEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecJavaEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaEnvValueFrom(obj: InstrumentationSpecJavaEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecJavaEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecJavaEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecJavaEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecJavaEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaResourcesClaims
 */
export interface InstrumentationSpecJavaResourcesClaims {
  /**
   * @schema InstrumentationSpecJavaResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecJavaResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaResourcesClaims(obj: InstrumentationSpecJavaResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaResourcesLimits
 */
export class InstrumentationSpecJavaResourcesLimits {
  public static fromNumber(value: number): InstrumentationSpecJavaResourcesLimits {
    return new InstrumentationSpecJavaResourcesLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecJavaResourcesLimits {
    return new InstrumentationSpecJavaResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecJavaResourcesRequests
 */
export class InstrumentationSpecJavaResourcesRequests {
  public static fromNumber(value: number): InstrumentationSpecJavaResourcesRequests {
    return new InstrumentationSpecJavaResourcesRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecJavaResourcesRequests {
    return new InstrumentationSpecJavaResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateMetadata
 */
export interface InstrumentationSpecJavaVolumeClaimTemplateMetadata {
  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaVolumeClaimTemplateMetadata(obj: InstrumentationSpecJavaVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec
 */
export interface InstrumentationSpecJavaVolumeClaimTemplateSpec {
  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#resources
   */
  readonly resources?: InstrumentationSpecJavaVolumeClaimTemplateSpecResources;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#selector
   */
  readonly selector?: InstrumentationSpecJavaVolumeClaimTemplateSpecSelector;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaVolumeClaimTemplateSpec(obj: InstrumentationSpecJavaVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxAttrsValueFrom
 */
export interface InstrumentationSpecNginxAttrsValueFrom {
  /**
   * @schema InstrumentationSpecNginxAttrsValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecNginxAttrsValueFromFieldRef;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecNginxAttrsValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecNginxAttrsValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxAttrsValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxAttrsValueFrom(obj: InstrumentationSpecNginxAttrsValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecNginxAttrsValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecNginxAttrsValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecNginxAttrsValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxEnvValueFrom
 */
export interface InstrumentationSpecNginxEnvValueFrom {
  /**
   * @schema InstrumentationSpecNginxEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecNginxEnvValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecNginxEnvValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecNginxEnvValueFromFieldRef;

  /**
   * @schema InstrumentationSpecNginxEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecNginxEnvValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecNginxEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecNginxEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxEnvValueFrom(obj: InstrumentationSpecNginxEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecNginxEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecNginxEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecNginxEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecNginxEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxResourceRequirementsClaims
 */
export interface InstrumentationSpecNginxResourceRequirementsClaims {
  /**
   * @schema InstrumentationSpecNginxResourceRequirementsClaims#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecNginxResourceRequirementsClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxResourceRequirementsClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxResourceRequirementsClaims(obj: InstrumentationSpecNginxResourceRequirementsClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxResourceRequirementsLimits
 */
export class InstrumentationSpecNginxResourceRequirementsLimits {
  public static fromNumber(value: number): InstrumentationSpecNginxResourceRequirementsLimits {
    return new InstrumentationSpecNginxResourceRequirementsLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecNginxResourceRequirementsLimits {
    return new InstrumentationSpecNginxResourceRequirementsLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNginxResourceRequirementsRequests
 */
export class InstrumentationSpecNginxResourceRequirementsRequests {
  public static fromNumber(value: number): InstrumentationSpecNginxResourceRequirementsRequests {
    return new InstrumentationSpecNginxResourceRequirementsRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecNginxResourceRequirementsRequests {
    return new InstrumentationSpecNginxResourceRequirementsRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateMetadata
 */
export interface InstrumentationSpecNginxVolumeClaimTemplateMetadata {
  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxVolumeClaimTemplateMetadata(obj: InstrumentationSpecNginxVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec
 */
export interface InstrumentationSpecNginxVolumeClaimTemplateSpec {
  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#resources
   */
  readonly resources?: InstrumentationSpecNginxVolumeClaimTemplateSpecResources;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#selector
   */
  readonly selector?: InstrumentationSpecNginxVolumeClaimTemplateSpecSelector;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxVolumeClaimTemplateSpec(obj: InstrumentationSpecNginxVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsEnvValueFrom
 */
export interface InstrumentationSpecNodejsEnvValueFrom {
  /**
   * @schema InstrumentationSpecNodejsEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecNodejsEnvValueFromFieldRef;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecNodejsEnvValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecNodejsEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsEnvValueFrom(obj: InstrumentationSpecNodejsEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecNodejsEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecNodejsEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecNodejsEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsResourceRequirementsClaims
 */
export interface InstrumentationSpecNodejsResourceRequirementsClaims {
  /**
   * @schema InstrumentationSpecNodejsResourceRequirementsClaims#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecNodejsResourceRequirementsClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsResourceRequirementsClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsResourceRequirementsClaims(obj: InstrumentationSpecNodejsResourceRequirementsClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsResourceRequirementsLimits
 */
export class InstrumentationSpecNodejsResourceRequirementsLimits {
  public static fromNumber(value: number): InstrumentationSpecNodejsResourceRequirementsLimits {
    return new InstrumentationSpecNodejsResourceRequirementsLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecNodejsResourceRequirementsLimits {
    return new InstrumentationSpecNodejsResourceRequirementsLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNodejsResourceRequirementsRequests
 */
export class InstrumentationSpecNodejsResourceRequirementsRequests {
  public static fromNumber(value: number): InstrumentationSpecNodejsResourceRequirementsRequests {
    return new InstrumentationSpecNodejsResourceRequirementsRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecNodejsResourceRequirementsRequests {
    return new InstrumentationSpecNodejsResourceRequirementsRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateMetadata
 */
export interface InstrumentationSpecNodejsVolumeClaimTemplateMetadata {
  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsVolumeClaimTemplateMetadata(obj: InstrumentationSpecNodejsVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec
 */
export interface InstrumentationSpecNodejsVolumeClaimTemplateSpec {
  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#resources
   */
  readonly resources?: InstrumentationSpecNodejsVolumeClaimTemplateSpecResources;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#selector
   */
  readonly selector?: InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpec(obj: InstrumentationSpecNodejsVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonEnvValueFrom
 */
export interface InstrumentationSpecPythonEnvValueFrom {
  /**
   * @schema InstrumentationSpecPythonEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: InstrumentationSpecPythonEnvValueFromConfigMapKeyRef;

  /**
   * @schema InstrumentationSpecPythonEnvValueFrom#fieldRef
   */
  readonly fieldRef?: InstrumentationSpecPythonEnvValueFromFieldRef;

  /**
   * @schema InstrumentationSpecPythonEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: InstrumentationSpecPythonEnvValueFromResourceFieldRef;

  /**
   * @schema InstrumentationSpecPythonEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: InstrumentationSpecPythonEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonEnvValueFrom(obj: InstrumentationSpecPythonEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_InstrumentationSpecPythonEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_InstrumentationSpecPythonEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_InstrumentationSpecPythonEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_InstrumentationSpecPythonEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonResourceRequirementsClaims
 */
export interface InstrumentationSpecPythonResourceRequirementsClaims {
  /**
   * @schema InstrumentationSpecPythonResourceRequirementsClaims#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecPythonResourceRequirementsClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonResourceRequirementsClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonResourceRequirementsClaims(obj: InstrumentationSpecPythonResourceRequirementsClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonResourceRequirementsLimits
 */
export class InstrumentationSpecPythonResourceRequirementsLimits {
  public static fromNumber(value: number): InstrumentationSpecPythonResourceRequirementsLimits {
    return new InstrumentationSpecPythonResourceRequirementsLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecPythonResourceRequirementsLimits {
    return new InstrumentationSpecPythonResourceRequirementsLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecPythonResourceRequirementsRequests
 */
export class InstrumentationSpecPythonResourceRequirementsRequests {
  public static fromNumber(value: number): InstrumentationSpecPythonResourceRequirementsRequests {
    return new InstrumentationSpecPythonResourceRequirementsRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecPythonResourceRequirementsRequests {
    return new InstrumentationSpecPythonResourceRequirementsRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateMetadata
 */
export interface InstrumentationSpecPythonVolumeClaimTemplateMetadata {
  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonVolumeClaimTemplateMetadata(obj: InstrumentationSpecPythonVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec
 */
export interface InstrumentationSpecPythonVolumeClaimTemplateSpec {
  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#resources
   */
  readonly resources?: InstrumentationSpecPythonVolumeClaimTemplateSpecResources;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#selector
   */
  readonly selector?: InstrumentationSpecPythonVolumeClaimTemplateSpecSelector;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonVolumeClaimTemplateSpec(obj: InstrumentationSpecPythonVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef(obj: InstrumentationSpecApacheHttpdAttrsValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdAttrsValueFromFieldRef
 */
export interface InstrumentationSpecApacheHttpdAttrsValueFromFieldRef {
  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdAttrsValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdAttrsValueFromFieldRef(obj: InstrumentationSpecApacheHttpdAttrsValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef
 */
export interface InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef(obj: InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef
 */
export interface InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef(obj: InstrumentationSpecApacheHttpdAttrsValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef(obj: InstrumentationSpecApacheHttpdEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdEnvValueFromFieldRef
 */
export interface InstrumentationSpecApacheHttpdEnvValueFromFieldRef {
  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdEnvValueFromFieldRef(obj: InstrumentationSpecApacheHttpdEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef
 */
export interface InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef(obj: InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef
 */
export interface InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef(obj: InstrumentationSpecApacheHttpdEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource
 */
export interface InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource {
  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource(obj: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef
 */
export interface InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef(obj: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources
 */
export interface InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources {
  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources(obj: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector
 */
export interface InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector {
  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector(obj: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef(obj: InstrumentationSpecDotnetEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetEnvValueFromFieldRef
 */
export interface InstrumentationSpecDotnetEnvValueFromFieldRef {
  /**
   * @schema InstrumentationSpecDotnetEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetEnvValueFromFieldRef(obj: InstrumentationSpecDotnetEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetEnvValueFromResourceFieldRef
 */
export interface InstrumentationSpecDotnetEnvValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecDotnetEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecDotnetEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetEnvValueFromResourceFieldRef(obj: InstrumentationSpecDotnetEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetEnvValueFromSecretKeyRef
 */
export interface InstrumentationSpecDotnetEnvValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecDotnetEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecDotnetEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetEnvValueFromSecretKeyRef(obj: InstrumentationSpecDotnetEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource
 */
export interface InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource {
  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource(obj: InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef
 */
export interface InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef(obj: InstrumentationSpecDotnetVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecResources
 */
export interface InstrumentationSpecDotnetVolumeClaimTemplateSpecResources {
  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecResources(obj: InstrumentationSpecDotnetVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector
 */
export interface InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector {
  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector(obj: InstrumentationSpecDotnetVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecEnvValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecGoEnvValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecGoEnvValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecGoEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecGoEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecGoEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecGoEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoEnvValueFromConfigMapKeyRef(obj: InstrumentationSpecGoEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoEnvValueFromFieldRef
 */
export interface InstrumentationSpecGoEnvValueFromFieldRef {
  /**
   * @schema InstrumentationSpecGoEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecGoEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecGoEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoEnvValueFromFieldRef(obj: InstrumentationSpecGoEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoEnvValueFromResourceFieldRef
 */
export interface InstrumentationSpecGoEnvValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecGoEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecGoEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecGoEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecGoEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecGoEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoEnvValueFromResourceFieldRef(obj: InstrumentationSpecGoEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoEnvValueFromSecretKeyRef
 */
export interface InstrumentationSpecGoEnvValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecGoEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecGoEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecGoEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecGoEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoEnvValueFromSecretKeyRef(obj: InstrumentationSpecGoEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSource
 */
export interface InstrumentationSpecGoVolumeClaimTemplateSpecDataSource {
  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'InstrumentationSpecGoVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoVolumeClaimTemplateSpecDataSource(obj: InstrumentationSpecGoVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef
 */
export interface InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef(obj: InstrumentationSpecGoVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateSpecResources
 */
export interface InstrumentationSpecGoVolumeClaimTemplateSpecResources {
  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecGoVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecGoVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecGoVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoVolumeClaimTemplateSpecResources(obj: InstrumentationSpecGoVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateSpecSelector
 */
export interface InstrumentationSpecGoVolumeClaimTemplateSpecSelector {
  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'InstrumentationSpecGoVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoVolumeClaimTemplateSpecSelector(obj: InstrumentationSpecGoVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaEnvValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecJavaEnvValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecJavaEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecJavaEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecJavaEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaEnvValueFromConfigMapKeyRef(obj: InstrumentationSpecJavaEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaEnvValueFromFieldRef
 */
export interface InstrumentationSpecJavaEnvValueFromFieldRef {
  /**
   * @schema InstrumentationSpecJavaEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecJavaEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaEnvValueFromFieldRef(obj: InstrumentationSpecJavaEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaEnvValueFromResourceFieldRef
 */
export interface InstrumentationSpecJavaEnvValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecJavaEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecJavaEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecJavaEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecJavaEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaEnvValueFromResourceFieldRef(obj: InstrumentationSpecJavaEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaEnvValueFromSecretKeyRef
 */
export interface InstrumentationSpecJavaEnvValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecJavaEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecJavaEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecJavaEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaEnvValueFromSecretKeyRef(obj: InstrumentationSpecJavaEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource
 */
export interface InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource {
  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource(obj: InstrumentationSpecJavaVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef
 */
export interface InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef(obj: InstrumentationSpecJavaVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecResources
 */
export interface InstrumentationSpecJavaVolumeClaimTemplateSpecResources {
  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecJavaVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecResources(obj: InstrumentationSpecJavaVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecSelector
 */
export interface InstrumentationSpecJavaVolumeClaimTemplateSpecSelector {
  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'InstrumentationSpecJavaVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecSelector(obj: InstrumentationSpecJavaVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef(obj: InstrumentationSpecNginxAttrsValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxAttrsValueFromFieldRef
 */
export interface InstrumentationSpecNginxAttrsValueFromFieldRef {
  /**
   * @schema InstrumentationSpecNginxAttrsValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxAttrsValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxAttrsValueFromFieldRef(obj: InstrumentationSpecNginxAttrsValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxAttrsValueFromResourceFieldRef
 */
export interface InstrumentationSpecNginxAttrsValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecNginxAttrsValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecNginxAttrsValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxAttrsValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxAttrsValueFromResourceFieldRef(obj: InstrumentationSpecNginxAttrsValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxAttrsValueFromSecretKeyRef
 */
export interface InstrumentationSpecNginxAttrsValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecNginxAttrsValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecNginxAttrsValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxAttrsValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxAttrsValueFromSecretKeyRef(obj: InstrumentationSpecNginxAttrsValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxEnvValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecNginxEnvValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecNginxEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecNginxEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecNginxEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxEnvValueFromConfigMapKeyRef(obj: InstrumentationSpecNginxEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxEnvValueFromFieldRef
 */
export interface InstrumentationSpecNginxEnvValueFromFieldRef {
  /**
   * @schema InstrumentationSpecNginxEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecNginxEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxEnvValueFromFieldRef(obj: InstrumentationSpecNginxEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxEnvValueFromResourceFieldRef
 */
export interface InstrumentationSpecNginxEnvValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecNginxEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecNginxEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecNginxEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecNginxEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxEnvValueFromResourceFieldRef(obj: InstrumentationSpecNginxEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxEnvValueFromSecretKeyRef
 */
export interface InstrumentationSpecNginxEnvValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecNginxEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecNginxEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecNginxEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxEnvValueFromSecretKeyRef(obj: InstrumentationSpecNginxEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource
 */
export interface InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource {
  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource(obj: InstrumentationSpecNginxVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef
 */
export interface InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef(obj: InstrumentationSpecNginxVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecResources
 */
export interface InstrumentationSpecNginxVolumeClaimTemplateSpecResources {
  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecNginxVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecResources(obj: InstrumentationSpecNginxVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecSelector
 */
export interface InstrumentationSpecNginxVolumeClaimTemplateSpecSelector {
  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'InstrumentationSpecNginxVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecSelector(obj: InstrumentationSpecNginxVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef(obj: InstrumentationSpecNodejsEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsEnvValueFromFieldRef
 */
export interface InstrumentationSpecNodejsEnvValueFromFieldRef {
  /**
   * @schema InstrumentationSpecNodejsEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsEnvValueFromFieldRef(obj: InstrumentationSpecNodejsEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsEnvValueFromResourceFieldRef
 */
export interface InstrumentationSpecNodejsEnvValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecNodejsEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecNodejsEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsEnvValueFromResourceFieldRef(obj: InstrumentationSpecNodejsEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsEnvValueFromSecretKeyRef
 */
export interface InstrumentationSpecNodejsEnvValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecNodejsEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecNodejsEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsEnvValueFromSecretKeyRef(obj: InstrumentationSpecNodejsEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource
 */
export interface InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource {
  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource(obj: InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef
 */
export interface InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef(obj: InstrumentationSpecNodejsVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecResources
 */
export interface InstrumentationSpecNodejsVolumeClaimTemplateSpecResources {
  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecResources(obj: InstrumentationSpecNodejsVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector
 */
export interface InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector {
  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector(obj: InstrumentationSpecNodejsVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonEnvValueFromConfigMapKeyRef
 */
export interface InstrumentationSpecPythonEnvValueFromConfigMapKeyRef {
  /**
   * @schema InstrumentationSpecPythonEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecPythonEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecPythonEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonEnvValueFromConfigMapKeyRef(obj: InstrumentationSpecPythonEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonEnvValueFromFieldRef
 */
export interface InstrumentationSpecPythonEnvValueFromFieldRef {
  /**
   * @schema InstrumentationSpecPythonEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema InstrumentationSpecPythonEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonEnvValueFromFieldRef(obj: InstrumentationSpecPythonEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonEnvValueFromResourceFieldRef
 */
export interface InstrumentationSpecPythonEnvValueFromResourceFieldRef {
  /**
   * @schema InstrumentationSpecPythonEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema InstrumentationSpecPythonEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: InstrumentationSpecPythonEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema InstrumentationSpecPythonEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonEnvValueFromResourceFieldRef(obj: InstrumentationSpecPythonEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonEnvValueFromSecretKeyRef
 */
export interface InstrumentationSpecPythonEnvValueFromSecretKeyRef {
  /**
   * @schema InstrumentationSpecPythonEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecPythonEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema InstrumentationSpecPythonEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonEnvValueFromSecretKeyRef(obj: InstrumentationSpecPythonEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource
 */
export interface InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource {
  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource(obj: InstrumentationSpecPythonVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef
 */
export interface InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef(obj: InstrumentationSpecPythonVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecResources
 */
export interface InstrumentationSpecPythonVolumeClaimTemplateSpecResources {
  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'InstrumentationSpecPythonVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecResources(obj: InstrumentationSpecPythonVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecSelector
 */
export interface InstrumentationSpecPythonVolumeClaimTemplateSpecSelector {
  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'InstrumentationSpecPythonVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecSelector(obj: InstrumentationSpecPythonVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecApacheHttpdAttrsValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecApacheHttpdEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesLimits
 */
export class InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesRequests
 */
export class InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions(obj: InstrumentationSpecApacheHttpdVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecDotnetEnvValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecDotnetEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecDotnetEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecDotnetEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecDotnetEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecDotnetEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesLimits
 */
export class InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesRequests
 */
export class InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecDotnetVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions(obj: InstrumentationSpecDotnetVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecGoEnvValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecGoEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecGoEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecGoEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecGoEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecGoEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateSpecResourcesLimits
 */
export class InstrumentationSpecGoVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): InstrumentationSpecGoVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecGoVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecGoVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecGoVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateSpecResourcesRequests
 */
export class InstrumentationSpecGoVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): InstrumentationSpecGoVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecGoVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecGoVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecGoVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions(obj: InstrumentationSpecGoVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecJavaEnvValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecJavaEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecJavaEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecJavaEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecJavaEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecJavaEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesLimits
 */
export class InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesRequests
 */
export class InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecJavaVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions(obj: InstrumentationSpecJavaVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNginxAttrsValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecNginxAttrsValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecNginxAttrsValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecNginxAttrsValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecNginxAttrsValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecNginxAttrsValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNginxEnvValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecNginxEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecNginxEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecNginxEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecNginxEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecNginxEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesLimits
 */
export class InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesRequests
 */
export class InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecNginxVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions(obj: InstrumentationSpecNginxVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecNodejsEnvValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecNodejsEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecNodejsEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecNodejsEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecNodejsEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecNodejsEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesLimits
 */
export class InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesRequests
 */
export class InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecNodejsVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions(obj: InstrumentationSpecNodejsVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema InstrumentationSpecPythonEnvValueFromResourceFieldRefDivisor
 */
export class InstrumentationSpecPythonEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): InstrumentationSpecPythonEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecPythonEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): InstrumentationSpecPythonEnvValueFromResourceFieldRefDivisor {
    return new InstrumentationSpecPythonEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesLimits
 */
export class InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesLimits {
    return new InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesRequests
 */
export class InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesRequests {
    return new InstrumentationSpecPythonVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions(obj: InstrumentationSpecPythonVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema OpAMPBridge
 */
export class OpAmpBridge extends ApiObject {
  /**
   * Returns the apiVersion and kind for "OpAMPBridge"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'opentelemetry.io/v1alpha1',
    kind: 'OpAMPBridge',
  }

  /**
   * Renders a Kubernetes manifest for "OpAMPBridge".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: OpAmpBridgeProps = {}): any {
    return {
      ...OpAmpBridge.GVK,
      ...toJson_OpAmpBridgeProps(props),
    };
  }

  /**
   * Defines a "OpAMPBridge" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: OpAmpBridgeProps = {}) {
    super(scope, id, {
      ...OpAmpBridge.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...OpAmpBridge.GVK,
      ...toJson_OpAmpBridgeProps(resolved),
    };
  }
}

/**
 * @schema OpAMPBridge
 */
export interface OpAmpBridgeProps {
  /**
   * @schema OpAMPBridge#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema OpAMPBridge#spec
   */
  readonly spec?: OpAmpBridgeSpec;

}

/**
 * Converts an object of type 'OpAmpBridgeProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeProps(obj: OpAmpBridgeProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_OpAmpBridgeSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpec
 */
export interface OpAmpBridgeSpec {
  /**
   * @schema OpAmpBridgeSpec#affinity
   */
  readonly affinity?: OpAmpBridgeSpecAffinity;

  /**
   * @schema OpAmpBridgeSpec#capabilities
   */
  readonly capabilities: { [key: string]: boolean };

  /**
   * @schema OpAmpBridgeSpec#componentsAllowed
   */
  readonly componentsAllowed?: { [key: string]: string[] };

  /**
   * @schema OpAmpBridgeSpec#description
   */
  readonly description?: OpAmpBridgeSpecDescription;

  /**
   * @schema OpAmpBridgeSpec#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema OpAmpBridgeSpec#env
   */
  readonly env?: OpAmpBridgeSpecEnv[];

  /**
   * @schema OpAmpBridgeSpec#envFrom
   */
  readonly envFrom?: OpAmpBridgeSpecEnvFrom[];

  /**
   * @schema OpAmpBridgeSpec#headers
   */
  readonly headers?: { [key: string]: string };

  /**
   * @schema OpAmpBridgeSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * @schema OpAmpBridgeSpec#image
   */
  readonly image?: string;

  /**
   * @schema OpAmpBridgeSpec#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema OpAmpBridgeSpec#ipFamilies
   */
  readonly ipFamilies?: string[];

  /**
   * @schema OpAmpBridgeSpec#ipFamilyPolicy
   */
  readonly ipFamilyPolicy?: string;

  /**
   * @schema OpAmpBridgeSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema OpAmpBridgeSpec#podAnnotations
   */
  readonly podAnnotations?: { [key: string]: string };

  /**
   * @schema OpAmpBridgeSpec#podDnsConfig
   */
  readonly podDnsConfig?: OpAmpBridgeSpecPodDnsConfig;

  /**
   * @schema OpAmpBridgeSpec#podSecurityContext
   */
  readonly podSecurityContext?: OpAmpBridgeSpecPodSecurityContext;

  /**
   * @schema OpAmpBridgeSpec#ports
   */
  readonly ports?: OpAmpBridgeSpecPorts[];

  /**
   * @schema OpAmpBridgeSpec#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * @schema OpAmpBridgeSpec#replicas
   */
  readonly replicas?: number;

  /**
   * @schema OpAmpBridgeSpec#resources
   */
  readonly resources?: OpAmpBridgeSpecResources;

  /**
   * @schema OpAmpBridgeSpec#securityContext
   */
  readonly securityContext?: OpAmpBridgeSpecSecurityContext;

  /**
   * @schema OpAmpBridgeSpec#serviceAccount
   */
  readonly serviceAccount?: string;

  /**
   * @schema OpAmpBridgeSpec#tolerations
   */
  readonly tolerations?: OpAmpBridgeSpecTolerations[];

  /**
   * @schema OpAmpBridgeSpec#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: OpAmpBridgeSpecTopologySpreadConstraints[];

  /**
   * @schema OpAmpBridgeSpec#upgradeStrategy
   */
  readonly upgradeStrategy?: OpAmpBridgeSpecUpgradeStrategy;

  /**
   * @schema OpAmpBridgeSpec#volumeMounts
   */
  readonly volumeMounts?: OpAmpBridgeSpecVolumeMounts[];

  /**
   * @schema OpAmpBridgeSpec#volumes
   */
  readonly volumes?: OpAmpBridgeSpecVolumes[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpec(obj: OpAmpBridgeSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affinity': toJson_OpAmpBridgeSpecAffinity(obj.affinity),
    'capabilities': ((obj.capabilities) === undefined) ? undefined : (Object.entries(obj.capabilities).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'componentsAllowed': ((obj.componentsAllowed) === undefined) ? undefined : (Object.entries(obj.componentsAllowed).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.map(y => y) }), {})),
    'description': toJson_OpAmpBridgeSpecDescription(obj.description),
    'endpoint': obj.endpoint,
    'env': obj.env?.map(y => toJson_OpAmpBridgeSpecEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_OpAmpBridgeSpecEnvFrom(y)),
    'headers': ((obj.headers) === undefined) ? undefined : (Object.entries(obj.headers).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'hostNetwork': obj.hostNetwork,
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'ipFamilies': obj.ipFamilies?.map(y => y),
    'ipFamilyPolicy': obj.ipFamilyPolicy,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'podAnnotations': ((obj.podAnnotations) === undefined) ? undefined : (Object.entries(obj.podAnnotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'podDnsConfig': toJson_OpAmpBridgeSpecPodDnsConfig(obj.podDnsConfig),
    'podSecurityContext': toJson_OpAmpBridgeSpecPodSecurityContext(obj.podSecurityContext),
    'ports': obj.ports?.map(y => toJson_OpAmpBridgeSpecPorts(y)),
    'priorityClassName': obj.priorityClassName,
    'replicas': obj.replicas,
    'resources': toJson_OpAmpBridgeSpecResources(obj.resources),
    'securityContext': toJson_OpAmpBridgeSpecSecurityContext(obj.securityContext),
    'serviceAccount': obj.serviceAccount,
    'tolerations': obj.tolerations?.map(y => toJson_OpAmpBridgeSpecTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_OpAmpBridgeSpecTopologySpreadConstraints(y)),
    'upgradeStrategy': obj.upgradeStrategy,
    'volumeMounts': obj.volumeMounts?.map(y => toJson_OpAmpBridgeSpecVolumeMounts(y)),
    'volumes': obj.volumes?.map(y => toJson_OpAmpBridgeSpecVolumes(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinity
 */
export interface OpAmpBridgeSpecAffinity {
  /**
   * @schema OpAmpBridgeSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: OpAmpBridgeSpecAffinityNodeAffinity;

  /**
   * @schema OpAmpBridgeSpecAffinity#podAffinity
   */
  readonly podAffinity?: OpAmpBridgeSpecAffinityPodAffinity;

  /**
   * @schema OpAmpBridgeSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: OpAmpBridgeSpecAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinity(obj: OpAmpBridgeSpecAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_OpAmpBridgeSpecAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_OpAmpBridgeSpecAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_OpAmpBridgeSpecAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecDescription
 */
export interface OpAmpBridgeSpecDescription {
  /**
   * @schema OpAmpBridgeSpecDescription#non_identifying_attributes
   */
  readonly nonIdentifyingAttributes: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecDescription' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecDescription(obj: OpAmpBridgeSpecDescription | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'non_identifying_attributes': ((obj.nonIdentifyingAttributes) === undefined) ? undefined : (Object.entries(obj.nonIdentifyingAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnv
 */
export interface OpAmpBridgeSpecEnv {
  /**
   * @schema OpAmpBridgeSpecEnv#name
   */
  readonly name: string;

  /**
   * @schema OpAmpBridgeSpecEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpAmpBridgeSpecEnv#valueFrom
   */
  readonly valueFrom?: OpAmpBridgeSpecEnvValueFrom;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnv(obj: OpAmpBridgeSpecEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpAmpBridgeSpecEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvFrom
 */
export interface OpAmpBridgeSpecEnvFrom {
  /**
   * @schema OpAmpBridgeSpecEnvFrom#configMapRef
   */
  readonly configMapRef?: OpAmpBridgeSpecEnvFromConfigMapRef;

  /**
   * @schema OpAmpBridgeSpecEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema OpAmpBridgeSpecEnvFrom#secretRef
   */
  readonly secretRef?: OpAmpBridgeSpecEnvFromSecretRef;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnvFrom(obj: OpAmpBridgeSpecEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_OpAmpBridgeSpecEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_OpAmpBridgeSpecEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPodDnsConfig
 */
export interface OpAmpBridgeSpecPodDnsConfig {
  /**
   * @schema OpAmpBridgeSpecPodDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * @schema OpAmpBridgeSpecPodDnsConfig#options
   */
  readonly options?: OpAmpBridgeSpecPodDnsConfigOptions[];

  /**
   * @schema OpAmpBridgeSpecPodDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPodDnsConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPodDnsConfig(obj: OpAmpBridgeSpecPodDnsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nameservers': obj.nameservers?.map(y => y),
    'options': obj.options?.map(y => toJson_OpAmpBridgeSpecPodDnsConfigOptions(y)),
    'searches': obj.searches?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPodSecurityContext
 */
export interface OpAmpBridgeSpecPodSecurityContext {
  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpAmpBridgeSpecPodSecurityContextAppArmorProfile;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#seLinuxChangePolicy
   */
  readonly seLinuxChangePolicy?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpAmpBridgeSpecPodSecurityContextSeLinuxOptions;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpAmpBridgeSpecPodSecurityContextSeccompProfile;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#supplementalGroupsPolicy
   */
  readonly supplementalGroupsPolicy?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#sysctls
   */
  readonly sysctls?: OpAmpBridgeSpecPodSecurityContextSysctls[];

  /**
   * @schema OpAmpBridgeSpecPodSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpAmpBridgeSpecPodSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPodSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPodSecurityContext(obj: OpAmpBridgeSpecPodSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appArmorProfile': toJson_OpAmpBridgeSpecPodSecurityContextAppArmorProfile(obj.appArmorProfile),
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxChangePolicy': obj.seLinuxChangePolicy,
    'seLinuxOptions': toJson_OpAmpBridgeSpecPodSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpAmpBridgeSpecPodSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'supplementalGroupsPolicy': obj.supplementalGroupsPolicy,
    'sysctls': obj.sysctls?.map(y => toJson_OpAmpBridgeSpecPodSecurityContextSysctls(y)),
    'windowsOptions': toJson_OpAmpBridgeSpecPodSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPorts
 */
export interface OpAmpBridgeSpecPorts {
  /**
   * @schema OpAmpBridgeSpecPorts#appProtocol
   */
  readonly appProtocol?: string;

  /**
   * @schema OpAmpBridgeSpecPorts#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecPorts#nodePort
   */
  readonly nodePort?: number;

  /**
   * @schema OpAmpBridgeSpecPorts#port
   */
  readonly port: number;

  /**
   * @schema OpAmpBridgeSpecPorts#protocol
   */
  readonly protocol?: string;

  /**
   * @schema OpAmpBridgeSpecPorts#targetPort
   */
  readonly targetPort?: OpAmpBridgeSpecPortsTargetPort;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPorts(obj: OpAmpBridgeSpecPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appProtocol': obj.appProtocol,
    'name': obj.name,
    'nodePort': obj.nodePort,
    'port': obj.port,
    'protocol': obj.protocol,
    'targetPort': obj.targetPort?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecResources
 */
export interface OpAmpBridgeSpecResources {
  /**
   * @schema OpAmpBridgeSpecResources#claims
   */
  readonly claims?: OpAmpBridgeSpecResourcesClaims[];

  /**
   * @schema OpAmpBridgeSpecResources#limits
   */
  readonly limits?: { [key: string]: OpAmpBridgeSpecResourcesLimits };

  /**
   * @schema OpAmpBridgeSpecResources#requests
   */
  readonly requests?: { [key: string]: OpAmpBridgeSpecResourcesRequests };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecResources(obj: OpAmpBridgeSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpAmpBridgeSpecResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecSecurityContext
 */
export interface OpAmpBridgeSpecSecurityContext {
  /**
   * @schema OpAmpBridgeSpecSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpAmpBridgeSpecSecurityContextAppArmorProfile;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#capabilities
   */
  readonly capabilities?: OpAmpBridgeSpecSecurityContextCapabilities;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpAmpBridgeSpecSecurityContextSeLinuxOptions;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpAmpBridgeSpecSecurityContextSeccompProfile;

  /**
   * @schema OpAmpBridgeSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpAmpBridgeSpecSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecSecurityContext(obj: OpAmpBridgeSpecSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpAmpBridgeSpecSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpAmpBridgeSpecSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpAmpBridgeSpecSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpAmpBridgeSpecSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpAmpBridgeSpecSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecTolerations
 */
export interface OpAmpBridgeSpecTolerations {
  /**
   * @schema OpAmpBridgeSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema OpAmpBridgeSpecTolerations#key
   */
  readonly key?: string;

  /**
   * @schema OpAmpBridgeSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema OpAmpBridgeSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema OpAmpBridgeSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecTolerations(obj: OpAmpBridgeSpecTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecTopologySpreadConstraints
 */
export interface OpAmpBridgeSpecTopologySpreadConstraints {
  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector;

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraints#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraints#minDomains
   */
  readonly minDomains?: number;

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraints#nodeAffinityPolicy
   */
  readonly nodeAffinityPolicy?: string;

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraints#nodeTaintsPolicy
   */
  readonly nodeTaintsPolicy?: string;

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecTopologySpreadConstraints(obj: OpAmpBridgeSpecTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'maxSkew': obj.maxSkew,
    'minDomains': obj.minDomains,
    'nodeAffinityPolicy': obj.nodeAffinityPolicy,
    'nodeTaintsPolicy': obj.nodeTaintsPolicy,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecUpgradeStrategy
 */
export enum OpAmpBridgeSpecUpgradeStrategy {
  /** automatic */
  AUTOMATIC = "automatic",
  /** none */
  NONE = "none",
}

/**
 * @schema OpAmpBridgeSpecVolumeMounts
 */
export interface OpAmpBridgeSpecVolumeMounts {
  /**
   * @schema OpAmpBridgeSpecVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema OpAmpBridgeSpecVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema OpAmpBridgeSpecVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema OpAmpBridgeSpecVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema OpAmpBridgeSpecVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema OpAmpBridgeSpecVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumeMounts(obj: OpAmpBridgeSpecVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumes
 */
export interface OpAmpBridgeSpecVolumes {
  /**
   * @schema OpAmpBridgeSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: OpAmpBridgeSpecVolumesAwsElasticBlockStore;

  /**
   * @schema OpAmpBridgeSpecVolumes#azureDisk
   */
  readonly azureDisk?: OpAmpBridgeSpecVolumesAzureDisk;

  /**
   * @schema OpAmpBridgeSpecVolumes#azureFile
   */
  readonly azureFile?: OpAmpBridgeSpecVolumesAzureFile;

  /**
   * @schema OpAmpBridgeSpecVolumes#cephfs
   */
  readonly cephfs?: OpAmpBridgeSpecVolumesCephfs;

  /**
   * @schema OpAmpBridgeSpecVolumes#cinder
   */
  readonly cinder?: OpAmpBridgeSpecVolumesCinder;

  /**
   * @schema OpAmpBridgeSpecVolumes#configMap
   */
  readonly configMap?: OpAmpBridgeSpecVolumesConfigMap;

  /**
   * @schema OpAmpBridgeSpecVolumes#csi
   */
  readonly csi?: OpAmpBridgeSpecVolumesCsi;

  /**
   * @schema OpAmpBridgeSpecVolumes#downwardAPI
   */
  readonly downwardApi?: OpAmpBridgeSpecVolumesDownwardApi;

  /**
   * @schema OpAmpBridgeSpecVolumes#emptyDir
   */
  readonly emptyDir?: OpAmpBridgeSpecVolumesEmptyDir;

  /**
   * @schema OpAmpBridgeSpecVolumes#ephemeral
   */
  readonly ephemeral?: OpAmpBridgeSpecVolumesEphemeral;

  /**
   * @schema OpAmpBridgeSpecVolumes#fc
   */
  readonly fc?: OpAmpBridgeSpecVolumesFc;

  /**
   * @schema OpAmpBridgeSpecVolumes#flexVolume
   */
  readonly flexVolume?: OpAmpBridgeSpecVolumesFlexVolume;

  /**
   * @schema OpAmpBridgeSpecVolumes#flocker
   */
  readonly flocker?: OpAmpBridgeSpecVolumesFlocker;

  /**
   * @schema OpAmpBridgeSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: OpAmpBridgeSpecVolumesGcePersistentDisk;

  /**
   * @schema OpAmpBridgeSpecVolumes#gitRepo
   */
  readonly gitRepo?: OpAmpBridgeSpecVolumesGitRepo;

  /**
   * @schema OpAmpBridgeSpecVolumes#glusterfs
   */
  readonly glusterfs?: OpAmpBridgeSpecVolumesGlusterfs;

  /**
   * @schema OpAmpBridgeSpecVolumes#hostPath
   */
  readonly hostPath?: OpAmpBridgeSpecVolumesHostPath;

  /**
   * @schema OpAmpBridgeSpecVolumes#image
   */
  readonly image?: OpAmpBridgeSpecVolumesImage;

  /**
   * @schema OpAmpBridgeSpecVolumes#iscsi
   */
  readonly iscsi?: OpAmpBridgeSpecVolumesIscsi;

  /**
   * @schema OpAmpBridgeSpecVolumes#name
   */
  readonly name: string;

  /**
   * @schema OpAmpBridgeSpecVolumes#nfs
   */
  readonly nfs?: OpAmpBridgeSpecVolumesNfs;

  /**
   * @schema OpAmpBridgeSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: OpAmpBridgeSpecVolumesPersistentVolumeClaim;

  /**
   * @schema OpAmpBridgeSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: OpAmpBridgeSpecVolumesPhotonPersistentDisk;

  /**
   * @schema OpAmpBridgeSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: OpAmpBridgeSpecVolumesPortworxVolume;

  /**
   * @schema OpAmpBridgeSpecVolumes#projected
   */
  readonly projected?: OpAmpBridgeSpecVolumesProjected;

  /**
   * @schema OpAmpBridgeSpecVolumes#quobyte
   */
  readonly quobyte?: OpAmpBridgeSpecVolumesQuobyte;

  /**
   * @schema OpAmpBridgeSpecVolumes#rbd
   */
  readonly rbd?: OpAmpBridgeSpecVolumesRbd;

  /**
   * @schema OpAmpBridgeSpecVolumes#scaleIO
   */
  readonly scaleIo?: OpAmpBridgeSpecVolumesScaleIo;

  /**
   * @schema OpAmpBridgeSpecVolumes#secret
   */
  readonly secret?: OpAmpBridgeSpecVolumesSecret;

  /**
   * @schema OpAmpBridgeSpecVolumes#storageos
   */
  readonly storageos?: OpAmpBridgeSpecVolumesStorageos;

  /**
   * @schema OpAmpBridgeSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: OpAmpBridgeSpecVolumesVsphereVolume;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumes(obj: OpAmpBridgeSpecVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_OpAmpBridgeSpecVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_OpAmpBridgeSpecVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_OpAmpBridgeSpecVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_OpAmpBridgeSpecVolumesCephfs(obj.cephfs),
    'cinder': toJson_OpAmpBridgeSpecVolumesCinder(obj.cinder),
    'configMap': toJson_OpAmpBridgeSpecVolumesConfigMap(obj.configMap),
    'csi': toJson_OpAmpBridgeSpecVolumesCsi(obj.csi),
    'downwardAPI': toJson_OpAmpBridgeSpecVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_OpAmpBridgeSpecVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_OpAmpBridgeSpecVolumesEphemeral(obj.ephemeral),
    'fc': toJson_OpAmpBridgeSpecVolumesFc(obj.fc),
    'flexVolume': toJson_OpAmpBridgeSpecVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_OpAmpBridgeSpecVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_OpAmpBridgeSpecVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_OpAmpBridgeSpecVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_OpAmpBridgeSpecVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_OpAmpBridgeSpecVolumesHostPath(obj.hostPath),
    'image': toJson_OpAmpBridgeSpecVolumesImage(obj.image),
    'iscsi': toJson_OpAmpBridgeSpecVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_OpAmpBridgeSpecVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_OpAmpBridgeSpecVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_OpAmpBridgeSpecVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_OpAmpBridgeSpecVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_OpAmpBridgeSpecVolumesProjected(obj.projected),
    'quobyte': toJson_OpAmpBridgeSpecVolumesQuobyte(obj.quobyte),
    'rbd': toJson_OpAmpBridgeSpecVolumesRbd(obj.rbd),
    'scaleIO': toJson_OpAmpBridgeSpecVolumesScaleIo(obj.scaleIo),
    'secret': toJson_OpAmpBridgeSpecVolumesSecret(obj.secret),
    'storageos': toJson_OpAmpBridgeSpecVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_OpAmpBridgeSpecVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinity
 */
export interface OpAmpBridgeSpecAffinityNodeAffinity {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinity(obj: OpAmpBridgeSpecAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinity
 */
export interface OpAmpBridgeSpecAffinityPodAffinity {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinity(obj: OpAmpBridgeSpecAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinity
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinity {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinity(obj: OpAmpBridgeSpecAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvValueFrom
 */
export interface OpAmpBridgeSpecEnvValueFrom {
  /**
   * @schema OpAmpBridgeSpecEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpAmpBridgeSpecEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpAmpBridgeSpecEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpAmpBridgeSpecEnvValueFromFieldRef;

  /**
   * @schema OpAmpBridgeSpecEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpAmpBridgeSpecEnvValueFromResourceFieldRef;

  /**
   * @schema OpAmpBridgeSpecEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpAmpBridgeSpecEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnvValueFrom(obj: OpAmpBridgeSpecEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpAmpBridgeSpecEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpAmpBridgeSpecEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpAmpBridgeSpecEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpAmpBridgeSpecEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvFromConfigMapRef
 */
export interface OpAmpBridgeSpecEnvFromConfigMapRef {
  /**
   * @schema OpAmpBridgeSpecEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnvFromConfigMapRef(obj: OpAmpBridgeSpecEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvFromSecretRef
 */
export interface OpAmpBridgeSpecEnvFromSecretRef {
  /**
   * @schema OpAmpBridgeSpecEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnvFromSecretRef(obj: OpAmpBridgeSpecEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPodDnsConfigOptions
 */
export interface OpAmpBridgeSpecPodDnsConfigOptions {
  /**
   * @schema OpAmpBridgeSpecPodDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecPodDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPodDnsConfigOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPodDnsConfigOptions(obj: OpAmpBridgeSpecPodDnsConfigOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPodSecurityContextAppArmorProfile
 */
export interface OpAmpBridgeSpecPodSecurityContextAppArmorProfile {
  /**
   * @schema OpAmpBridgeSpecPodSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPodSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPodSecurityContextAppArmorProfile(obj: OpAmpBridgeSpecPodSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPodSecurityContextSeLinuxOptions
 */
export interface OpAmpBridgeSpecPodSecurityContextSeLinuxOptions {
  /**
   * @schema OpAmpBridgeSpecPodSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPodSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPodSecurityContextSeLinuxOptions(obj: OpAmpBridgeSpecPodSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPodSecurityContextSeccompProfile
 */
export interface OpAmpBridgeSpecPodSecurityContextSeccompProfile {
  /**
   * @schema OpAmpBridgeSpecPodSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPodSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPodSecurityContextSeccompProfile(obj: OpAmpBridgeSpecPodSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPodSecurityContextSysctls
 */
export interface OpAmpBridgeSpecPodSecurityContextSysctls {
  /**
   * @schema OpAmpBridgeSpecPodSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPodSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPodSecurityContextSysctls(obj: OpAmpBridgeSpecPodSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPodSecurityContextWindowsOptions
 */
export interface OpAmpBridgeSpecPodSecurityContextWindowsOptions {
  /**
   * @schema OpAmpBridgeSpecPodSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpAmpBridgeSpecPodSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecPodSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecPodSecurityContextWindowsOptions(obj: OpAmpBridgeSpecPodSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecPortsTargetPort
 */
export class OpAmpBridgeSpecPortsTargetPort {
  public static fromNumber(value: number): OpAmpBridgeSpecPortsTargetPort {
    return new OpAmpBridgeSpecPortsTargetPort(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecPortsTargetPort {
    return new OpAmpBridgeSpecPortsTargetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpAmpBridgeSpecResourcesClaims
 */
export interface OpAmpBridgeSpecResourcesClaims {
  /**
   * @schema OpAmpBridgeSpecResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpAmpBridgeSpecResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecResourcesClaims(obj: OpAmpBridgeSpecResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecResourcesLimits
 */
export class OpAmpBridgeSpecResourcesLimits {
  public static fromNumber(value: number): OpAmpBridgeSpecResourcesLimits {
    return new OpAmpBridgeSpecResourcesLimits(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecResourcesLimits {
    return new OpAmpBridgeSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpAmpBridgeSpecResourcesRequests
 */
export class OpAmpBridgeSpecResourcesRequests {
  public static fromNumber(value: number): OpAmpBridgeSpecResourcesRequests {
    return new OpAmpBridgeSpecResourcesRequests(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecResourcesRequests {
    return new OpAmpBridgeSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpAmpBridgeSpecSecurityContextAppArmorProfile
 */
export interface OpAmpBridgeSpecSecurityContextAppArmorProfile {
  /**
   * @schema OpAmpBridgeSpecSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpAmpBridgeSpecSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecSecurityContextAppArmorProfile(obj: OpAmpBridgeSpecSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecSecurityContextCapabilities
 */
export interface OpAmpBridgeSpecSecurityContextCapabilities {
  /**
   * @schema OpAmpBridgeSpecSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpAmpBridgeSpecSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecSecurityContextCapabilities(obj: OpAmpBridgeSpecSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecSecurityContextSeLinuxOptions
 */
export interface OpAmpBridgeSpecSecurityContextSeLinuxOptions {
  /**
   * @schema OpAmpBridgeSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpAmpBridgeSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpAmpBridgeSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpAmpBridgeSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecSecurityContextSeLinuxOptions(obj: OpAmpBridgeSpecSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecSecurityContextSeccompProfile
 */
export interface OpAmpBridgeSpecSecurityContextSeccompProfile {
  /**
   * @schema OpAmpBridgeSpecSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpAmpBridgeSpecSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecSecurityContextSeccompProfile(obj: OpAmpBridgeSpecSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecSecurityContextWindowsOptions
 */
export interface OpAmpBridgeSpecSecurityContextWindowsOptions {
  /**
   * @schema OpAmpBridgeSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpAmpBridgeSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpAmpBridgeSpecSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpAmpBridgeSpecSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecSecurityContextWindowsOptions(obj: OpAmpBridgeSpecSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector
 */
export interface OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector {
  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector(obj: OpAmpBridgeSpecTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesAwsElasticBlockStore
 */
export interface OpAmpBridgeSpecVolumesAwsElasticBlockStore {
  /**
   * @schema OpAmpBridgeSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesAwsElasticBlockStore(obj: OpAmpBridgeSpecVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesAzureDisk
 */
export interface OpAmpBridgeSpecVolumesAzureDisk {
  /**
   * @schema OpAmpBridgeSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema OpAmpBridgeSpecVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema OpAmpBridgeSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesAzureDisk(obj: OpAmpBridgeSpecVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesAzureFile
 */
export interface OpAmpBridgeSpecVolumesAzureFile {
  /**
   * @schema OpAmpBridgeSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema OpAmpBridgeSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesAzureFile(obj: OpAmpBridgeSpecVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesCephfs
 */
export interface OpAmpBridgeSpecVolumesCephfs {
  /**
   * @schema OpAmpBridgeSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema OpAmpBridgeSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: OpAmpBridgeSpecVolumesCephfsSecretRef;

  /**
   * @schema OpAmpBridgeSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesCephfs(obj: OpAmpBridgeSpecVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_OpAmpBridgeSpecVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesCinder
 */
export interface OpAmpBridgeSpecVolumesCinder {
  /**
   * @schema OpAmpBridgeSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesCinder#secretRef
   */
  readonly secretRef?: OpAmpBridgeSpecVolumesCinderSecretRef;

  /**
   * @schema OpAmpBridgeSpecVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesCinder(obj: OpAmpBridgeSpecVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpAmpBridgeSpecVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesConfigMap
 */
export interface OpAmpBridgeSpecVolumesConfigMap {
  /**
   * @schema OpAmpBridgeSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesConfigMap#items
   */
  readonly items?: OpAmpBridgeSpecVolumesConfigMapItems[];

  /**
   * @schema OpAmpBridgeSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesConfigMap(obj: OpAmpBridgeSpecVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpAmpBridgeSpecVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesCsi
 */
export interface OpAmpBridgeSpecVolumesCsi {
  /**
   * @schema OpAmpBridgeSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema OpAmpBridgeSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: OpAmpBridgeSpecVolumesCsiNodePublishSecretRef;

  /**
   * @schema OpAmpBridgeSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesCsi(obj: OpAmpBridgeSpecVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_OpAmpBridgeSpecVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesDownwardApi
 */
export interface OpAmpBridgeSpecVolumesDownwardApi {
  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApi#items
   */
  readonly items?: OpAmpBridgeSpecVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesDownwardApi(obj: OpAmpBridgeSpecVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpAmpBridgeSpecVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEmptyDir
 */
export interface OpAmpBridgeSpecVolumesEmptyDir {
  /**
   * @schema OpAmpBridgeSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: OpAmpBridgeSpecVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEmptyDir(obj: OpAmpBridgeSpecVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEphemeral
 */
export interface OpAmpBridgeSpecVolumesEphemeral {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeral(obj: OpAmpBridgeSpecVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesFc
 */
export interface OpAmpBridgeSpecVolumesFc {
  /**
   * @schema OpAmpBridgeSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema OpAmpBridgeSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesFc(obj: OpAmpBridgeSpecVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesFlexVolume
 */
export interface OpAmpBridgeSpecVolumesFlexVolume {
  /**
   * @schema OpAmpBridgeSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema OpAmpBridgeSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema OpAmpBridgeSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: OpAmpBridgeSpecVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesFlexVolume(obj: OpAmpBridgeSpecVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpAmpBridgeSpecVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesFlocker
 */
export interface OpAmpBridgeSpecVolumesFlocker {
  /**
   * @schema OpAmpBridgeSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesFlocker(obj: OpAmpBridgeSpecVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesGcePersistentDisk
 */
export interface OpAmpBridgeSpecVolumesGcePersistentDisk {
  /**
   * @schema OpAmpBridgeSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema OpAmpBridgeSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesGcePersistentDisk(obj: OpAmpBridgeSpecVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesGitRepo
 */
export interface OpAmpBridgeSpecVolumesGitRepo {
  /**
   * @schema OpAmpBridgeSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema OpAmpBridgeSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesGitRepo(obj: OpAmpBridgeSpecVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesGlusterfs
 */
export interface OpAmpBridgeSpecVolumesGlusterfs {
  /**
   * @schema OpAmpBridgeSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema OpAmpBridgeSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema OpAmpBridgeSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesGlusterfs(obj: OpAmpBridgeSpecVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesHostPath
 */
export interface OpAmpBridgeSpecVolumesHostPath {
  /**
   * @schema OpAmpBridgeSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema OpAmpBridgeSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesHostPath(obj: OpAmpBridgeSpecVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesImage
 */
export interface OpAmpBridgeSpecVolumesImage {
  /**
   * @schema OpAmpBridgeSpecVolumesImage#pullPolicy
   */
  readonly pullPolicy?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesImage#reference
   */
  readonly reference?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesImage' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesImage(obj: OpAmpBridgeSpecVolumesImage | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'pullPolicy': obj.pullPolicy,
    'reference': obj.reference,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesIscsi
 */
export interface OpAmpBridgeSpecVolumesIscsi {
  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: OpAmpBridgeSpecVolumesIscsiSecretRef;

  /**
   * @schema OpAmpBridgeSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesIscsi(obj: OpAmpBridgeSpecVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpAmpBridgeSpecVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesNfs
 */
export interface OpAmpBridgeSpecVolumesNfs {
  /**
   * @schema OpAmpBridgeSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema OpAmpBridgeSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesNfs(obj: OpAmpBridgeSpecVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesPersistentVolumeClaim
 */
export interface OpAmpBridgeSpecVolumesPersistentVolumeClaim {
  /**
   * @schema OpAmpBridgeSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema OpAmpBridgeSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesPersistentVolumeClaim(obj: OpAmpBridgeSpecVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesPhotonPersistentDisk
 */
export interface OpAmpBridgeSpecVolumesPhotonPersistentDisk {
  /**
   * @schema OpAmpBridgeSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesPhotonPersistentDisk(obj: OpAmpBridgeSpecVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesPortworxVolume
 */
export interface OpAmpBridgeSpecVolumesPortworxVolume {
  /**
   * @schema OpAmpBridgeSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesPortworxVolume(obj: OpAmpBridgeSpecVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjected
 */
export interface OpAmpBridgeSpecVolumesProjected {
  /**
   * @schema OpAmpBridgeSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesProjected#sources
   */
  readonly sources?: OpAmpBridgeSpecVolumesProjectedSources[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjected(obj: OpAmpBridgeSpecVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_OpAmpBridgeSpecVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesQuobyte
 */
export interface OpAmpBridgeSpecVolumesQuobyte {
  /**
   * @schema OpAmpBridgeSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema OpAmpBridgeSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesQuobyte(obj: OpAmpBridgeSpecVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesRbd
 */
export interface OpAmpBridgeSpecVolumesRbd {
  /**
   * @schema OpAmpBridgeSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema OpAmpBridgeSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema OpAmpBridgeSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesRbd#secretRef
   */
  readonly secretRef?: OpAmpBridgeSpecVolumesRbdSecretRef;

  /**
   * @schema OpAmpBridgeSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesRbd(obj: OpAmpBridgeSpecVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpAmpBridgeSpecVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesScaleIo
 */
export interface OpAmpBridgeSpecVolumesScaleIo {
  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: OpAmpBridgeSpecVolumesScaleIoSecretRef;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema OpAmpBridgeSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesScaleIo(obj: OpAmpBridgeSpecVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpAmpBridgeSpecVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesSecret
 */
export interface OpAmpBridgeSpecVolumesSecret {
  /**
   * @schema OpAmpBridgeSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesSecret#items
   */
  readonly items?: OpAmpBridgeSpecVolumesSecretItems[];

  /**
   * @schema OpAmpBridgeSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesSecret(obj: OpAmpBridgeSpecVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpAmpBridgeSpecVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesStorageos
 */
export interface OpAmpBridgeSpecVolumesStorageos {
  /**
   * @schema OpAmpBridgeSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: OpAmpBridgeSpecVolumesStorageosSecretRef;

  /**
   * @schema OpAmpBridgeSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesStorageos(obj: OpAmpBridgeSpecVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpAmpBridgeSpecVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesVsphereVolume
 */
export interface OpAmpBridgeSpecVolumesVsphereVolume {
  /**
   * @schema OpAmpBridgeSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesVsphereVolume(obj: OpAmpBridgeSpecVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvValueFromConfigMapKeyRef
 */
export interface OpAmpBridgeSpecEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpAmpBridgeSpecEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnvValueFromConfigMapKeyRef(obj: OpAmpBridgeSpecEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvValueFromFieldRef
 */
export interface OpAmpBridgeSpecEnvValueFromFieldRef {
  /**
   * @schema OpAmpBridgeSpecEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpAmpBridgeSpecEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnvValueFromFieldRef(obj: OpAmpBridgeSpecEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvValueFromResourceFieldRef
 */
export interface OpAmpBridgeSpecEnvValueFromResourceFieldRef {
  /**
   * @schema OpAmpBridgeSpecEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpAmpBridgeSpecEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpAmpBridgeSpecEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpAmpBridgeSpecEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnvValueFromResourceFieldRef(obj: OpAmpBridgeSpecEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvValueFromSecretKeyRef
 */
export interface OpAmpBridgeSpecEnvValueFromSecretKeyRef {
  /**
   * @schema OpAmpBridgeSpecEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecEnvValueFromSecretKeyRef(obj: OpAmpBridgeSpecEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: OpAmpBridgeSpecTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesCephfsSecretRef
 */
export interface OpAmpBridgeSpecVolumesCephfsSecretRef {
  /**
   * @schema OpAmpBridgeSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesCephfsSecretRef(obj: OpAmpBridgeSpecVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesCinderSecretRef
 */
export interface OpAmpBridgeSpecVolumesCinderSecretRef {
  /**
   * @schema OpAmpBridgeSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesCinderSecretRef(obj: OpAmpBridgeSpecVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesConfigMapItems
 */
export interface OpAmpBridgeSpecVolumesConfigMapItems {
  /**
   * @schema OpAmpBridgeSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesConfigMapItems(obj: OpAmpBridgeSpecVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesCsiNodePublishSecretRef
 */
export interface OpAmpBridgeSpecVolumesCsiNodePublishSecretRef {
  /**
   * @schema OpAmpBridgeSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesCsiNodePublishSecretRef(obj: OpAmpBridgeSpecVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesDownwardApiItems
 */
export interface OpAmpBridgeSpecVolumesDownwardApiItems {
  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef;

  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesDownwardApiItems(obj: OpAmpBridgeSpecVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEmptyDirSizeLimit
 */
export class OpAmpBridgeSpecVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): OpAmpBridgeSpecVolumesEmptyDirSizeLimit {
    return new OpAmpBridgeSpecVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecVolumesEmptyDirSizeLimit {
    return new OpAmpBridgeSpecVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate
 */
export interface OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate(obj: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesFlexVolumeSecretRef
 */
export interface OpAmpBridgeSpecVolumesFlexVolumeSecretRef {
  /**
   * @schema OpAmpBridgeSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesFlexVolumeSecretRef(obj: OpAmpBridgeSpecVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesIscsiSecretRef
 */
export interface OpAmpBridgeSpecVolumesIscsiSecretRef {
  /**
   * @schema OpAmpBridgeSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesIscsiSecretRef(obj: OpAmpBridgeSpecVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSources
 */
export interface OpAmpBridgeSpecVolumesProjectedSources {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSources#clusterTrustBundle
   */
  readonly clusterTrustBundle?: OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: OpAmpBridgeSpecVolumesProjectedSourcesConfigMap;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApi;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSources#secret
   */
  readonly secret?: OpAmpBridgeSpecVolumesProjectedSourcesSecret;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSources(obj: OpAmpBridgeSpecVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterTrustBundle': toJson_OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle(obj.clusterTrustBundle),
    'configMap': toJson_OpAmpBridgeSpecVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_OpAmpBridgeSpecVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_OpAmpBridgeSpecVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesRbdSecretRef
 */
export interface OpAmpBridgeSpecVolumesRbdSecretRef {
  /**
   * @schema OpAmpBridgeSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesRbdSecretRef(obj: OpAmpBridgeSpecVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesScaleIoSecretRef
 */
export interface OpAmpBridgeSpecVolumesScaleIoSecretRef {
  /**
   * @schema OpAmpBridgeSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesScaleIoSecretRef(obj: OpAmpBridgeSpecVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesSecretItems
 */
export interface OpAmpBridgeSpecVolumesSecretItems {
  /**
   * @schema OpAmpBridgeSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesSecretItems(obj: OpAmpBridgeSpecVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesStorageosSecretRef
 */
export interface OpAmpBridgeSpecVolumesStorageosSecretRef {
  /**
   * @schema OpAmpBridgeSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesStorageosSecretRef(obj: OpAmpBridgeSpecVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecEnvValueFromResourceFieldRefDivisor
 */
export class OpAmpBridgeSpecEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpAmpBridgeSpecEnvValueFromResourceFieldRefDivisor {
    return new OpAmpBridgeSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecEnvValueFromResourceFieldRefDivisor {
    return new OpAmpBridgeSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef
 */
export interface OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef {
  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef(obj: OpAmpBridgeSpecVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef(obj: OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata
 */
export interface OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata(obj: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec(obj: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle#labelSelector
   */
  readonly labelSelector?: OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle#optional
   */
  readonly optional?: boolean;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle#path
   */
  readonly path: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle#signerName
   */
  readonly signerName?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle(obj: OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj.labelSelector),
    'name': obj.name,
    'optional': obj.optional,
    'path': obj.path,
    'signerName': obj.signerName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesConfigMap
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesConfigMap {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesConfigMap(obj: OpAmpBridgeSpecVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApi
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesDownwardApi {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesDownwardApi(obj: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesSecret
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesSecret {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: OpAmpBridgeSpecVolumesProjectedSourcesSecretItems[];

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesSecret(obj: OpAmpBridgeSpecVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpAmpBridgeSpecVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken(obj: OpAmpBridgeSpecVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: OpAmpBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: OpAmpBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpAmpBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpAmpBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new OpAmpBridgeSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[];

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj: OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems(obj: OpAmpBridgeSpecVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems(obj: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesSecretItems
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesSecretItems {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesSecretItems(obj: OpAmpBridgeSpecVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpAmpBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpAmpBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: OpAmpBridgeSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(obj: OpAmpBridgeSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new OpAmpBridgeSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}


/**
 *
 *
 * @schema OpenTelemetryCollector
 */
export class OpenTelemetryCollector extends ApiObject {
  /**
   * Returns the apiVersion and kind for "OpenTelemetryCollector"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'opentelemetry.io/v1alpha1',
    kind: 'OpenTelemetryCollector',
  }

  /**
   * Renders a Kubernetes manifest for "OpenTelemetryCollector".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: OpenTelemetryCollectorProps = {}): any {
    return {
      ...OpenTelemetryCollector.GVK,
      ...toJson_OpenTelemetryCollectorProps(props),
    };
  }

  /**
   * Defines a "OpenTelemetryCollector" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: OpenTelemetryCollectorProps = {}) {
    super(scope, id, {
      ...OpenTelemetryCollector.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...OpenTelemetryCollector.GVK,
      ...toJson_OpenTelemetryCollectorProps(resolved),
    };
  }
}

/**
 * @schema OpenTelemetryCollector
 */
export interface OpenTelemetryCollectorProps {
  /**
   * @schema OpenTelemetryCollector#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema OpenTelemetryCollector#spec
   */
  readonly spec?: OpenTelemetryCollectorSpec;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorProps(obj: OpenTelemetryCollectorProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_OpenTelemetryCollectorSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpec
 */
export interface OpenTelemetryCollectorSpec {
  /**
   * @schema OpenTelemetryCollectorSpec#additionalContainers
   */
  readonly additionalContainers?: OpenTelemetryCollectorSpecAdditionalContainers[];

  /**
   * @schema OpenTelemetryCollectorSpec#affinity
   */
  readonly affinity?: OpenTelemetryCollectorSpecAffinity;

  /**
   * @schema OpenTelemetryCollectorSpec#args
   */
  readonly args?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpec#autoscaler
   */
  readonly autoscaler?: OpenTelemetryCollectorSpecAutoscaler;

  /**
   * @schema OpenTelemetryCollectorSpec#config
   */
  readonly config: string;

  /**
   * @schema OpenTelemetryCollectorSpec#configmaps
   */
  readonly configmaps?: OpenTelemetryCollectorSpecConfigmaps[];

  /**
   * @schema OpenTelemetryCollectorSpec#deploymentUpdateStrategy
   */
  readonly deploymentUpdateStrategy?: OpenTelemetryCollectorSpecDeploymentUpdateStrategy;

  /**
   * @schema OpenTelemetryCollectorSpec#env
   */
  readonly env?: OpenTelemetryCollectorSpecEnv[];

  /**
   * @schema OpenTelemetryCollectorSpec#envFrom
   */
  readonly envFrom?: OpenTelemetryCollectorSpecEnvFrom[];

  /**
   * @schema OpenTelemetryCollectorSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpec#image
   */
  readonly image?: string;

  /**
   * @schema OpenTelemetryCollectorSpec#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpec#ingress
   */
  readonly ingress?: OpenTelemetryCollectorSpecIngress;

  /**
   * @schema OpenTelemetryCollectorSpec#initContainers
   */
  readonly initContainers?: OpenTelemetryCollectorSpecInitContainers[];

  /**
   * @schema OpenTelemetryCollectorSpec#lifecycle
   */
  readonly lifecycle?: OpenTelemetryCollectorSpecLifecycle;

  /**
   * @schema OpenTelemetryCollectorSpec#livenessProbe
   */
  readonly livenessProbe?: OpenTelemetryCollectorSpecLivenessProbe;

  /**
   * @schema OpenTelemetryCollectorSpec#managementState
   */
  readonly managementState: OpenTelemetryCollectorSpecManagementState;

  /**
   * @schema OpenTelemetryCollectorSpec#maxReplicas
   */
  readonly maxReplicas?: number;

  /**
   * @schema OpenTelemetryCollectorSpec#minReplicas
   */
  readonly minReplicas?: number;

  /**
   * @schema OpenTelemetryCollectorSpec#mode
   */
  readonly mode?: OpenTelemetryCollectorSpecMode;

  /**
   * @schema OpenTelemetryCollectorSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpec#observability
   */
  readonly observability?: OpenTelemetryCollectorSpecObservability;

  /**
   * @schema OpenTelemetryCollectorSpec#podAnnotations
   */
  readonly podAnnotations?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpec#podDisruptionBudget
   */
  readonly podDisruptionBudget?: OpenTelemetryCollectorSpecPodDisruptionBudget;

  /**
   * @schema OpenTelemetryCollectorSpec#podSecurityContext
   */
  readonly podSecurityContext?: OpenTelemetryCollectorSpecPodSecurityContext;

  /**
   * @schema OpenTelemetryCollectorSpec#ports
   */
  readonly ports?: OpenTelemetryCollectorSpecPorts[];

  /**
   * @schema OpenTelemetryCollectorSpec#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * @schema OpenTelemetryCollectorSpec#replicas
   */
  readonly replicas?: number;

  /**
   * @schema OpenTelemetryCollectorSpec#resources
   */
  readonly resources?: OpenTelemetryCollectorSpecResources;

  /**
   * @schema OpenTelemetryCollectorSpec#securityContext
   */
  readonly securityContext?: OpenTelemetryCollectorSpecSecurityContext;

  /**
   * @schema OpenTelemetryCollectorSpec#serviceAccount
   */
  readonly serviceAccount?: string;

  /**
   * @schema OpenTelemetryCollectorSpec#shareProcessNamespace
   */
  readonly shareProcessNamespace?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpec#targetAllocator
   */
  readonly targetAllocator?: OpenTelemetryCollectorSpecTargetAllocator;

  /**
   * @schema OpenTelemetryCollectorSpec#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpec#tolerations
   */
  readonly tolerations?: OpenTelemetryCollectorSpecTolerations[];

  /**
   * @schema OpenTelemetryCollectorSpec#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: OpenTelemetryCollectorSpecTopologySpreadConstraints[];

  /**
   * @schema OpenTelemetryCollectorSpec#updateStrategy
   */
  readonly updateStrategy?: OpenTelemetryCollectorSpecUpdateStrategy;

  /**
   * @schema OpenTelemetryCollectorSpec#upgradeStrategy
   */
  readonly upgradeStrategy?: OpenTelemetryCollectorSpecUpgradeStrategy;

  /**
   * @schema OpenTelemetryCollectorSpec#volumeClaimTemplates
   */
  readonly volumeClaimTemplates?: OpenTelemetryCollectorSpecVolumeClaimTemplates[];

  /**
   * @schema OpenTelemetryCollectorSpec#volumeMounts
   */
  readonly volumeMounts?: OpenTelemetryCollectorSpecVolumeMounts[];

  /**
   * @schema OpenTelemetryCollectorSpec#volumes
   */
  readonly volumes?: OpenTelemetryCollectorSpecVolumes[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpec(obj: OpenTelemetryCollectorSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'additionalContainers': obj.additionalContainers?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainers(y)),
    'affinity': toJson_OpenTelemetryCollectorSpecAffinity(obj.affinity),
    'args': ((obj.args) === undefined) ? undefined : (Object.entries(obj.args).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'autoscaler': toJson_OpenTelemetryCollectorSpecAutoscaler(obj.autoscaler),
    'config': obj.config,
    'configmaps': obj.configmaps?.map(y => toJson_OpenTelemetryCollectorSpecConfigmaps(y)),
    'deploymentUpdateStrategy': toJson_OpenTelemetryCollectorSpecDeploymentUpdateStrategy(obj.deploymentUpdateStrategy),
    'env': obj.env?.map(y => toJson_OpenTelemetryCollectorSpecEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_OpenTelemetryCollectorSpecEnvFrom(y)),
    'hostNetwork': obj.hostNetwork,
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'ingress': toJson_OpenTelemetryCollectorSpecIngress(obj.ingress),
    'initContainers': obj.initContainers?.map(y => toJson_OpenTelemetryCollectorSpecInitContainers(y)),
    'lifecycle': toJson_OpenTelemetryCollectorSpecLifecycle(obj.lifecycle),
    'livenessProbe': toJson_OpenTelemetryCollectorSpecLivenessProbe(obj.livenessProbe),
    'managementState': obj.managementState,
    'maxReplicas': obj.maxReplicas,
    'minReplicas': obj.minReplicas,
    'mode': obj.mode,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'observability': toJson_OpenTelemetryCollectorSpecObservability(obj.observability),
    'podAnnotations': ((obj.podAnnotations) === undefined) ? undefined : (Object.entries(obj.podAnnotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'podDisruptionBudget': toJson_OpenTelemetryCollectorSpecPodDisruptionBudget(obj.podDisruptionBudget),
    'podSecurityContext': toJson_OpenTelemetryCollectorSpecPodSecurityContext(obj.podSecurityContext),
    'ports': obj.ports?.map(y => toJson_OpenTelemetryCollectorSpecPorts(y)),
    'priorityClassName': obj.priorityClassName,
    'replicas': obj.replicas,
    'resources': toJson_OpenTelemetryCollectorSpecResources(obj.resources),
    'securityContext': toJson_OpenTelemetryCollectorSpecSecurityContext(obj.securityContext),
    'serviceAccount': obj.serviceAccount,
    'shareProcessNamespace': obj.shareProcessNamespace,
    'targetAllocator': toJson_OpenTelemetryCollectorSpecTargetAllocator(obj.targetAllocator),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'tolerations': obj.tolerations?.map(y => toJson_OpenTelemetryCollectorSpecTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_OpenTelemetryCollectorSpecTopologySpreadConstraints(y)),
    'updateStrategy': toJson_OpenTelemetryCollectorSpecUpdateStrategy(obj.updateStrategy),
    'upgradeStrategy': obj.upgradeStrategy,
    'volumeClaimTemplates': obj.volumeClaimTemplates?.map(y => toJson_OpenTelemetryCollectorSpecVolumeClaimTemplates(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_OpenTelemetryCollectorSpecVolumeMounts(y)),
    'volumes': obj.volumes?.map(y => toJson_OpenTelemetryCollectorSpecVolumes(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainers
 */
export interface OpenTelemetryCollectorSpecAdditionalContainers {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#args
   */
  readonly args?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#command
   */
  readonly command?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#env
   */
  readonly env?: OpenTelemetryCollectorSpecAdditionalContainersEnv[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#envFrom
   */
  readonly envFrom?: OpenTelemetryCollectorSpecAdditionalContainersEnvFrom[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#image
   */
  readonly image?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#lifecycle
   */
  readonly lifecycle?: OpenTelemetryCollectorSpecAdditionalContainersLifecycle;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#livenessProbe
   */
  readonly livenessProbe?: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#ports
   */
  readonly ports?: OpenTelemetryCollectorSpecAdditionalContainersPorts[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#readinessProbe
   */
  readonly readinessProbe?: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#resizePolicy
   */
  readonly resizePolicy?: OpenTelemetryCollectorSpecAdditionalContainersResizePolicy[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#resources
   */
  readonly resources?: OpenTelemetryCollectorSpecAdditionalContainersResources;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#securityContext
   */
  readonly securityContext?: OpenTelemetryCollectorSpecAdditionalContainersSecurityContext;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#startupProbe
   */
  readonly startupProbe?: OpenTelemetryCollectorSpecAdditionalContainersStartupProbe;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#volumeDevices
   */
  readonly volumeDevices?: OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#volumeMounts
   */
  readonly volumeMounts?: OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainers(obj: OpenTelemetryCollectorSpecAdditionalContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersPorts(y)),
    'readinessProbe': toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe(obj.readinessProbe),
    'resizePolicy': obj.resizePolicy?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersResizePolicy(y)),
    'resources': toJson_OpenTelemetryCollectorSpecAdditionalContainersResources(obj.resources),
    'restartPolicy': obj.restartPolicy,
    'securityContext': toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinity
 */
export interface OpenTelemetryCollectorSpecAffinity {
  /**
   * @schema OpenTelemetryCollectorSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: OpenTelemetryCollectorSpecAffinityNodeAffinity;

  /**
   * @schema OpenTelemetryCollectorSpecAffinity#podAffinity
   */
  readonly podAffinity?: OpenTelemetryCollectorSpecAffinityPodAffinity;

  /**
   * @schema OpenTelemetryCollectorSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: OpenTelemetryCollectorSpecAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinity(obj: OpenTelemetryCollectorSpecAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_OpenTelemetryCollectorSpecAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_OpenTelemetryCollectorSpecAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscaler
 */
export interface OpenTelemetryCollectorSpecAutoscaler {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscaler#behavior
   */
  readonly behavior?: OpenTelemetryCollectorSpecAutoscalerBehavior;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscaler#maxReplicas
   */
  readonly maxReplicas?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscaler#metrics
   */
  readonly metrics?: OpenTelemetryCollectorSpecAutoscalerMetrics[];

  /**
   * @schema OpenTelemetryCollectorSpecAutoscaler#minReplicas
   */
  readonly minReplicas?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscaler#targetCPUUtilization
   */
  readonly targetCpuUtilization?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscaler#targetMemoryUtilization
   */
  readonly targetMemoryUtilization?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscaler' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscaler(obj: OpenTelemetryCollectorSpecAutoscaler | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'behavior': toJson_OpenTelemetryCollectorSpecAutoscalerBehavior(obj.behavior),
    'maxReplicas': obj.maxReplicas,
    'metrics': obj.metrics?.map(y => toJson_OpenTelemetryCollectorSpecAutoscalerMetrics(y)),
    'minReplicas': obj.minReplicas,
    'targetCPUUtilization': obj.targetCpuUtilization,
    'targetMemoryUtilization': obj.targetMemoryUtilization,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecConfigmaps
 */
export interface OpenTelemetryCollectorSpecConfigmaps {
  /**
   * @schema OpenTelemetryCollectorSpecConfigmaps#mountpath
   */
  readonly mountpath: string;

  /**
   * @schema OpenTelemetryCollectorSpecConfigmaps#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecConfigmaps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecConfigmaps(obj: OpenTelemetryCollectorSpecConfigmaps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountpath': obj.mountpath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecDeploymentUpdateStrategy
 */
export interface OpenTelemetryCollectorSpecDeploymentUpdateStrategy {
  /**
   * @schema OpenTelemetryCollectorSpecDeploymentUpdateStrategy#rollingUpdate
   */
  readonly rollingUpdate?: OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate;

  /**
   * @schema OpenTelemetryCollectorSpecDeploymentUpdateStrategy#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecDeploymentUpdateStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecDeploymentUpdateStrategy(obj: OpenTelemetryCollectorSpecDeploymentUpdateStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'rollingUpdate': toJson_OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate(obj.rollingUpdate),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnv
 */
export interface OpenTelemetryCollectorSpecEnv {
  /**
   * @schema OpenTelemetryCollectorSpecEnv#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnv#valueFrom
   */
  readonly valueFrom?: OpenTelemetryCollectorSpecEnvValueFrom;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnv(obj: OpenTelemetryCollectorSpecEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpenTelemetryCollectorSpecEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnvFrom
 */
export interface OpenTelemetryCollectorSpecEnvFrom {
  /**
   * @schema OpenTelemetryCollectorSpecEnvFrom#configMapRef
   */
  readonly configMapRef?: OpenTelemetryCollectorSpecEnvFromConfigMapRef;

  /**
   * @schema OpenTelemetryCollectorSpecEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvFrom#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecEnvFromSecretRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnvFrom(obj: OpenTelemetryCollectorSpecEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_OpenTelemetryCollectorSpecEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_OpenTelemetryCollectorSpecEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecIngress
 */
export interface OpenTelemetryCollectorSpecIngress {
  /**
   * @schema OpenTelemetryCollectorSpecIngress#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecIngress#hostname
   */
  readonly hostname?: string;

  /**
   * @schema OpenTelemetryCollectorSpecIngress#ingressClassName
   */
  readonly ingressClassName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecIngress#route
   */
  readonly route?: OpenTelemetryCollectorSpecIngressRoute;

  /**
   * @schema OpenTelemetryCollectorSpecIngress#ruleType
   */
  readonly ruleType?: OpenTelemetryCollectorSpecIngressRuleType;

  /**
   * @schema OpenTelemetryCollectorSpecIngress#tls
   */
  readonly tls?: OpenTelemetryCollectorSpecIngressTls[];

  /**
   * @schema OpenTelemetryCollectorSpecIngress#type
   */
  readonly type?: OpenTelemetryCollectorSpecIngressType;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecIngress' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecIngress(obj: OpenTelemetryCollectorSpecIngress | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'hostname': obj.hostname,
    'ingressClassName': obj.ingressClassName,
    'route': toJson_OpenTelemetryCollectorSpecIngressRoute(obj.route),
    'ruleType': obj.ruleType,
    'tls': obj.tls?.map(y => toJson_OpenTelemetryCollectorSpecIngressTls(y)),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainers
 */
export interface OpenTelemetryCollectorSpecInitContainers {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#args
   */
  readonly args?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#command
   */
  readonly command?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#env
   */
  readonly env?: OpenTelemetryCollectorSpecInitContainersEnv[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#envFrom
   */
  readonly envFrom?: OpenTelemetryCollectorSpecInitContainersEnvFrom[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#image
   */
  readonly image?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#lifecycle
   */
  readonly lifecycle?: OpenTelemetryCollectorSpecInitContainersLifecycle;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#livenessProbe
   */
  readonly livenessProbe?: OpenTelemetryCollectorSpecInitContainersLivenessProbe;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#ports
   */
  readonly ports?: OpenTelemetryCollectorSpecInitContainersPorts[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#readinessProbe
   */
  readonly readinessProbe?: OpenTelemetryCollectorSpecInitContainersReadinessProbe;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#resizePolicy
   */
  readonly resizePolicy?: OpenTelemetryCollectorSpecInitContainersResizePolicy[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#resources
   */
  readonly resources?: OpenTelemetryCollectorSpecInitContainersResources;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#securityContext
   */
  readonly securityContext?: OpenTelemetryCollectorSpecInitContainersSecurityContext;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#startupProbe
   */
  readonly startupProbe?: OpenTelemetryCollectorSpecInitContainersStartupProbe;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#volumeDevices
   */
  readonly volumeDevices?: OpenTelemetryCollectorSpecInitContainersVolumeDevices[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#volumeMounts
   */
  readonly volumeMounts?: OpenTelemetryCollectorSpecInitContainersVolumeMounts[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainers(obj: OpenTelemetryCollectorSpecInitContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_OpenTelemetryCollectorSpecInitContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersPorts(y)),
    'readinessProbe': toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbe(obj.readinessProbe),
    'resizePolicy': obj.resizePolicy?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersResizePolicy(y)),
    'resources': toJson_OpenTelemetryCollectorSpecInitContainersResources(obj.resources),
    'restartPolicy': obj.restartPolicy,
    'securityContext': toJson_OpenTelemetryCollectorSpecInitContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_OpenTelemetryCollectorSpecInitContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecycle
 */
export interface OpenTelemetryCollectorSpecLifecycle {
  /**
   * @schema OpenTelemetryCollectorSpecLifecycle#postStart
   */
  readonly postStart?: OpenTelemetryCollectorSpecLifecyclePostStart;

  /**
   * @schema OpenTelemetryCollectorSpecLifecycle#preStop
   */
  readonly preStop?: OpenTelemetryCollectorSpecLifecyclePreStop;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecycle(obj: OpenTelemetryCollectorSpecLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_OpenTelemetryCollectorSpecLifecyclePostStart(obj.postStart),
    'preStop': toJson_OpenTelemetryCollectorSpecLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLivenessProbe
 */
export interface OpenTelemetryCollectorSpecLivenessProbe {
  /**
   * @schema OpenTelemetryCollectorSpecLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLivenessProbe(obj: OpenTelemetryCollectorSpecLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'failureThreshold': obj.failureThreshold,
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecManagementState
 */
export enum OpenTelemetryCollectorSpecManagementState {
  /** managed */
  MANAGED = "managed",
  /** unmanaged */
  UNMANAGED = "unmanaged",
}

/**
 * @schema OpenTelemetryCollectorSpecMode
 */
export enum OpenTelemetryCollectorSpecMode {
  /** daemonset */
  DAEMONSET = "daemonset",
  /** deployment */
  DEPLOYMENT = "deployment",
  /** sidecar */
  SIDECAR = "sidecar",
  /** statefulset */
  STATEFULSET = "statefulset",
}

/**
 * @schema OpenTelemetryCollectorSpecObservability
 */
export interface OpenTelemetryCollectorSpecObservability {
  /**
   * @schema OpenTelemetryCollectorSpecObservability#metrics
   */
  readonly metrics?: OpenTelemetryCollectorSpecObservabilityMetrics;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecObservability' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecObservability(obj: OpenTelemetryCollectorSpecObservability | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metrics': toJson_OpenTelemetryCollectorSpecObservabilityMetrics(obj.metrics),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPodDisruptionBudget
 */
export interface OpenTelemetryCollectorSpecPodDisruptionBudget {
  /**
   * @schema OpenTelemetryCollectorSpecPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: OpenTelemetryCollectorSpecPodDisruptionBudgetMaxUnavailable;

  /**
   * @schema OpenTelemetryCollectorSpecPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: OpenTelemetryCollectorSpecPodDisruptionBudgetMinAvailable;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecPodDisruptionBudget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecPodDisruptionBudget(obj: OpenTelemetryCollectorSpecPodDisruptionBudget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxUnavailable': obj.maxUnavailable?.value,
    'minAvailable': obj.minAvailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPodSecurityContext
 */
export interface OpenTelemetryCollectorSpecPodSecurityContext {
  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#seLinuxChangePolicy
   */
  readonly seLinuxChangePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#supplementalGroupsPolicy
   */
  readonly supplementalGroupsPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#sysctls
   */
  readonly sysctls?: OpenTelemetryCollectorSpecPodSecurityContextSysctls[];

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecPodSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecPodSecurityContext(obj: OpenTelemetryCollectorSpecPodSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appArmorProfile': toJson_OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile(obj.appArmorProfile),
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxChangePolicy': obj.seLinuxChangePolicy,
    'seLinuxOptions': toJson_OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'supplementalGroupsPolicy': obj.supplementalGroupsPolicy,
    'sysctls': obj.sysctls?.map(y => toJson_OpenTelemetryCollectorSpecPodSecurityContextSysctls(y)),
    'windowsOptions': toJson_OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPorts
 */
export interface OpenTelemetryCollectorSpecPorts {
  /**
   * @schema OpenTelemetryCollectorSpecPorts#appProtocol
   */
  readonly appProtocol?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema OpenTelemetryCollectorSpecPorts#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPorts#nodePort
   */
  readonly nodePort?: number;

  /**
   * @schema OpenTelemetryCollectorSpecPorts#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorSpecPorts#protocol
   */
  readonly protocol?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPorts#targetPort
   */
  readonly targetPort?: OpenTelemetryCollectorSpecPortsTargetPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecPorts(obj: OpenTelemetryCollectorSpecPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appProtocol': obj.appProtocol,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'nodePort': obj.nodePort,
    'port': obj.port,
    'protocol': obj.protocol,
    'targetPort': obj.targetPort?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecResources
 */
export interface OpenTelemetryCollectorSpecResources {
  /**
   * @schema OpenTelemetryCollectorSpecResources#claims
   */
  readonly claims?: OpenTelemetryCollectorSpecResourcesClaims[];

  /**
   * @schema OpenTelemetryCollectorSpecResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorSpecResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorSpecResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorSpecResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecResources(obj: OpenTelemetryCollectorSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpenTelemetryCollectorSpecResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecSecurityContext
 */
export interface OpenTelemetryCollectorSpecSecurityContext {
  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorSpecSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#capabilities
   */
  readonly capabilities?: OpenTelemetryCollectorSpecSecurityContextCapabilities;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorSpecSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorSpecSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecSecurityContext(obj: OpenTelemetryCollectorSpecSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpenTelemetryCollectorSpecSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpenTelemetryCollectorSpecSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorSpecSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpenTelemetryCollectorSpecSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocator
 */
export interface OpenTelemetryCollectorSpecTargetAllocator {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#affinity
   */
  readonly affinity?: OpenTelemetryCollectorSpecTargetAllocatorAffinity;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#allocationStrategy
   */
  readonly allocationStrategy?: OpenTelemetryCollectorSpecTargetAllocatorAllocationStrategy;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#enabled
   */
  readonly enabled?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#env
   */
  readonly env?: OpenTelemetryCollectorSpecTargetAllocatorEnv[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#filterStrategy
   */
  readonly filterStrategy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#image
   */
  readonly image?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#observability
   */
  readonly observability?: OpenTelemetryCollectorSpecTargetAllocatorObservability;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#podDisruptionBudget
   */
  readonly podDisruptionBudget?: OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#podSecurityContext
   */
  readonly podSecurityContext?: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#prometheusCR
   */
  readonly prometheusCr?: OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#replicas
   */
  readonly replicas?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#resources
   */
  readonly resources?: OpenTelemetryCollectorSpecTargetAllocatorResources;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#securityContext
   */
  readonly securityContext?: OpenTelemetryCollectorSpecTargetAllocatorSecurityContext;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#serviceAccount
   */
  readonly serviceAccount?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#tolerations
   */
  readonly tolerations?: OpenTelemetryCollectorSpecTargetAllocatorTolerations[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocator#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocator' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocator(obj: OpenTelemetryCollectorSpecTargetAllocator | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affinity': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinity(obj.affinity),
    'allocationStrategy': obj.allocationStrategy,
    'enabled': obj.enabled,
    'env': obj.env?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorEnv(y)),
    'filterStrategy': obj.filterStrategy,
    'image': obj.image,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'observability': toJson_OpenTelemetryCollectorSpecTargetAllocatorObservability(obj.observability),
    'podDisruptionBudget': toJson_OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget(obj.podDisruptionBudget),
    'podSecurityContext': toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext(obj.podSecurityContext),
    'prometheusCR': toJson_OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr(obj.prometheusCr),
    'replicas': obj.replicas,
    'resources': toJson_OpenTelemetryCollectorSpecTargetAllocatorResources(obj.resources),
    'securityContext': toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContext(obj.securityContext),
    'serviceAccount': obj.serviceAccount,
    'tolerations': obj.tolerations?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTolerations
 */
export interface OpenTelemetryCollectorSpecTolerations {
  /**
   * @schema OpenTelemetryCollectorSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTolerations#key
   */
  readonly key?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTolerations(obj: OpenTelemetryCollectorSpecTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints
 */
export interface OpenTelemetryCollectorSpecTopologySpreadConstraints {
  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints#minDomains
   */
  readonly minDomains?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints#nodeAffinityPolicy
   */
  readonly nodeAffinityPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints#nodeTaintsPolicy
   */
  readonly nodeTaintsPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTopologySpreadConstraints(obj: OpenTelemetryCollectorSpecTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'maxSkew': obj.maxSkew,
    'minDomains': obj.minDomains,
    'nodeAffinityPolicy': obj.nodeAffinityPolicy,
    'nodeTaintsPolicy': obj.nodeTaintsPolicy,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecUpdateStrategy
 */
export interface OpenTelemetryCollectorSpecUpdateStrategy {
  /**
   * @schema OpenTelemetryCollectorSpecUpdateStrategy#rollingUpdate
   */
  readonly rollingUpdate?: OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate;

  /**
   * @schema OpenTelemetryCollectorSpecUpdateStrategy#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecUpdateStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecUpdateStrategy(obj: OpenTelemetryCollectorSpecUpdateStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'rollingUpdate': toJson_OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate(obj.rollingUpdate),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecUpgradeStrategy
 */
export enum OpenTelemetryCollectorSpecUpgradeStrategy {
  /** automatic */
  AUTOMATIC = "automatic",
  /** none */
  NONE = "none",
}

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplates
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplates {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplates#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplates#kind
   */
  readonly kind?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplates#metadata
   */
  readonly metadata?: OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplates#spec
   */
  readonly spec?: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplates#status
   */
  readonly status?: OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplates' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplates(obj: OpenTelemetryCollectorSpecVolumeClaimTemplates | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'metadata': toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata(obj.metadata),
    'spec': toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec(obj.spec),
    'status': toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus(obj.status),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeMounts
 */
export interface OpenTelemetryCollectorSpecVolumeMounts {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeMounts(obj: OpenTelemetryCollectorSpecVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumes
 */
export interface OpenTelemetryCollectorSpecVolumes {
  /**
   * @schema OpenTelemetryCollectorSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#azureDisk
   */
  readonly azureDisk?: OpenTelemetryCollectorSpecVolumesAzureDisk;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#azureFile
   */
  readonly azureFile?: OpenTelemetryCollectorSpecVolumesAzureFile;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#cephfs
   */
  readonly cephfs?: OpenTelemetryCollectorSpecVolumesCephfs;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#cinder
   */
  readonly cinder?: OpenTelemetryCollectorSpecVolumesCinder;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#configMap
   */
  readonly configMap?: OpenTelemetryCollectorSpecVolumesConfigMap;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#csi
   */
  readonly csi?: OpenTelemetryCollectorSpecVolumesCsi;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#downwardAPI
   */
  readonly downwardApi?: OpenTelemetryCollectorSpecVolumesDownwardApi;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#emptyDir
   */
  readonly emptyDir?: OpenTelemetryCollectorSpecVolumesEmptyDir;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#ephemeral
   */
  readonly ephemeral?: OpenTelemetryCollectorSpecVolumesEphemeral;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#fc
   */
  readonly fc?: OpenTelemetryCollectorSpecVolumesFc;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#flexVolume
   */
  readonly flexVolume?: OpenTelemetryCollectorSpecVolumesFlexVolume;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#flocker
   */
  readonly flocker?: OpenTelemetryCollectorSpecVolumesFlocker;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: OpenTelemetryCollectorSpecVolumesGcePersistentDisk;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#gitRepo
   */
  readonly gitRepo?: OpenTelemetryCollectorSpecVolumesGitRepo;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#glusterfs
   */
  readonly glusterfs?: OpenTelemetryCollectorSpecVolumesGlusterfs;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#hostPath
   */
  readonly hostPath?: OpenTelemetryCollectorSpecVolumesHostPath;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#image
   */
  readonly image?: OpenTelemetryCollectorSpecVolumesImage;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#iscsi
   */
  readonly iscsi?: OpenTelemetryCollectorSpecVolumesIscsi;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#nfs
   */
  readonly nfs?: OpenTelemetryCollectorSpecVolumesNfs;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: OpenTelemetryCollectorSpecVolumesPortworxVolume;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#projected
   */
  readonly projected?: OpenTelemetryCollectorSpecVolumesProjected;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#quobyte
   */
  readonly quobyte?: OpenTelemetryCollectorSpecVolumesQuobyte;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#rbd
   */
  readonly rbd?: OpenTelemetryCollectorSpecVolumesRbd;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#scaleIO
   */
  readonly scaleIo?: OpenTelemetryCollectorSpecVolumesScaleIo;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#secret
   */
  readonly secret?: OpenTelemetryCollectorSpecVolumesSecret;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#storageos
   */
  readonly storageos?: OpenTelemetryCollectorSpecVolumesStorageos;

  /**
   * @schema OpenTelemetryCollectorSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: OpenTelemetryCollectorSpecVolumesVsphereVolume;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumes(obj: OpenTelemetryCollectorSpecVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_OpenTelemetryCollectorSpecVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_OpenTelemetryCollectorSpecVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_OpenTelemetryCollectorSpecVolumesCephfs(obj.cephfs),
    'cinder': toJson_OpenTelemetryCollectorSpecVolumesCinder(obj.cinder),
    'configMap': toJson_OpenTelemetryCollectorSpecVolumesConfigMap(obj.configMap),
    'csi': toJson_OpenTelemetryCollectorSpecVolumesCsi(obj.csi),
    'downwardAPI': toJson_OpenTelemetryCollectorSpecVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_OpenTelemetryCollectorSpecVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_OpenTelemetryCollectorSpecVolumesEphemeral(obj.ephemeral),
    'fc': toJson_OpenTelemetryCollectorSpecVolumesFc(obj.fc),
    'flexVolume': toJson_OpenTelemetryCollectorSpecVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_OpenTelemetryCollectorSpecVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_OpenTelemetryCollectorSpecVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_OpenTelemetryCollectorSpecVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_OpenTelemetryCollectorSpecVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_OpenTelemetryCollectorSpecVolumesHostPath(obj.hostPath),
    'image': toJson_OpenTelemetryCollectorSpecVolumesImage(obj.image),
    'iscsi': toJson_OpenTelemetryCollectorSpecVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_OpenTelemetryCollectorSpecVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_OpenTelemetryCollectorSpecVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_OpenTelemetryCollectorSpecVolumesProjected(obj.projected),
    'quobyte': toJson_OpenTelemetryCollectorSpecVolumesQuobyte(obj.quobyte),
    'rbd': toJson_OpenTelemetryCollectorSpecVolumesRbd(obj.rbd),
    'scaleIO': toJson_OpenTelemetryCollectorSpecVolumesScaleIo(obj.scaleIo),
    'secret': toJson_OpenTelemetryCollectorSpecVolumesSecret(obj.secret),
    'storageos': toJson_OpenTelemetryCollectorSpecVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_OpenTelemetryCollectorSpecVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnv
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnv {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnv#valueFrom
   */
  readonly valueFrom?: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnv(obj: OpenTelemetryCollectorSpecAdditionalContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFrom
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnvFrom {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFrom#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvFrom(obj: OpenTelemetryCollectorSpecAdditionalContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecycle
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecycle {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecycle#postStart
   */
  readonly postStart?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecycle#preStop
   */
  readonly preStop?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecycle(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeExec;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe(obj: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersPorts
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersPorts {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersPorts(obj: OpenTelemetryCollectorSpecAdditionalContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeExec;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe(obj: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersResizePolicy
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersResizePolicy {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersResizePolicy#resourceName
   */
  readonly resourceName: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersResizePolicy#restartPolicy
   */
  readonly restartPolicy: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersResizePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersResizePolicy(obj: OpenTelemetryCollectorSpecAdditionalContainersResizePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceName': obj.resourceName,
    'restartPolicy': obj.restartPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersResources
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersResources {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersResources#claims
   */
  readonly claims?: OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorSpecAdditionalContainersResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorSpecAdditionalContainersResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersResources(obj: OpenTelemetryCollectorSpecAdditionalContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersSecurityContext {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#capabilities
   */
  readonly capabilities?: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContext(obj: OpenTelemetryCollectorSpecAdditionalContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersStartupProbe {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeExec;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbe(obj: OpenTelemetryCollectorSpecAdditionalContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices(obj: OpenTelemetryCollectorSpecAdditionalContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts(obj: OpenTelemetryCollectorSpecAdditionalContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinity
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinity {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinity(obj: OpenTelemetryCollectorSpecAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinity
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinity {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinity(obj: OpenTelemetryCollectorSpecAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinity
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinity {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinity(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerBehavior
 */
export interface OpenTelemetryCollectorSpecAutoscalerBehavior {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehavior#scaleDown
   */
  readonly scaleDown?: OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehavior#scaleUp
   */
  readonly scaleUp?: OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerBehavior' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerBehavior(obj: OpenTelemetryCollectorSpecAutoscalerBehavior | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'scaleDown': toJson_OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown(obj.scaleDown),
    'scaleUp': toJson_OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp(obj.scaleUp),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerMetrics
 */
export interface OpenTelemetryCollectorSpecAutoscalerMetrics {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetrics#pods
   */
  readonly pods?: OpenTelemetryCollectorSpecAutoscalerMetricsPods;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetrics#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerMetrics(obj: OpenTelemetryCollectorSpecAutoscalerMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'pods': toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPods(obj.pods),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate
 */
export interface OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate {
  /**
   * @schema OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate#maxSurge
   */
  readonly maxSurge?: OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxSurge;

  /**
   * @schema OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate#maxUnavailable
   */
  readonly maxUnavailable?: OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate(obj: OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxSurge': obj.maxSurge?.value,
    'maxUnavailable': obj.maxUnavailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnvValueFrom
 */
export interface OpenTelemetryCollectorSpecEnvValueFrom {
  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorSpecEnvValueFromFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnvValueFrom(obj: OpenTelemetryCollectorSpecEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpenTelemetryCollectorSpecEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnvFromConfigMapRef
 */
export interface OpenTelemetryCollectorSpecEnvFromConfigMapRef {
  /**
   * @schema OpenTelemetryCollectorSpecEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnvFromConfigMapRef(obj: OpenTelemetryCollectorSpecEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnvFromSecretRef
 */
export interface OpenTelemetryCollectorSpecEnvFromSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnvFromSecretRef(obj: OpenTelemetryCollectorSpecEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecIngressRoute
 */
export interface OpenTelemetryCollectorSpecIngressRoute {
  /**
   * @schema OpenTelemetryCollectorSpecIngressRoute#termination
   */
  readonly termination?: OpenTelemetryCollectorSpecIngressRouteTermination;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecIngressRoute' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecIngressRoute(obj: OpenTelemetryCollectorSpecIngressRoute | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'termination': obj.termination,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecIngressRuleType
 */
export enum OpenTelemetryCollectorSpecIngressRuleType {
  /** path */
  PATH = "path",
  /** subdomain */
  SUBDOMAIN = "subdomain",
}

/**
 * @schema OpenTelemetryCollectorSpecIngressTls
 */
export interface OpenTelemetryCollectorSpecIngressTls {
  /**
   * @schema OpenTelemetryCollectorSpecIngressTls#hosts
   */
  readonly hosts?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecIngressTls#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecIngressTls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecIngressTls(obj: OpenTelemetryCollectorSpecIngressTls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hosts': obj.hosts?.map(y => y),
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecIngressType
 */
export enum OpenTelemetryCollectorSpecIngressType {
  /** ingress */
  INGRESS = "ingress",
  /** route */
  ROUTE = "route",
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnv
 */
export interface OpenTelemetryCollectorSpecInitContainersEnv {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnv#valueFrom
   */
  readonly valueFrom?: OpenTelemetryCollectorSpecInitContainersEnvValueFrom;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnv(obj: OpenTelemetryCollectorSpecInitContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvFrom
 */
export interface OpenTelemetryCollectorSpecInitContainersEnvFrom {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnvFrom(obj: OpenTelemetryCollectorSpecInitContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecycle
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecycle {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecycle#postStart
   */
  readonly postStart?: OpenTelemetryCollectorSpecInitContainersLifecyclePostStart;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecycle#preStop
   */
  readonly preStop?: OpenTelemetryCollectorSpecInitContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecycle(obj: OpenTelemetryCollectorSpecInitContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe
 */
export interface OpenTelemetryCollectorSpecInitContainersLivenessProbe {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecInitContainersLivenessProbeExec;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbe(obj: OpenTelemetryCollectorSpecInitContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersPorts
 */
export interface OpenTelemetryCollectorSpecInitContainersPorts {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersPorts(obj: OpenTelemetryCollectorSpecInitContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe
 */
export interface OpenTelemetryCollectorSpecInitContainersReadinessProbe {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecInitContainersReadinessProbeExec;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbe(obj: OpenTelemetryCollectorSpecInitContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersResizePolicy
 */
export interface OpenTelemetryCollectorSpecInitContainersResizePolicy {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersResizePolicy#resourceName
   */
  readonly resourceName: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersResizePolicy#restartPolicy
   */
  readonly restartPolicy: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersResizePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersResizePolicy(obj: OpenTelemetryCollectorSpecInitContainersResizePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceName': obj.resourceName,
    'restartPolicy': obj.restartPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersResources
 */
export interface OpenTelemetryCollectorSpecInitContainersResources {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersResources#claims
   */
  readonly claims?: OpenTelemetryCollectorSpecInitContainersResourcesClaims[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorSpecInitContainersResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorSpecInitContainersResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersResources(obj: OpenTelemetryCollectorSpecInitContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext
 */
export interface OpenTelemetryCollectorSpecInitContainersSecurityContext {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersSecurityContext(obj: OpenTelemetryCollectorSpecInitContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe
 */
export interface OpenTelemetryCollectorSpecInitContainersStartupProbe {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecInitContainersStartupProbeExec;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersStartupProbe(obj: OpenTelemetryCollectorSpecInitContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersVolumeDevices
 */
export interface OpenTelemetryCollectorSpecInitContainersVolumeDevices {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersVolumeDevices(obj: OpenTelemetryCollectorSpecInitContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersVolumeMounts
 */
export interface OpenTelemetryCollectorSpecInitContainersVolumeMounts {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersVolumeMounts(obj: OpenTelemetryCollectorSpecInitContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePostStart
 */
export interface OpenTelemetryCollectorSpecLifecyclePostStart {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStart#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecLifecyclePostStartExec;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStart#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecLifecyclePostStartHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStart#sleep
   */
  readonly sleep?: OpenTelemetryCollectorSpecLifecyclePostStartSleep;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePostStart(obj: OpenTelemetryCollectorSpecLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorSpecLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorSpecLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePreStop
 */
export interface OpenTelemetryCollectorSpecLifecyclePreStop {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStop#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecLifecyclePreStopExec;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStop#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecLifecyclePreStopHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStop#sleep
   */
  readonly sleep?: OpenTelemetryCollectorSpecLifecyclePreStopSleep;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePreStop(obj: OpenTelemetryCollectorSpecLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorSpecLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorSpecLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecObservabilityMetrics
 */
export interface OpenTelemetryCollectorSpecObservabilityMetrics {
  /**
   * @schema OpenTelemetryCollectorSpecObservabilityMetrics#DisablePrometheusAnnotations
   */
  readonly disablePrometheusAnnotations?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecObservabilityMetrics#enableMetrics
   */
  readonly enableMetrics?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecObservabilityMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecObservabilityMetrics(obj: OpenTelemetryCollectorSpecObservabilityMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'DisablePrometheusAnnotations': obj.disablePrometheusAnnotations,
    'enableMetrics': obj.enableMetrics,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPodDisruptionBudgetMaxUnavailable
 */
export class OpenTelemetryCollectorSpecPodDisruptionBudgetMaxUnavailable {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecPodDisruptionBudgetMaxUnavailable {
    return new OpenTelemetryCollectorSpecPodDisruptionBudgetMaxUnavailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecPodDisruptionBudgetMaxUnavailable {
    return new OpenTelemetryCollectorSpecPodDisruptionBudgetMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecPodDisruptionBudgetMinAvailable
 */
export class OpenTelemetryCollectorSpecPodDisruptionBudgetMinAvailable {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecPodDisruptionBudgetMinAvailable {
    return new OpenTelemetryCollectorSpecPodDisruptionBudgetMinAvailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecPodDisruptionBudgetMinAvailable {
    return new OpenTelemetryCollectorSpecPodDisruptionBudgetMinAvailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorSpecPodSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile(obj: OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPodSecurityContextSysctls
 */
export interface OpenTelemetryCollectorSpecPodSecurityContextSysctls {
  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecPodSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecPodSecurityContextSysctls(obj: OpenTelemetryCollectorSpecPodSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions(obj: OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecPortsTargetPort
 */
export class OpenTelemetryCollectorSpecPortsTargetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecPortsTargetPort {
    return new OpenTelemetryCollectorSpecPortsTargetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecPortsTargetPort {
    return new OpenTelemetryCollectorSpecPortsTargetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecResourcesClaims
 */
export interface OpenTelemetryCollectorSpecResourcesClaims {
  /**
   * @schema OpenTelemetryCollectorSpecResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecResourcesClaims(obj: OpenTelemetryCollectorSpecResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecResourcesLimits
 */
export class OpenTelemetryCollectorSpecResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecResourcesLimits {
    return new OpenTelemetryCollectorSpecResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecResourcesLimits {
    return new OpenTelemetryCollectorSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecResourcesRequests
 */
export class OpenTelemetryCollectorSpecResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecResourcesRequests {
    return new OpenTelemetryCollectorSpecResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecResourcesRequests {
    return new OpenTelemetryCollectorSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorSpecSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorSpecSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecSecurityContextCapabilities
 */
export interface OpenTelemetryCollectorSpecSecurityContextCapabilities {
  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecSecurityContextCapabilities(obj: OpenTelemetryCollectorSpecSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorSpecSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecSecurityContextSeccompProfile(obj: OpenTelemetryCollectorSpecSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorSpecSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecSecurityContextWindowsOptions(obj: OpenTelemetryCollectorSpecSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinity
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinity {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinity#nodeAffinity
   */
  readonly nodeAffinity?: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinity#podAffinity
   */
  readonly podAffinity?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinity(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAllocationStrategy
 */
export enum OpenTelemetryCollectorSpecTargetAllocatorAllocationStrategy {
  /** least-weighted */
  LEAST_HYPHEN_WEIGHTED = "least-weighted",
  /** consistent-hashing */
  CONSISTENT_HYPHEN_HASHING = "consistent-hashing",
  /** per-node */
  PER_HYPHEN_NODE = "per-node",
}

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorEnv
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorEnv {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnv#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnv#valueFrom
   */
  readonly valueFrom?: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorEnv(obj: OpenTelemetryCollectorSpecTargetAllocatorEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorObservability
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorObservability {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorObservability#metrics
   */
  readonly metrics?: OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorObservability' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorObservability(obj: OpenTelemetryCollectorSpecTargetAllocatorObservability | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metrics': toJson_OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics(obj.metrics),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMaxUnavailable;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMinAvailable;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget(obj: OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxUnavailable': obj.maxUnavailable?.value,
    'minAvailable': obj.minAvailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#seLinuxChangePolicy
   */
  readonly seLinuxChangePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#supplementalGroupsPolicy
   */
  readonly supplementalGroupsPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#sysctls
   */
  readonly sysctls?: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext(obj: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appArmorProfile': toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile(obj.appArmorProfile),
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxChangePolicy': obj.seLinuxChangePolicy,
    'seLinuxOptions': toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'supplementalGroupsPolicy': obj.supplementalGroupsPolicy,
    'sysctls': obj.sysctls?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls(y)),
    'windowsOptions': toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr#enabled
   */
  readonly enabled?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr#podMonitorSelector
   */
  readonly podMonitorSelector?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr#scrapeInterval
   */
  readonly scrapeInterval?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr#serviceMonitorSelector
   */
  readonly serviceMonitorSelector?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr(obj: OpenTelemetryCollectorSpecTargetAllocatorPrometheusCr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enabled': obj.enabled,
    'podMonitorSelector': ((obj.podMonitorSelector) === undefined) ? undefined : (Object.entries(obj.podMonitorSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'scrapeInterval': obj.scrapeInterval,
    'serviceMonitorSelector': ((obj.serviceMonitorSelector) === undefined) ? undefined : (Object.entries(obj.serviceMonitorSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorResources
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorResources {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorResources#claims
   */
  readonly claims?: OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorSpecTargetAllocatorResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorSpecTargetAllocatorResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorResources(obj: OpenTelemetryCollectorSpecTargetAllocatorResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorSecurityContext {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#capabilities
   */
  readonly capabilities?: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContext(obj: OpenTelemetryCollectorSpecTargetAllocatorSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorTolerations
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorTolerations {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTolerations#key
   */
  readonly key?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorTolerations(obj: OpenTelemetryCollectorSpecTargetAllocatorTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints#minDomains
   */
  readonly minDomains?: number;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints#nodeAffinityPolicy
   */
  readonly nodeAffinityPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints#nodeTaintsPolicy
   */
  readonly nodeTaintsPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints(obj: OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'maxSkew': obj.maxSkew,
    'minDomains': obj.minDomains,
    'nodeAffinityPolicy': obj.nodeAffinityPolicy,
    'nodeTaintsPolicy': obj.nodeTaintsPolicy,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector
 */
export interface OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector(obj: OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate
 */
export interface OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate {
  /**
   * @schema OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate#maxSurge
   */
  readonly maxSurge?: OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxSurge;

  /**
   * @schema OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate#maxUnavailable
   */
  readonly maxUnavailable?: OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxUnavailable;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate(obj: OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxSurge': obj.maxSurge?.value,
    'maxUnavailable': obj.maxUnavailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#dataSource
   */
  readonly dataSource?: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#dataSourceRef
   */
  readonly dataSourceRef?: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#resources
   */
  readonly resources?: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#selector
   */
  readonly selector?: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources(obj.resources),
    'selector': toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus#allocatedResourceStatuses
   */
  readonly allocatedResourceStatuses?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus#allocatedResources
   */
  readonly allocatedResources?: { [key: string]: OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusAllocatedResources };

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus#capacity
   */
  readonly capacity?: { [key: string]: OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusCapacity };

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus#conditions
   */
  readonly conditions?: OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus#currentVolumeAttributesClassName
   */
  readonly currentVolumeAttributesClassName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus#modifyVolumeStatus
   */
  readonly modifyVolumeStatus?: OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus#phase
   */
  readonly phase?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'allocatedResourceStatuses': ((obj.allocatedResourceStatuses) === undefined) ? undefined : (Object.entries(obj.allocatedResourceStatuses).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'allocatedResources': ((obj.allocatedResources) === undefined) ? undefined : (Object.entries(obj.allocatedResources).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'capacity': ((obj.capacity) === undefined) ? undefined : (Object.entries(obj.capacity).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'conditions': obj.conditions?.map(y => toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions(y)),
    'currentVolumeAttributesClassName': obj.currentVolumeAttributesClassName,
    'modifyVolumeStatus': toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus(obj.modifyVolumeStatus),
    'phase': obj.phase,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore
 */
export interface OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore(obj: OpenTelemetryCollectorSpecVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesAzureDisk
 */
export interface OpenTelemetryCollectorSpecVolumesAzureDisk {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesAzureDisk(obj: OpenTelemetryCollectorSpecVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesAzureFile
 */
export interface OpenTelemetryCollectorSpecVolumesAzureFile {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesAzureFile(obj: OpenTelemetryCollectorSpecVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesCephfs
 */
export interface OpenTelemetryCollectorSpecVolumesCephfs {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecVolumesCephfsSecretRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesCephfs(obj: OpenTelemetryCollectorSpecVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_OpenTelemetryCollectorSpecVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesCinder
 */
export interface OpenTelemetryCollectorSpecVolumesCinder {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCinder#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecVolumesCinderSecretRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesCinder(obj: OpenTelemetryCollectorSpecVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorSpecVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesConfigMap
 */
export interface OpenTelemetryCollectorSpecVolumesConfigMap {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesConfigMap#items
   */
  readonly items?: OpenTelemetryCollectorSpecVolumesConfigMapItems[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesConfigMap(obj: OpenTelemetryCollectorSpecVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorSpecVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesCsi
 */
export interface OpenTelemetryCollectorSpecVolumesCsi {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: OpenTelemetryCollectorSpecVolumesCsiNodePublishSecretRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesCsi(obj: OpenTelemetryCollectorSpecVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_OpenTelemetryCollectorSpecVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesDownwardApi
 */
export interface OpenTelemetryCollectorSpecVolumesDownwardApi {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApi#items
   */
  readonly items?: OpenTelemetryCollectorSpecVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesDownwardApi(obj: OpenTelemetryCollectorSpecVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorSpecVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEmptyDir
 */
export interface OpenTelemetryCollectorSpecVolumesEmptyDir {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: OpenTelemetryCollectorSpecVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEmptyDir(obj: OpenTelemetryCollectorSpecVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeral
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeral {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeral(obj: OpenTelemetryCollectorSpecVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesFc
 */
export interface OpenTelemetryCollectorSpecVolumesFc {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesFc(obj: OpenTelemetryCollectorSpecVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesFlexVolume
 */
export interface OpenTelemetryCollectorSpecVolumesFlexVolume {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesFlexVolume(obj: OpenTelemetryCollectorSpecVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorSpecVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesFlocker
 */
export interface OpenTelemetryCollectorSpecVolumesFlocker {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesFlocker(obj: OpenTelemetryCollectorSpecVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesGcePersistentDisk
 */
export interface OpenTelemetryCollectorSpecVolumesGcePersistentDisk {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesGcePersistentDisk(obj: OpenTelemetryCollectorSpecVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesGitRepo
 */
export interface OpenTelemetryCollectorSpecVolumesGitRepo {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesGitRepo(obj: OpenTelemetryCollectorSpecVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesGlusterfs
 */
export interface OpenTelemetryCollectorSpecVolumesGlusterfs {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesGlusterfs(obj: OpenTelemetryCollectorSpecVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesHostPath
 */
export interface OpenTelemetryCollectorSpecVolumesHostPath {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesHostPath(obj: OpenTelemetryCollectorSpecVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesImage
 */
export interface OpenTelemetryCollectorSpecVolumesImage {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesImage#pullPolicy
   */
  readonly pullPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesImage#reference
   */
  readonly reference?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesImage' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesImage(obj: OpenTelemetryCollectorSpecVolumesImage | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'pullPolicy': obj.pullPolicy,
    'reference': obj.reference,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesIscsi
 */
export interface OpenTelemetryCollectorSpecVolumesIscsi {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecVolumesIscsiSecretRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesIscsi(obj: OpenTelemetryCollectorSpecVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorSpecVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesNfs
 */
export interface OpenTelemetryCollectorSpecVolumesNfs {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesNfs(obj: OpenTelemetryCollectorSpecVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim
 */
export interface OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim(obj: OpenTelemetryCollectorSpecVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk
 */
export interface OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk(obj: OpenTelemetryCollectorSpecVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesPortworxVolume
 */
export interface OpenTelemetryCollectorSpecVolumesPortworxVolume {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesPortworxVolume(obj: OpenTelemetryCollectorSpecVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjected
 */
export interface OpenTelemetryCollectorSpecVolumesProjected {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjected#sources
   */
  readonly sources?: OpenTelemetryCollectorSpecVolumesProjectedSources[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjected(obj: OpenTelemetryCollectorSpecVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_OpenTelemetryCollectorSpecVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesQuobyte
 */
export interface OpenTelemetryCollectorSpecVolumesQuobyte {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesQuobyte(obj: OpenTelemetryCollectorSpecVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesRbd
 */
export interface OpenTelemetryCollectorSpecVolumesRbd {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbd#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecVolumesRbdSecretRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesRbd(obj: OpenTelemetryCollectorSpecVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorSpecVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesScaleIo
 */
export interface OpenTelemetryCollectorSpecVolumesScaleIo {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: OpenTelemetryCollectorSpecVolumesScaleIoSecretRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesScaleIo(obj: OpenTelemetryCollectorSpecVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorSpecVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesSecret
 */
export interface OpenTelemetryCollectorSpecVolumesSecret {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesSecret#items
   */
  readonly items?: OpenTelemetryCollectorSpecVolumesSecretItems[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesSecret(obj: OpenTelemetryCollectorSpecVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorSpecVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesStorageos
 */
export interface OpenTelemetryCollectorSpecVolumesStorageos {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorSpecVolumesStorageosSecretRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesStorageos(obj: OpenTelemetryCollectorSpecVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorSpecVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesVsphereVolume
 */
export interface OpenTelemetryCollectorSpecVolumesVsphereVolume {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesVsphereVolume(obj: OpenTelemetryCollectorSpecVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom(obj: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef(obj: OpenTelemetryCollectorSpecAdditionalContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef(obj: OpenTelemetryCollectorSpecAdditionalContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartExec;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart#sleep
   */
  readonly sleep?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartSleep;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopExec;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop#sleep
   */
  readonly sleep?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopSleep;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeExec
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeExec {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeExec(obj: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc(obj: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet(obj: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket(obj: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeExec
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeExec {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeExec(obj: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc(obj: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet(obj: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket(obj: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims(obj: OpenTelemetryCollectorSpecAdditionalContainersResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersResourcesLimits
 */
export class OpenTelemetryCollectorSpecAdditionalContainersResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersResourcesLimits {
    return new OpenTelemetryCollectorSpecAdditionalContainersResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersResourcesLimits {
    return new OpenTelemetryCollectorSpecAdditionalContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersResourcesRequests
 */
export class OpenTelemetryCollectorSpecAdditionalContainersResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersResourcesRequests {
    return new OpenTelemetryCollectorSpecAdditionalContainersResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersResourcesRequests {
    return new OpenTelemetryCollectorSpecAdditionalContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities(obj: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile(obj: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions(obj: OpenTelemetryCollectorSpecAdditionalContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeExec
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersStartupProbeExec {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeExec(obj: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc(obj: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet(obj: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket(obj: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown
 */
export interface OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown#policies
   */
  readonly policies?: OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies[];

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown#selectPolicy
   */
  readonly selectPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown#stabilizationWindowSeconds
   */
  readonly stabilizationWindowSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown(obj: OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'policies': obj.policies?.map(y => toJson_OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies(y)),
    'selectPolicy': obj.selectPolicy,
    'stabilizationWindowSeconds': obj.stabilizationWindowSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp
 */
export interface OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp#policies
   */
  readonly policies?: OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies[];

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp#selectPolicy
   */
  readonly selectPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp#stabilizationWindowSeconds
   */
  readonly stabilizationWindowSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp(obj: OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'policies': obj.policies?.map(y => toJson_OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies(y)),
    'selectPolicy': obj.selectPolicy,
    'stabilizationWindowSeconds': obj.stabilizationWindowSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPods
 */
export interface OpenTelemetryCollectorSpecAutoscalerMetricsPods {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPods#metric
   */
  readonly metric: OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPods#target
   */
  readonly target: OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerMetricsPods' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPods(obj: OpenTelemetryCollectorSpecAutoscalerMetricsPods | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metric': toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric(obj.metric),
    'target': toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget(obj.target),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxSurge
 */
export class OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxSurge {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxSurge {
    return new OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxSurge(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxSurge {
    return new OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxSurge(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable
 */
export class OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable {
    return new OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable {
    return new OpenTelemetryCollectorSpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef
 */
export interface OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef(obj: OpenTelemetryCollectorSpecEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnvValueFromFieldRef
 */
export interface OpenTelemetryCollectorSpecEnvValueFromFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnvValueFromFieldRef(obj: OpenTelemetryCollectorSpecEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef
 */
export interface OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorSpecEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef(obj: OpenTelemetryCollectorSpecEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef
 */
export interface OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef {
  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef(obj: OpenTelemetryCollectorSpecEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecIngressRouteTermination
 */
export enum OpenTelemetryCollectorSpecIngressRouteTermination {
  /** insecure */
  INSECURE = "insecure",
  /** edge */
  EDGE = "edge",
  /** passthrough */
  PASSTHROUGH = "passthrough",
  /** reencrypt */
  REENCRYPT = "reencrypt",
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFrom
 */
export interface OpenTelemetryCollectorSpecInitContainersEnvValueFrom {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFrom(obj: OpenTelemetryCollectorSpecInitContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef
 */
export interface OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef(obj: OpenTelemetryCollectorSpecInitContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef
 */
export interface OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef(obj: OpenTelemetryCollectorSpecInitContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStart
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePostStart {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStart#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartExec;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStart#sleep
   */
  readonly sleep?: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartSleep;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStart(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStop
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePreStop {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStop#exec
   */
  readonly exec?: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopExec;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStop#sleep
   */
  readonly sleep?: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopSleep;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStop(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeExec
 */
export interface OpenTelemetryCollectorSpecInitContainersLivenessProbeExec {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeExec(obj: OpenTelemetryCollectorSpecInitContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc
 */
export interface OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc(obj: OpenTelemetryCollectorSpecInitContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet
 */
export interface OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet(obj: OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket
 */
export interface OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket(obj: OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeExec
 */
export interface OpenTelemetryCollectorSpecInitContainersReadinessProbeExec {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeExec(obj: OpenTelemetryCollectorSpecInitContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc
 */
export interface OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc(obj: OpenTelemetryCollectorSpecInitContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet
 */
export interface OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet(obj: OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket
 */
export interface OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket(obj: OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersResourcesClaims
 */
export interface OpenTelemetryCollectorSpecInitContainersResourcesClaims {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersResourcesClaims(obj: OpenTelemetryCollectorSpecInitContainersResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersResourcesLimits
 */
export class OpenTelemetryCollectorSpecInitContainersResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersResourcesLimits {
    return new OpenTelemetryCollectorSpecInitContainersResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersResourcesLimits {
    return new OpenTelemetryCollectorSpecInitContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersResourcesRequests
 */
export class OpenTelemetryCollectorSpecInitContainersResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersResourcesRequests {
    return new OpenTelemetryCollectorSpecInitContainersResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersResourcesRequests {
    return new OpenTelemetryCollectorSpecInitContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorSpecInitContainersSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities
 */
export interface OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities(obj: OpenTelemetryCollectorSpecInitContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorSpecInitContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile(obj: OpenTelemetryCollectorSpecInitContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions(obj: OpenTelemetryCollectorSpecInitContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeExec
 */
export interface OpenTelemetryCollectorSpecInitContainersStartupProbeExec {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeExec(obj: OpenTelemetryCollectorSpecInitContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc
 */
export interface OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc(obj: OpenTelemetryCollectorSpecInitContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet
 */
export interface OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet(obj: OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket
 */
export interface OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket(obj: OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePostStartExec
 */
export interface OpenTelemetryCollectorSpecLifecyclePostStartExec {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePostStartExec(obj: OpenTelemetryCollectorSpecLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGet
 */
export interface OpenTelemetryCollectorSpecLifecyclePostStartHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecLifecyclePostStartHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePostStartHttpGet(obj: OpenTelemetryCollectorSpecLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePostStartSleep
 */
export interface OpenTelemetryCollectorSpecLifecyclePostStartSleep {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePostStartSleep(obj: OpenTelemetryCollectorSpecLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket
 */
export interface OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket(obj: OpenTelemetryCollectorSpecLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePreStopExec
 */
export interface OpenTelemetryCollectorSpecLifecyclePreStopExec {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePreStopExec(obj: OpenTelemetryCollectorSpecLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGet
 */
export interface OpenTelemetryCollectorSpecLifecyclePreStopHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecLifecyclePreStopHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePreStopHttpGet(obj: OpenTelemetryCollectorSpecLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePreStopSleep
 */
export interface OpenTelemetryCollectorSpecLifecyclePreStopSleep {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePreStopSleep(obj: OpenTelemetryCollectorSpecLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket
 */
export interface OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket(obj: OpenTelemetryCollectorSpecLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom(obj: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics#DisablePrometheusAnnotations
   */
  readonly disablePrometheusAnnotations?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics#enableMetrics
   */
  readonly enableMetrics?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics(obj: OpenTelemetryCollectorSpecTargetAllocatorObservabilityMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'DisablePrometheusAnnotations': obj.disablePrometheusAnnotations,
    'enableMetrics': obj.enableMetrics,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMaxUnavailable
 */
export class OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMaxUnavailable {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMaxUnavailable {
    return new OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMaxUnavailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMaxUnavailable {
    return new OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMinAvailable
 */
export class OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMinAvailable {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMinAvailable {
    return new OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMinAvailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMinAvailable {
    return new OpenTelemetryCollectorSpecTargetAllocatorPodDisruptionBudgetMinAvailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile(obj: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls(obj: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions(obj: OpenTelemetryCollectorSpecTargetAllocatorPodSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims(obj: OpenTelemetryCollectorSpecTargetAllocatorResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorResourcesLimits
 */
export class OpenTelemetryCollectorSpecTargetAllocatorResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecTargetAllocatorResourcesLimits {
    return new OpenTelemetryCollectorSpecTargetAllocatorResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecTargetAllocatorResourcesLimits {
    return new OpenTelemetryCollectorSpecTargetAllocatorResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorResourcesRequests
 */
export class OpenTelemetryCollectorSpecTargetAllocatorResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecTargetAllocatorResourcesRequests {
    return new OpenTelemetryCollectorSpecTargetAllocatorResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecTargetAllocatorResourcesRequests {
    return new OpenTelemetryCollectorSpecTargetAllocatorResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities(obj: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile(obj: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions(obj: OpenTelemetryCollectorSpecTargetAllocatorSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxSurge
 */
export class OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxSurge {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxSurge {
    return new OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxSurge(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxSurge {
    return new OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxSurge(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxUnavailable
 */
export class OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxUnavailable {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxUnavailable {
    return new OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxUnavailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxUnavailable {
    return new OpenTelemetryCollectorSpecUpdateStrategyRollingUpdateMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusAllocatedResources
 */
export class OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusAllocatedResources {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusAllocatedResources {
    return new OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusAllocatedResources(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusAllocatedResources {
    return new OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusAllocatedResources(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusCapacity
 */
export class OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusCapacity {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusCapacity {
    return new OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusCapacity(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusCapacity {
    return new OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusCapacity(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions#message
   */
  readonly message?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusConditions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'lastProbeTime': obj.lastProbeTime?.toISOString(),
    'lastTransitionTime': obj.lastTransitionTime?.toISOString(),
    'message': obj.message,
    'reason': obj.reason,
    'status': obj.status,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus#status
   */
  readonly status: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus#targetVolumeAttributesClassName
   */
  readonly targetVolumeAttributesClassName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesStatusModifyVolumeStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'status': obj.status,
    'targetVolumeAttributesClassName': obj.targetVolumeAttributesClassName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesCephfsSecretRef
 */
export interface OpenTelemetryCollectorSpecVolumesCephfsSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesCephfsSecretRef(obj: OpenTelemetryCollectorSpecVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesCinderSecretRef
 */
export interface OpenTelemetryCollectorSpecVolumesCinderSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesCinderSecretRef(obj: OpenTelemetryCollectorSpecVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesConfigMapItems
 */
export interface OpenTelemetryCollectorSpecVolumesConfigMapItems {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesConfigMapItems(obj: OpenTelemetryCollectorSpecVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesCsiNodePublishSecretRef
 */
export interface OpenTelemetryCollectorSpecVolumesCsiNodePublishSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesCsiNodePublishSecretRef(obj: OpenTelemetryCollectorSpecVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItems
 */
export interface OpenTelemetryCollectorSpecVolumesDownwardApiItems {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesDownwardApiItems(obj: OpenTelemetryCollectorSpecVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEmptyDirSizeLimit
 */
export class OpenTelemetryCollectorSpecVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumesEmptyDirSizeLimit {
    return new OpenTelemetryCollectorSpecVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumesEmptyDirSizeLimit {
    return new OpenTelemetryCollectorSpecVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate(obj: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesFlexVolumeSecretRef
 */
export interface OpenTelemetryCollectorSpecVolumesFlexVolumeSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesFlexVolumeSecretRef(obj: OpenTelemetryCollectorSpecVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesIscsiSecretRef
 */
export interface OpenTelemetryCollectorSpecVolumesIscsiSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesIscsiSecretRef(obj: OpenTelemetryCollectorSpecVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSources
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSources {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSources#clusterTrustBundle
   */
  readonly clusterTrustBundle?: OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApi;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSources#secret
   */
  readonly secret?: OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSources(obj: OpenTelemetryCollectorSpecVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterTrustBundle': toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle(obj.clusterTrustBundle),
    'configMap': toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesRbdSecretRef
 */
export interface OpenTelemetryCollectorSpecVolumesRbdSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesRbdSecretRef(obj: OpenTelemetryCollectorSpecVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesScaleIoSecretRef
 */
export interface OpenTelemetryCollectorSpecVolumesScaleIoSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesScaleIoSecretRef(obj: OpenTelemetryCollectorSpecVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesSecretItems
 */
export interface OpenTelemetryCollectorSpecVolumesSecretItems {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesSecretItems(obj: OpenTelemetryCollectorSpecVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesStorageosSecretRef
 */
export interface OpenTelemetryCollectorSpecVolumesStorageosSecretRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesStorageosSecretRef(obj: OpenTelemetryCollectorSpecVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef(obj: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef(obj: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef(obj: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef(obj: OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartExec
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartExec {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartExec(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartSleep
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartSleep {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartSleep(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopExec
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopExec {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopExec(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopSleep
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopSleep {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopSleep(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocketPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocketPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocketPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies
 */
export interface OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies#periodSeconds
   */
  readonly periodSeconds: number;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies#type
   */
  readonly type: string;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies#value
   */
  readonly value: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies(obj: OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'periodSeconds': obj.periodSeconds,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies
 */
export interface OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies#periodSeconds
   */
  readonly periodSeconds: number;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies#type
   */
  readonly type: string;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies#value
   */
  readonly value: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies(obj: OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'periodSeconds': obj.periodSeconds,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric
 */
export interface OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric#selector
   */
  readonly selector?: OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric(obj: OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetric | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'selector': toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector(obj.selector),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget
 */
export interface OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget#averageUtilization
   */
  readonly averageUtilization?: number;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget#averageValue
   */
  readonly averageValue?: OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetAverageValue;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget#type
   */
  readonly type: string;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget#value
   */
  readonly value?: OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetValue;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget(obj: OpenTelemetryCollectorSpecAutoscalerMetricsPodsTarget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'averageUtilization': obj.averageUtilization,
    'averageValue': obj.averageValue?.value,
    'type': obj.type,
    'value': obj.value?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecEnvValueFromResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorSpecEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef
 */
export interface OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef(obj: OpenTelemetryCollectorSpecInitContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef
 */
export interface OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef(obj: OpenTelemetryCollectorSpecInitContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef
 */
export interface OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef(obj: OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef
 */
export interface OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef(obj: OpenTelemetryCollectorSpecInitContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartExec
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePostStartExec {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartExec(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartSleep
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePostStartSleep {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartSleep(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopExec
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePreStopExec {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopExec(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopSleep
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePreStopSleep {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopSleep(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetPort
 */
export class OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocketPort
 */
export class OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetPort
 */
export class OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocketPort
 */
export class OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetPort
 */
export class OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocketPort
 */
export class OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePostStartHttpGetPort
 */
export class OpenTelemetryCollectorSpecLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorSpecLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorSpecLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePostStartTcpSocketPort
 */
export class OpenTelemetryCollectorSpecLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorSpecLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorSpecLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePreStopHttpGetPort
 */
export class OpenTelemetryCollectorSpecLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorSpecLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorSpecLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecLifecyclePreStopTcpSocketPort
 */
export class OpenTelemetryCollectorSpecLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorSpecLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorSpecLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef(obj: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef(obj: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef(obj: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef(obj: OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesLimits
 */
export class OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesLimits {
    return new OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesLimits {
    return new OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesRequests
 */
export class OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesRequests {
    return new OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesRequests {
    return new OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecVolumeClaimTemplatesSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef
 */
export interface OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef(obj: OpenTelemetryCollectorSpecVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef(obj: OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata(obj: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec(obj: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle#optional
   */
  readonly optional?: boolean;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle#signerName
   */
  readonly signerName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj.labelSelector),
    'name': obj.name,
    'optional': obj.optional,
    'path': obj.path,
    'signerName': obj.signerName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApi
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApi {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApi(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocketPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocketPort
 */
export class OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorSpecAdditionalContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector
 */
export interface OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector(obj: OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetAverageValue
 */
export class OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetAverageValue {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetAverageValue {
    return new OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetAverageValue(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetAverageValue {
    return new OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetAverageValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetValue
 */
export class OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetValue {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetValue {
    return new OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetValue(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetValue {
    return new OpenTelemetryCollectorSpecAutoscalerMetricsPodsTargetValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetPort
 */
export class OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocketPort
 */
export class OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders(obj: OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetPort
 */
export class OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorSpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocketPort
 */
export class OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorSpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecTargetAllocatorEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecAutoscalerMetricsPodsMetricSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new OpenTelemetryCollectorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}


/**
 *
 *
 * @schema OpenTelemetryCollectorV1Beta1
 */
export class OpenTelemetryCollectorV1Beta1 extends ApiObject {
  /**
   * Returns the apiVersion and kind for "OpenTelemetryCollectorV1Beta1"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'opentelemetry.io/v1beta1',
    kind: 'OpenTelemetryCollector',
  }

  /**
   * Renders a Kubernetes manifest for "OpenTelemetryCollectorV1Beta1".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: OpenTelemetryCollectorV1Beta1Props = {}): any {
    return {
      ...OpenTelemetryCollectorV1Beta1.GVK,
      ...toJson_OpenTelemetryCollectorV1Beta1Props(props),
    };
  }

  /**
   * Defines a "OpenTelemetryCollectorV1Beta1" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: OpenTelemetryCollectorV1Beta1Props = {}) {
    super(scope, id, {
      ...OpenTelemetryCollectorV1Beta1.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...OpenTelemetryCollectorV1Beta1.GVK,
      ...toJson_OpenTelemetryCollectorV1Beta1Props(resolved),
    };
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1
 */
export interface OpenTelemetryCollectorV1Beta1Props {
  /**
   * @schema OpenTelemetryCollectorV1Beta1#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema OpenTelemetryCollectorV1Beta1#spec
   */
  readonly spec?: OpenTelemetryCollectorV1Beta1Spec;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1Props' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1Props(obj: OpenTelemetryCollectorV1Beta1Props | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_OpenTelemetryCollectorV1Beta1Spec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1Spec
 */
export interface OpenTelemetryCollectorV1Beta1Spec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#additionalContainers
   */
  readonly additionalContainers?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainers[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#affinity
   */
  readonly affinity?: OpenTelemetryCollectorV1Beta1SpecAffinity;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#args
   */
  readonly args?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#autoscaler
   */
  readonly autoscaler?: OpenTelemetryCollectorV1Beta1SpecAutoscaler;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#config
   */
  readonly config: OpenTelemetryCollectorV1Beta1SpecConfig;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#configVersions
   */
  readonly configVersions?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#configmaps
   */
  readonly configmaps?: OpenTelemetryCollectorV1Beta1SpecConfigmaps[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#daemonSetUpdateStrategy
   */
  readonly daemonSetUpdateStrategy?: OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#deploymentUpdateStrategy
   */
  readonly deploymentUpdateStrategy?: OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#env
   */
  readonly env?: OpenTelemetryCollectorV1Beta1SpecEnv[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#envFrom
   */
  readonly envFrom?: OpenTelemetryCollectorV1Beta1SpecEnvFrom[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#image
   */
  readonly image?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#ingress
   */
  readonly ingress?: OpenTelemetryCollectorV1Beta1SpecIngress;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#initContainers
   */
  readonly initContainers?: OpenTelemetryCollectorV1Beta1SpecInitContainers[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#ipFamilies
   */
  readonly ipFamilies?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#ipFamilyPolicy
   */
  readonly ipFamilyPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#lifecycle
   */
  readonly lifecycle?: OpenTelemetryCollectorV1Beta1SpecLifecycle;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#livenessProbe
   */
  readonly livenessProbe?: OpenTelemetryCollectorV1Beta1SpecLivenessProbe;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#managementState
   */
  readonly managementState: OpenTelemetryCollectorV1Beta1SpecManagementState;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#mode
   */
  readonly mode?: OpenTelemetryCollectorV1Beta1SpecMode;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#observability
   */
  readonly observability?: OpenTelemetryCollectorV1Beta1SpecObservability;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#persistentVolumeClaimRetentionPolicy
   */
  readonly persistentVolumeClaimRetentionPolicy?: OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#podAnnotations
   */
  readonly podAnnotations?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#podDisruptionBudget
   */
  readonly podDisruptionBudget?: OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#podDnsConfig
   */
  readonly podDnsConfig?: OpenTelemetryCollectorV1Beta1SpecPodDnsConfig;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#podSecurityContext
   */
  readonly podSecurityContext?: OpenTelemetryCollectorV1Beta1SpecPodSecurityContext;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#ports
   */
  readonly ports?: OpenTelemetryCollectorV1Beta1SpecPorts[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#readinessProbe
   */
  readonly readinessProbe?: OpenTelemetryCollectorV1Beta1SpecReadinessProbe;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#replicas
   */
  readonly replicas?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#resources
   */
  readonly resources?: OpenTelemetryCollectorV1Beta1SpecResources;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#securityContext
   */
  readonly securityContext?: OpenTelemetryCollectorV1Beta1SpecSecurityContext;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#serviceAccount
   */
  readonly serviceAccount?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#shareProcessNamespace
   */
  readonly shareProcessNamespace?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#targetAllocator
   */
  readonly targetAllocator?: OpenTelemetryCollectorV1Beta1SpecTargetAllocator;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#tolerations
   */
  readonly tolerations?: OpenTelemetryCollectorV1Beta1SpecTolerations[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#upgradeStrategy
   */
  readonly upgradeStrategy?: OpenTelemetryCollectorV1Beta1SpecUpgradeStrategy;

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#volumeClaimTemplates
   */
  readonly volumeClaimTemplates?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#volumeMounts
   */
  readonly volumeMounts?: OpenTelemetryCollectorV1Beta1SpecVolumeMounts[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1Spec#volumes
   */
  readonly volumes?: OpenTelemetryCollectorV1Beta1SpecVolumes[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1Spec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1Spec(obj: OpenTelemetryCollectorV1Beta1Spec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'additionalContainers': obj.additionalContainers?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainers(y)),
    'affinity': toJson_OpenTelemetryCollectorV1Beta1SpecAffinity(obj.affinity),
    'args': ((obj.args) === undefined) ? undefined : (Object.entries(obj.args).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'autoscaler': toJson_OpenTelemetryCollectorV1Beta1SpecAutoscaler(obj.autoscaler),
    'config': toJson_OpenTelemetryCollectorV1Beta1SpecConfig(obj.config),
    'configVersions': obj.configVersions,
    'configmaps': obj.configmaps?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecConfigmaps(y)),
    'daemonSetUpdateStrategy': toJson_OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy(obj.daemonSetUpdateStrategy),
    'deploymentUpdateStrategy': toJson_OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy(obj.deploymentUpdateStrategy),
    'env': obj.env?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecEnvFrom(y)),
    'hostNetwork': obj.hostNetwork,
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'ingress': toJson_OpenTelemetryCollectorV1Beta1SpecIngress(obj.ingress),
    'initContainers': obj.initContainers?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainers(y)),
    'ipFamilies': obj.ipFamilies?.map(y => y),
    'ipFamilyPolicy': obj.ipFamilyPolicy,
    'lifecycle': toJson_OpenTelemetryCollectorV1Beta1SpecLifecycle(obj.lifecycle),
    'livenessProbe': toJson_OpenTelemetryCollectorV1Beta1SpecLivenessProbe(obj.livenessProbe),
    'managementState': obj.managementState,
    'mode': obj.mode,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'observability': toJson_OpenTelemetryCollectorV1Beta1SpecObservability(obj.observability),
    'persistentVolumeClaimRetentionPolicy': toJson_OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy(obj.persistentVolumeClaimRetentionPolicy),
    'podAnnotations': ((obj.podAnnotations) === undefined) ? undefined : (Object.entries(obj.podAnnotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'podDisruptionBudget': toJson_OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget(obj.podDisruptionBudget),
    'podDnsConfig': toJson_OpenTelemetryCollectorV1Beta1SpecPodDnsConfig(obj.podDnsConfig),
    'podSecurityContext': toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContext(obj.podSecurityContext),
    'ports': obj.ports?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecPorts(y)),
    'priorityClassName': obj.priorityClassName,
    'readinessProbe': toJson_OpenTelemetryCollectorV1Beta1SpecReadinessProbe(obj.readinessProbe),
    'replicas': obj.replicas,
    'resources': toJson_OpenTelemetryCollectorV1Beta1SpecResources(obj.resources),
    'securityContext': toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContext(obj.securityContext),
    'serviceAccount': obj.serviceAccount,
    'shareProcessNamespace': obj.shareProcessNamespace,
    'targetAllocator': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocator(obj.targetAllocator),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'tolerations': obj.tolerations?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints(y)),
    'upgradeStrategy': obj.upgradeStrategy,
    'volumeClaimTemplates': obj.volumeClaimTemplates?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumeMounts(y)),
    'volumes': obj.volumes?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumes(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainers {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#args
   */
  readonly args?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#command
   */
  readonly command?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#env
   */
  readonly env?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#envFrom
   */
  readonly envFrom?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#image
   */
  readonly image?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#lifecycle
   */
  readonly lifecycle?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#livenessProbe
   */
  readonly livenessProbe?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#ports
   */
  readonly ports?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#readinessProbe
   */
  readonly readinessProbe?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#resizePolicy
   */
  readonly resizePolicy?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#resources
   */
  readonly resources?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#securityContext
   */
  readonly securityContext?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#startupProbe
   */
  readonly startupProbe?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#volumeDevices
   */
  readonly volumeDevices?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#volumeMounts
   */
  readonly volumeMounts?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainers(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts(y)),
    'readinessProbe': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe(obj.readinessProbe),
    'resizePolicy': obj.resizePolicy?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy(y)),
    'resources': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources(obj.resources),
    'restartPolicy': obj.restartPolicy,
    'securityContext': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinity
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinity {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinity#podAffinity
   */
  readonly podAffinity?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinity(obj: OpenTelemetryCollectorV1Beta1SpecAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscaler
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscaler {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscaler#behavior
   */
  readonly behavior?: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscaler#maxReplicas
   */
  readonly maxReplicas?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscaler#metrics
   */
  readonly metrics?: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscaler#minReplicas
   */
  readonly minReplicas?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscaler#targetCPUUtilization
   */
  readonly targetCpuUtilization?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscaler#targetMemoryUtilization
   */
  readonly targetMemoryUtilization?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscaler' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscaler(obj: OpenTelemetryCollectorV1Beta1SpecAutoscaler | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'behavior': toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior(obj.behavior),
    'maxReplicas': obj.maxReplicas,
    'metrics': obj.metrics?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics(y)),
    'minReplicas': obj.minReplicas,
    'targetCPUUtilization': obj.targetCpuUtilization,
    'targetMemoryUtilization': obj.targetMemoryUtilization,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecConfig
 */
export interface OpenTelemetryCollectorV1Beta1SpecConfig {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfig#connectors
   */
  readonly connectors?: any;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfig#exporters
   */
  readonly exporters: any;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfig#extensions
   */
  readonly extensions?: any;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfig#processors
   */
  readonly processors?: any;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfig#receivers
   */
  readonly receivers: any;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfig#service
   */
  readonly service: OpenTelemetryCollectorV1Beta1SpecConfigService;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecConfig(obj: OpenTelemetryCollectorV1Beta1SpecConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'connectors': obj.connectors,
    'exporters': obj.exporters,
    'extensions': obj.extensions,
    'processors': obj.processors,
    'receivers': obj.receivers,
    'service': toJson_OpenTelemetryCollectorV1Beta1SpecConfigService(obj.service),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecConfigmaps
 */
export interface OpenTelemetryCollectorV1Beta1SpecConfigmaps {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfigmaps#mountpath
   */
  readonly mountpath: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfigmaps#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecConfigmaps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecConfigmaps(obj: OpenTelemetryCollectorV1Beta1SpecConfigmaps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountpath': obj.mountpath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy
 */
export interface OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy#rollingUpdate
   */
  readonly rollingUpdate?: OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy(obj: OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'rollingUpdate': toJson_OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate(obj.rollingUpdate),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy
 */
export interface OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy#rollingUpdate
   */
  readonly rollingUpdate?: OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy(obj: OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'rollingUpdate': toJson_OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate(obj.rollingUpdate),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnv
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnv {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnv#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnv#valueFrom
   */
  readonly valueFrom?: OpenTelemetryCollectorV1Beta1SpecEnvValueFrom;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnv(obj: OpenTelemetryCollectorV1Beta1SpecEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvFrom
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnvFrom {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvFrom#configMapRef
   */
  readonly configMapRef?: OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvFrom#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnvFrom(obj: OpenTelemetryCollectorV1Beta1SpecEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecIngress
 */
export interface OpenTelemetryCollectorV1Beta1SpecIngress {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngress#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngress#hostname
   */
  readonly hostname?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngress#ingressClassName
   */
  readonly ingressClassName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngress#route
   */
  readonly route?: OpenTelemetryCollectorV1Beta1SpecIngressRoute;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngress#ruleType
   */
  readonly ruleType?: OpenTelemetryCollectorV1Beta1SpecIngressRuleType;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngress#tls
   */
  readonly tls?: OpenTelemetryCollectorV1Beta1SpecIngressTls[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngress#type
   */
  readonly type?: OpenTelemetryCollectorV1Beta1SpecIngressType;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecIngress' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecIngress(obj: OpenTelemetryCollectorV1Beta1SpecIngress | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'hostname': obj.hostname,
    'ingressClassName': obj.ingressClassName,
    'route': toJson_OpenTelemetryCollectorV1Beta1SpecIngressRoute(obj.route),
    'ruleType': obj.ruleType,
    'tls': obj.tls?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecIngressTls(y)),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainers {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#args
   */
  readonly args?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#command
   */
  readonly command?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#env
   */
  readonly env?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnv[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#envFrom
   */
  readonly envFrom?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#image
   */
  readonly image?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#lifecycle
   */
  readonly lifecycle?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#livenessProbe
   */
  readonly livenessProbe?: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#ports
   */
  readonly ports?: OpenTelemetryCollectorV1Beta1SpecInitContainersPorts[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#readinessProbe
   */
  readonly readinessProbe?: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#resizePolicy
   */
  readonly resizePolicy?: OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#resources
   */
  readonly resources?: OpenTelemetryCollectorV1Beta1SpecInitContainersResources;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#securityContext
   */
  readonly securityContext?: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#startupProbe
   */
  readonly startupProbe?: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#volumeDevices
   */
  readonly volumeDevices?: OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#volumeMounts
   */
  readonly volumeMounts?: OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainers(obj: OpenTelemetryCollectorV1Beta1SpecInitContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersPorts(y)),
    'readinessProbe': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe(obj.readinessProbe),
    'resizePolicy': obj.resizePolicy?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy(y)),
    'resources': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersResources(obj.resources),
    'restartPolicy': obj.restartPolicy,
    'securityContext': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecycle
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecycle {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecycle#postStart
   */
  readonly postStart?: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecycle#preStop
   */
  readonly preStop?: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecycle(obj: OpenTelemetryCollectorV1Beta1SpecLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart(obj.postStart),
    'preStop': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLivenessProbe
 */
export interface OpenTelemetryCollectorV1Beta1SpecLivenessProbe {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLivenessProbe(obj: OpenTelemetryCollectorV1Beta1SpecLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'failureThreshold': obj.failureThreshold,
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecManagementState
 */
export enum OpenTelemetryCollectorV1Beta1SpecManagementState {
  /** managed */
  MANAGED = "managed",
  /** unmanaged */
  UNMANAGED = "unmanaged",
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecMode
 */
export enum OpenTelemetryCollectorV1Beta1SpecMode {
  /** daemonset */
  DAEMONSET = "daemonset",
  /** deployment */
  DEPLOYMENT = "deployment",
  /** sidecar */
  SIDECAR = "sidecar",
  /** statefulset */
  STATEFULSET = "statefulset",
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecObservability
 */
export interface OpenTelemetryCollectorV1Beta1SpecObservability {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecObservability#metrics
   */
  readonly metrics?: OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecObservability' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecObservability(obj: OpenTelemetryCollectorV1Beta1SpecObservability | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metrics': toJson_OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics(obj.metrics),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy
 */
export interface OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy#whenDeleted
   */
  readonly whenDeleted?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy#whenScaled
   */
  readonly whenScaled?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy(obj: OpenTelemetryCollectorV1Beta1SpecPersistentVolumeClaimRetentionPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'whenDeleted': obj.whenDeleted,
    'whenScaled': obj.whenScaled,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMaxUnavailable;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMinAvailable;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget(obj: OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxUnavailable': obj.maxUnavailable?.value,
    'minAvailable': obj.minAvailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodDnsConfig
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodDnsConfig {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodDnsConfig#options
   */
  readonly options?: OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodDnsConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodDnsConfig(obj: OpenTelemetryCollectorV1Beta1SpecPodDnsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nameservers': obj.nameservers?.map(y => y),
    'options': obj.options?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions(y)),
    'searches': obj.searches?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodSecurityContext {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#seLinuxChangePolicy
   */
  readonly seLinuxChangePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#supplementalGroupsPolicy
   */
  readonly supplementalGroupsPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#sysctls
   */
  readonly sysctls?: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContext(obj: OpenTelemetryCollectorV1Beta1SpecPodSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appArmorProfile': toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile(obj.appArmorProfile),
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxChangePolicy': obj.seLinuxChangePolicy,
    'seLinuxOptions': toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'supplementalGroupsPolicy': obj.supplementalGroupsPolicy,
    'sysctls': obj.sysctls?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls(y)),
    'windowsOptions': toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPorts
 */
export interface OpenTelemetryCollectorV1Beta1SpecPorts {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPorts#appProtocol
   */
  readonly appProtocol?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPorts#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPorts#nodePort
   */
  readonly nodePort?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPorts#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPorts#protocol
   */
  readonly protocol?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPorts#targetPort
   */
  readonly targetPort?: OpenTelemetryCollectorV1Beta1SpecPortsTargetPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPorts(obj: OpenTelemetryCollectorV1Beta1SpecPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appProtocol': obj.appProtocol,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'nodePort': obj.nodePort,
    'port': obj.port,
    'protocol': obj.protocol,
    'targetPort': obj.targetPort?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecReadinessProbe
 */
export interface OpenTelemetryCollectorV1Beta1SpecReadinessProbe {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecReadinessProbe(obj: OpenTelemetryCollectorV1Beta1SpecReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'failureThreshold': obj.failureThreshold,
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecResources
 */
export interface OpenTelemetryCollectorV1Beta1SpecResources {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecResources#claims
   */
  readonly claims?: OpenTelemetryCollectorV1Beta1SpecResourcesClaims[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecResources(obj: OpenTelemetryCollectorV1Beta1SpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext
 */
export interface OpenTelemetryCollectorV1Beta1SpecSecurityContext {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#capabilities
   */
  readonly capabilities?: OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContext(obj: OpenTelemetryCollectorV1Beta1SpecSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocator {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#affinity
   */
  readonly affinity?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#allocationStrategy
   */
  readonly allocationStrategy?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAllocationStrategy;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#collectorNotReadyGracePeriod
   */
  readonly collectorNotReadyGracePeriod?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#enabled
   */
  readonly enabled?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#env
   */
  readonly env?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#filterStrategy
   */
  readonly filterStrategy?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorFilterStrategy;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#image
   */
  readonly image?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#observability
   */
  readonly observability?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservability;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#podDisruptionBudget
   */
  readonly podDisruptionBudget?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#podSecurityContext
   */
  readonly podSecurityContext?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#prometheusCR
   */
  readonly prometheusCr?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#replicas
   */
  readonly replicas?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#resources
   */
  readonly resources?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#securityContext
   */
  readonly securityContext?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#serviceAccount
   */
  readonly serviceAccount?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#tolerations
   */
  readonly tolerations?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocator#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocator' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocator(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocator | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affinity': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity(obj.affinity),
    'allocationStrategy': obj.allocationStrategy,
    'collectorNotReadyGracePeriod': obj.collectorNotReadyGracePeriod,
    'enabled': obj.enabled,
    'env': obj.env?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv(y)),
    'filterStrategy': obj.filterStrategy,
    'image': obj.image,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'observability': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservability(obj.observability),
    'podDisruptionBudget': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget(obj.podDisruptionBudget),
    'podSecurityContext': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext(obj.podSecurityContext),
    'prometheusCR': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr(obj.prometheusCr),
    'replicas': obj.replicas,
    'resources': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources(obj.resources),
    'securityContext': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext(obj.securityContext),
    'serviceAccount': obj.serviceAccount,
    'tolerations': obj.tolerations?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTolerations
 */
export interface OpenTelemetryCollectorV1Beta1SpecTolerations {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTolerations#key
   */
  readonly key?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTolerations(obj: OpenTelemetryCollectorV1Beta1SpecTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints
 */
export interface OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints#minDomains
   */
  readonly minDomains?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints#nodeAffinityPolicy
   */
  readonly nodeAffinityPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints#nodeTaintsPolicy
   */
  readonly nodeTaintsPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints(obj: OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'maxSkew': obj.maxSkew,
    'minDomains': obj.minDomains,
    'nodeAffinityPolicy': obj.nodeAffinityPolicy,
    'nodeTaintsPolicy': obj.nodeTaintsPolicy,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecUpgradeStrategy
 */
export enum OpenTelemetryCollectorV1Beta1SpecUpgradeStrategy {
  /** automatic */
  AUTOMATIC = "automatic",
  /** none */
  NONE = "none",
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates#kind
   */
  readonly kind?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates#metadata
   */
  readonly metadata?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates#spec
   */
  readonly spec?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates#status
   */
  readonly status?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplates | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'metadata': toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata(obj.metadata),
    'spec': toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec(obj.spec),
    'status': toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus(obj.status),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeMounts
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeMounts {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeMounts(obj: OpenTelemetryCollectorV1Beta1SpecVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumes
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumes {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#azureDisk
   */
  readonly azureDisk?: OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#azureFile
   */
  readonly azureFile?: OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#cephfs
   */
  readonly cephfs?: OpenTelemetryCollectorV1Beta1SpecVolumesCephfs;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#cinder
   */
  readonly cinder?: OpenTelemetryCollectorV1Beta1SpecVolumesCinder;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#configMap
   */
  readonly configMap?: OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#csi
   */
  readonly csi?: OpenTelemetryCollectorV1Beta1SpecVolumesCsi;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#downwardAPI
   */
  readonly downwardApi?: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#emptyDir
   */
  readonly emptyDir?: OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#ephemeral
   */
  readonly ephemeral?: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeral;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#fc
   */
  readonly fc?: OpenTelemetryCollectorV1Beta1SpecVolumesFc;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#flexVolume
   */
  readonly flexVolume?: OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#flocker
   */
  readonly flocker?: OpenTelemetryCollectorV1Beta1SpecVolumesFlocker;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#gitRepo
   */
  readonly gitRepo?: OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#glusterfs
   */
  readonly glusterfs?: OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#hostPath
   */
  readonly hostPath?: OpenTelemetryCollectorV1Beta1SpecVolumesHostPath;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#image
   */
  readonly image?: OpenTelemetryCollectorV1Beta1SpecVolumesImage;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#iscsi
   */
  readonly iscsi?: OpenTelemetryCollectorV1Beta1SpecVolumesIscsi;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#nfs
   */
  readonly nfs?: OpenTelemetryCollectorV1Beta1SpecVolumesNfs;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#portworxVolume
   */
  readonly portworxVolume?: OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#projected
   */
  readonly projected?: OpenTelemetryCollectorV1Beta1SpecVolumesProjected;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#quobyte
   */
  readonly quobyte?: OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#rbd
   */
  readonly rbd?: OpenTelemetryCollectorV1Beta1SpecVolumesRbd;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#scaleIO
   */
  readonly scaleIo?: OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#secret
   */
  readonly secret?: OpenTelemetryCollectorV1Beta1SpecVolumesSecret;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#storageos
   */
  readonly storageos?: OpenTelemetryCollectorV1Beta1SpecVolumesStorageos;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumes(obj: OpenTelemetryCollectorV1Beta1SpecVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCephfs(obj.cephfs),
    'cinder': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCinder(obj.cinder),
    'configMap': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap(obj.configMap),
    'csi': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCsi(obj.csi),
    'downwardAPI': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeral(obj.ephemeral),
    'fc': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesFc(obj.fc),
    'flexVolume': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesHostPath(obj.hostPath),
    'image': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesImage(obj.image),
    'iscsi': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjected(obj.projected),
    'quobyte': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte(obj.quobyte),
    'rbd': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesRbd(obj.rbd),
    'scaleIO': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo(obj.scaleIo),
    'secret': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesSecret(obj.secret),
    'storageos': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv#valueFrom
   */
  readonly valueFrom?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle#postStart
   */
  readonly postStart?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle#preStop
   */
  readonly preStop?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy#resourceName
   */
  readonly resourceName: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy#restartPolicy
   */
  readonly restartPolicy: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResizePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceName': obj.resourceName,
    'restartPolicy': obj.restartPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources#claims
   */
  readonly claims?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#capabilities
   */
  readonly capabilities?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior#scaleDown
   */
  readonly scaleDown?: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior#scaleUp
   */
  readonly scaleUp?: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehavior | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'scaleDown': toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown(obj.scaleDown),
    'scaleUp': toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp(obj.scaleUp),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics#pods
   */
  readonly pods?: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'pods': toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods(obj.pods),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecConfigService
 */
export interface OpenTelemetryCollectorV1Beta1SpecConfigService {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfigService#extensions
   */
  readonly extensions?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfigService#pipelines
   */
  readonly pipelines: { [key: string]: OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfigService#telemetry
   */
  readonly telemetry?: any;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecConfigService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecConfigService(obj: OpenTelemetryCollectorV1Beta1SpecConfigService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'extensions': obj.extensions?.map(y => y),
    'pipelines': ((obj.pipelines) === undefined) ? undefined : (Object.entries(obj.pipelines).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines(i[1]) }), {})),
    'telemetry': obj.telemetry,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate
 */
export interface OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate#maxSurge
   */
  readonly maxSurge?: OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxSurge;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate#maxUnavailable
   */
  readonly maxUnavailable?: OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxUnavailable;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate(obj: OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxSurge': obj.maxSurge?.value,
    'maxUnavailable': obj.maxUnavailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate
 */
export interface OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate#maxSurge
   */
  readonly maxSurge?: OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxSurge;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate#maxUnavailable
   */
  readonly maxUnavailable?: OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate(obj: OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxSurge': obj.maxSurge?.value,
    'maxUnavailable': obj.maxUnavailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFrom
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnvValueFrom {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFrom(obj: OpenTelemetryCollectorV1Beta1SpecEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef(obj: OpenTelemetryCollectorV1Beta1SpecEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecIngressRoute
 */
export interface OpenTelemetryCollectorV1Beta1SpecIngressRoute {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngressRoute#termination
   */
  readonly termination?: OpenTelemetryCollectorV1Beta1SpecIngressRouteTermination;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecIngressRoute' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecIngressRoute(obj: OpenTelemetryCollectorV1Beta1SpecIngressRoute | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'termination': obj.termination,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecIngressRuleType
 */
export enum OpenTelemetryCollectorV1Beta1SpecIngressRuleType {
  /** path */
  PATH = "path",
  /** subdomain */
  SUBDOMAIN = "subdomain",
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecIngressTls
 */
export interface OpenTelemetryCollectorV1Beta1SpecIngressTls {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngressTls#hosts
   */
  readonly hosts?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecIngressTls#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecIngressTls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecIngressTls(obj: OpenTelemetryCollectorV1Beta1SpecIngressTls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hosts': obj.hosts?.map(y => y),
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecIngressType
 */
export enum OpenTelemetryCollectorV1Beta1SpecIngressType {
  /** ingress */
  INGRESS = "ingress",
  /** route */
  ROUTE = "route",
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnv
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnv {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnv#valueFrom
   */
  readonly valueFrom?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnv(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle#postStart
   */
  readonly postStart?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle#preStop
   */
  readonly preStop?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersPorts
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersPorts {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersPorts(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy#resourceName
   */
  readonly resourceName: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy#restartPolicy
   */
  readonly restartPolicy: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersResizePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceName': obj.resourceName,
    'restartPolicy': obj.restartPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResources
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersResources {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResources#claims
   */
  readonly claims?: OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersResources(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#grpc
   */
  readonly grpc?: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart#sleep
   */
  readonly sleep?: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartSleep;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop#sleep
   */
  readonly sleep?: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopSleep;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics
 */
export interface OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics#disablePrometheusAnnotations
   */
  readonly disablePrometheusAnnotations?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics#enableMetrics
   */
  readonly enableMetrics?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics(obj: OpenTelemetryCollectorV1Beta1SpecObservabilityMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'disablePrometheusAnnotations': obj.disablePrometheusAnnotations,
    'enableMetrics': obj.enableMetrics,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMaxUnavailable
 */
export class OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMaxUnavailable {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMaxUnavailable {
    return new OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMaxUnavailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMaxUnavailable {
    return new OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMinAvailable
 */
export class OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMinAvailable {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMinAvailable {
    return new OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMinAvailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMinAvailable {
    return new OpenTelemetryCollectorV1Beta1SpecPodDisruptionBudgetMinAvailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions(obj: OpenTelemetryCollectorV1Beta1SpecPodDnsConfigOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile(obj: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls(obj: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions(obj: OpenTelemetryCollectorV1Beta1SpecPodSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecPortsTargetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecPortsTargetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecPortsTargetPort {
    return new OpenTelemetryCollectorV1Beta1SpecPortsTargetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecPortsTargetPort {
    return new OpenTelemetryCollectorV1Beta1SpecPortsTargetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecResourcesClaims
 */
export interface OpenTelemetryCollectorV1Beta1SpecResourcesClaims {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecResourcesClaims(obj: OpenTelemetryCollectorV1Beta1SpecResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecResourcesLimits
 */
export class OpenTelemetryCollectorV1Beta1SpecResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecResourcesRequests
 */
export class OpenTelemetryCollectorV1Beta1SpecResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorV1Beta1SpecSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities
 */
export interface OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities(obj: OpenTelemetryCollectorV1Beta1SpecSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorV1Beta1SpecSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile(obj: OpenTelemetryCollectorV1Beta1SpecSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions(obj: OpenTelemetryCollectorV1Beta1SpecSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity#nodeAffinity
   */
  readonly nodeAffinity?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity#podAffinity
   */
  readonly podAffinity?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAllocationStrategy
 */
export enum OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAllocationStrategy {
  /** least-weighted */
  LEAST_HYPHEN_WEIGHTED = "least-weighted",
  /** consistent-hashing */
  CONSISTENT_HYPHEN_HASHING = "consistent-hashing",
  /** per-node */
  PER_HYPHEN_NODE = "per-node",
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv#value
   */
  readonly value?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv#valueFrom
   */
  readonly valueFrom?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorFilterStrategy
 */
export enum OpenTelemetryCollectorV1Beta1SpecTargetAllocatorFilterStrategy {
  /** relabel-config */
  RELABEL_HYPHEN_CONFIG = "relabel-config",
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservability
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservability {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservability#metrics
   */
  readonly metrics?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservability' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservability(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservability | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metrics': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics(obj.metrics),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMaxUnavailable;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMinAvailable;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxUnavailable': obj.maxUnavailable?.value,
    'minAvailable': obj.minAvailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#seLinuxChangePolicy
   */
  readonly seLinuxChangePolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#supplementalGroupsPolicy
   */
  readonly supplementalGroupsPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#sysctls
   */
  readonly sysctls?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appArmorProfile': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile(obj.appArmorProfile),
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxChangePolicy': obj.seLinuxChangePolicy,
    'seLinuxOptions': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'supplementalGroupsPolicy': obj.supplementalGroupsPolicy,
    'sysctls': obj.sysctls?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls(y)),
    'windowsOptions': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr#allowNamespaces
   */
  readonly allowNamespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr#denyNamespaces
   */
  readonly denyNamespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr#enabled
   */
  readonly enabled?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr#podMonitorSelector
   */
  readonly podMonitorSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr#probeSelector
   */
  readonly probeSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr#scrapeConfigSelector
   */
  readonly scrapeConfigSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr#scrapeInterval
   */
  readonly scrapeInterval?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr#serviceMonitorSelector
   */
  readonly serviceMonitorSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowNamespaces': obj.allowNamespaces?.map(y => y),
    'denyNamespaces': obj.denyNamespaces?.map(y => y),
    'enabled': obj.enabled,
    'podMonitorSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector(obj.podMonitorSelector),
    'probeSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector(obj.probeSelector),
    'scrapeConfigSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector(obj.scrapeConfigSelector),
    'scrapeInterval': obj.scrapeInterval,
    'serviceMonitorSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector(obj.serviceMonitorSelector),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources#claims
   */
  readonly claims?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#capabilities
   */
  readonly capabilities?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#seccompProfile
   */
  readonly seccompProfile?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext#windowsOptions
   */
  readonly windowsOptions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations#key
   */
  readonly key?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints#minDomains
   */
  readonly minDomains?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints#nodeAffinityPolicy
   */
  readonly nodeAffinityPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints#nodeTaintsPolicy
   */
  readonly nodeTaintsPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'maxSkew': obj.maxSkew,
    'minDomains': obj.minDomains,
    'nodeAffinityPolicy': obj.nodeAffinityPolicy,
    'nodeTaintsPolicy': obj.nodeTaintsPolicy,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#dataSource
   */
  readonly dataSource?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#dataSourceRef
   */
  readonly dataSourceRef?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#resources
   */
  readonly resources?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#selector
   */
  readonly selector?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources(obj.resources),
    'selector': toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus#allocatedResourceStatuses
   */
  readonly allocatedResourceStatuses?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus#allocatedResources
   */
  readonly allocatedResources?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusAllocatedResources };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus#capacity
   */
  readonly capacity?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusCapacity };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus#conditions
   */
  readonly conditions?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus#currentVolumeAttributesClassName
   */
  readonly currentVolumeAttributesClassName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus#modifyVolumeStatus
   */
  readonly modifyVolumeStatus?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus#phase
   */
  readonly phase?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'allocatedResourceStatuses': ((obj.allocatedResourceStatuses) === undefined) ? undefined : (Object.entries(obj.allocatedResourceStatuses).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'allocatedResources': ((obj.allocatedResources) === undefined) ? undefined : (Object.entries(obj.allocatedResources).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'capacity': ((obj.capacity) === undefined) ? undefined : (Object.entries(obj.capacity).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'conditions': obj.conditions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions(y)),
    'currentVolumeAttributesClassName': obj.currentVolumeAttributesClassName,
    'modifyVolumeStatus': toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus(obj.modifyVolumeStatus),
    'phase': obj.phase,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore(obj: OpenTelemetryCollectorV1Beta1SpecVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk(obj: OpenTelemetryCollectorV1Beta1SpecVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile(obj: OpenTelemetryCollectorV1Beta1SpecVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfs
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesCephfs {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfs#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecVolumesCephfsSecretRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCephfs(obj: OpenTelemetryCollectorV1Beta1SpecVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCinder
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesCinder {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCinder#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecVolumesCinderSecretRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCinder(obj: OpenTelemetryCollectorV1Beta1SpecVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap#items
   */
  readonly items?: OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap(obj: OpenTelemetryCollectorV1Beta1SpecVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCsi
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesCsi {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: OpenTelemetryCollectorV1Beta1SpecVolumesCsiNodePublishSecretRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCsi(obj: OpenTelemetryCollectorV1Beta1SpecVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi#items
   */
  readonly items?: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi(obj: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeral
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeral {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeral(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFc
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesFc {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesFc(obj: OpenTelemetryCollectorV1Beta1SpecVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume(obj: OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlocker
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesFlocker {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesFlocker(obj: OpenTelemetryCollectorV1Beta1SpecVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk(obj: OpenTelemetryCollectorV1Beta1SpecVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo(obj: OpenTelemetryCollectorV1Beta1SpecVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs(obj: OpenTelemetryCollectorV1Beta1SpecVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesHostPath
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesHostPath {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesHostPath(obj: OpenTelemetryCollectorV1Beta1SpecVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesImage
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesImage {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesImage#pullPolicy
   */
  readonly pullPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesImage#reference
   */
  readonly reference?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesImage' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesImage(obj: OpenTelemetryCollectorV1Beta1SpecVolumesImage | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'pullPolicy': obj.pullPolicy,
    'reference': obj.reference,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesIscsi {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecVolumesIscsiSecretRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesIscsi(obj: OpenTelemetryCollectorV1Beta1SpecVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesNfs
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesNfs {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesNfs(obj: OpenTelemetryCollectorV1Beta1SpecVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim(obj: OpenTelemetryCollectorV1Beta1SpecVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk(obj: OpenTelemetryCollectorV1Beta1SpecVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume(obj: OpenTelemetryCollectorV1Beta1SpecVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjected
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjected {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjected#sources
   */
  readonly sources?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjected(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte(obj: OpenTelemetryCollectorV1Beta1SpecVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesRbd {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecVolumesRbdSecretRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesRbd(obj: OpenTelemetryCollectorV1Beta1SpecVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#secretRef
   */
  readonly secretRef: OpenTelemetryCollectorV1Beta1SpecVolumesScaleIoSecretRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo(obj: OpenTelemetryCollectorV1Beta1SpecVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecret
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesSecret {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecret#items
   */
  readonly items?: OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesSecret(obj: OpenTelemetryCollectorV1Beta1SpecVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesStorageos
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesStorageos {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesStorageos#secretRef
   */
  readonly secretRef?: OpenTelemetryCollectorV1Beta1SpecVolumesStorageosSecretRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesStorageos(obj: OpenTelemetryCollectorV1Beta1SpecVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume(obj: OpenTelemetryCollectorV1Beta1SpecVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart#sleep
   */
  readonly sleep?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartSleep;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop#sleep
   */
  readonly sleep?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopSleep;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeExec(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeExec(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesLimits
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesRequests
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeExec(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown#policies
   */
  readonly policies?: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown#selectPolicy
   */
  readonly selectPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown#stabilizationWindowSeconds
   */
  readonly stabilizationWindowSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDown | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'policies': obj.policies?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies(y)),
    'selectPolicy': obj.selectPolicy,
    'stabilizationWindowSeconds': obj.stabilizationWindowSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp#policies
   */
  readonly policies?: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp#selectPolicy
   */
  readonly selectPolicy?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp#stabilizationWindowSeconds
   */
  readonly stabilizationWindowSeconds?: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'policies': obj.policies?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies(y)),
    'selectPolicy': obj.selectPolicy,
    'stabilizationWindowSeconds': obj.stabilizationWindowSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods#metric
   */
  readonly metric: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods#target
   */
  readonly target: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPods | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metric': toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric(obj.metric),
    'target': toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget(obj.target),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines
 */
export interface OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines#exporters
   */
  readonly exporters: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines#processors
   */
  readonly processors?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines#receivers
   */
  readonly receivers: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines(obj: OpenTelemetryCollectorV1Beta1SpecConfigServicePipelines | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exporters': obj.exporters?.map(y => y),
    'processors': obj.processors?.map(y => y),
    'receivers': obj.receivers?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxSurge
 */
export class OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxSurge {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxSurge {
    return new OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxSurge(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxSurge {
    return new OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxSurge(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxUnavailable
 */
export class OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxUnavailable {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxUnavailable {
    return new OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxUnavailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxUnavailable {
    return new OpenTelemetryCollectorV1Beta1SpecDaemonSetUpdateStrategyRollingUpdateMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxSurge
 */
export class OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxSurge {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxSurge {
    return new OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxSurge(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxSurge {
    return new OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxSurge(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable
 */
export class OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable {
    return new OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable {
    return new OpenTelemetryCollectorV1Beta1SpecDeploymentUpdateStrategyRollingUpdateMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef(obj: OpenTelemetryCollectorV1Beta1SpecEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef(obj: OpenTelemetryCollectorV1Beta1SpecEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecIngressRouteTermination
 */
export enum OpenTelemetryCollectorV1Beta1SpecIngressRouteTermination {
  /** insecure */
  INSECURE = "insecure",
  /** edge */
  EDGE = "edge",
  /** passthrough */
  PASSTHROUGH = "passthrough",
  /** reencrypt */
  REENCRYPT = "reencrypt",
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart#sleep
   */
  readonly sleep?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartSleep;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop#exec
   */
  readonly exec?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopExec;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop#sleep
   */
  readonly sleep?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopSleep;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeExec(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeExec(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesLimits
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesRequests
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeExec(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartExec(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartSleep
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartSleep {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartSleep(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopExec(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopSleep
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopSleep {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopSleep(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics#disablePrometheusAnnotations
   */
  readonly disablePrometheusAnnotations?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics#enableMetrics
   */
  readonly enableMetrics?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorObservabilityMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'disablePrometheusAnnotations': obj.disablePrometheusAnnotations,
    'enableMetrics': obj.enableMetrics,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMaxUnavailable
 */
export class OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMaxUnavailable {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMaxUnavailable {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMaxUnavailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMaxUnavailable {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMinAvailable
 */
export class OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMinAvailable {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMinAvailable {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMinAvailable(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMinAvailable {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodDisruptionBudgetMinAvailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPodSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesLimits
 */
export class OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesRequests
 */
export class OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusAllocatedResources
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusAllocatedResources {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusAllocatedResources {
    return new OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusAllocatedResources(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusAllocatedResources {
    return new OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusAllocatedResources(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusCapacity
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusCapacity {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusCapacity {
    return new OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusCapacity(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusCapacity {
    return new OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusCapacity(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions#message
   */
  readonly message?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusConditions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'lastProbeTime': obj.lastProbeTime?.toISOString(),
    'lastTransitionTime': obj.lastTransitionTime?.toISOString(),
    'message': obj.message,
    'reason': obj.reason,
    'status': obj.status,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus#status
   */
  readonly status: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus#targetVolumeAttributesClassName
   */
  readonly targetVolumeAttributesClassName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesStatusModifyVolumeStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'status': obj.status,
    'targetVolumeAttributesClassName': obj.targetVolumeAttributesClassName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfsSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesCephfsSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCephfsSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCinderSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesCinderSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCinderSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems(obj: OpenTelemetryCollectorV1Beta1SpecVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCsiNodePublishSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesCsiNodePublishSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesCsiNodePublishSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems(obj: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDirSizeLimit
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDirSizeLimit {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDirSizeLimit {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolumeSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolumeSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolumeSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsiSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesIscsiSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesIscsiSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources#clusterTrustBundle
   */
  readonly clusterTrustBundle?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources#configMap
   */
  readonly configMap?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApi;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources#secret
   */
  readonly secret?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterTrustBundle': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle(obj.clusterTrustBundle),
    'configMap': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbdSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesRbdSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesRbdSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIoSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesScaleIoSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesScaleIoSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems(obj: OpenTelemetryCollectorV1Beta1SpecVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesStorageosSecretRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesStorageosSecretRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesStorageosSecretRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartExec(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartSleep
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartSleep {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartSleep(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopExec(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopSleep
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopSleep {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopSleep(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies#periodSeconds
   */
  readonly periodSeconds: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies#type
   */
  readonly type: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies#value
   */
  readonly value: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleDownPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'periodSeconds': obj.periodSeconds,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies#periodSeconds
   */
  readonly periodSeconds: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies#type
   */
  readonly type: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies#value
   */
  readonly value: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerBehaviorScaleUpPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'periodSeconds': obj.periodSeconds,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric#selector
   */
  readonly selector?: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetric | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'selector': toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector(obj.selector),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget#averageUtilization
   */
  readonly averageUtilization?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget#averageValue
   */
  readonly averageValue?: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetAverageValue;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget#type
   */
  readonly type: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget#value
   */
  readonly value?: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetValue;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTarget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'averageUtilization': obj.averageUtilization,
    'averageValue': obj.averageValue?.value,
    'type': obj.type,
    'value': obj.value?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartExec(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartSleep
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartSleep {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartSleep(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopExec
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopExec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopExec(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopSleep
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopSleep {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopSleep(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrPodMonitorSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrProbeSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrScrapeConfigSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorPrometheusCrServiceMonitorSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesLimits
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesRequests
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecVolumeClaimTemplatesSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle#optional
   */
  readonly optional?: boolean;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle#signerName
   */
  readonly signerName?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj.labelSelector),
    'name': obj.name,
    'optional': obj.optional,
    'path': obj.path,
    'signerName': obj.signerName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApi
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApi {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApi(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecAdditionalContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: OpenTelemetryCollectorV1Beta1SpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetAverageValue
 */
export class OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetAverageValue {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetAverageValue {
    return new OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetAverageValue(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetAverageValue {
    return new OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetAverageValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetValue
 */
export class OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetValue {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetValue {
    return new OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetValue(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetValue {
    return new OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsTargetValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders(obj: OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocketPort
 */
export class OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocketPort {
    return new OpenTelemetryCollectorV1Beta1SpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecTargetAllocatorEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecAutoscalerMetricsPodsMetricSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: OpenTelemetryCollectorV1Beta1SpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new OpenTelemetryCollectorV1Beta1SpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}


/**
 *
 *
 * @schema TargetAllocator
 */
export class TargetAllocator extends ApiObject {
  /**
   * Returns the apiVersion and kind for "TargetAllocator"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'opentelemetry.io/v1alpha1',
    kind: 'TargetAllocator',
  }

  /**
   * Renders a Kubernetes manifest for "TargetAllocator".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TargetAllocatorProps = {}): any {
    return {
      ...TargetAllocator.GVK,
      ...toJson_TargetAllocatorProps(props),
    };
  }

  /**
   * Defines a "TargetAllocator" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TargetAllocatorProps = {}) {
    super(scope, id, {
      ...TargetAllocator.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...TargetAllocator.GVK,
      ...toJson_TargetAllocatorProps(resolved),
    };
  }
}

/**
 * @schema TargetAllocator
 */
export interface TargetAllocatorProps {
  /**
   * @schema TargetAllocator#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema TargetAllocator#spec
   */
  readonly spec?: TargetAllocatorSpec;

}

/**
 * Converts an object of type 'TargetAllocatorProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorProps(obj: TargetAllocatorProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_TargetAllocatorSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpec
 */
export interface TargetAllocatorSpec {
  /**
   * @schema TargetAllocatorSpec#additionalContainers
   */
  readonly additionalContainers?: TargetAllocatorSpecAdditionalContainers[];

  /**
   * @schema TargetAllocatorSpec#affinity
   */
  readonly affinity?: TargetAllocatorSpecAffinity;

  /**
   * @schema TargetAllocatorSpec#allocationStrategy
   */
  readonly allocationStrategy?: TargetAllocatorSpecAllocationStrategy;

  /**
   * @schema TargetAllocatorSpec#args
   */
  readonly args?: { [key: string]: string };

  /**
   * @schema TargetAllocatorSpec#collectorNotReadyGracePeriod
   */
  readonly collectorNotReadyGracePeriod?: string;

  /**
   * @schema TargetAllocatorSpec#env
   */
  readonly env?: TargetAllocatorSpecEnv[];

  /**
   * @schema TargetAllocatorSpec#envFrom
   */
  readonly envFrom?: TargetAllocatorSpecEnvFrom[];

  /**
   * @schema TargetAllocatorSpec#filterStrategy
   */
  readonly filterStrategy?: TargetAllocatorSpecFilterStrategy;

  /**
   * @schema TargetAllocatorSpec#global
   */
  readonly global?: any;

  /**
   * @schema TargetAllocatorSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * @schema TargetAllocatorSpec#image
   */
  readonly image?: string;

  /**
   * @schema TargetAllocatorSpec#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema TargetAllocatorSpec#initContainers
   */
  readonly initContainers?: TargetAllocatorSpecInitContainers[];

  /**
   * @schema TargetAllocatorSpec#ipFamilies
   */
  readonly ipFamilies?: string[];

  /**
   * @schema TargetAllocatorSpec#ipFamilyPolicy
   */
  readonly ipFamilyPolicy?: string;

  /**
   * @schema TargetAllocatorSpec#lifecycle
   */
  readonly lifecycle?: TargetAllocatorSpecLifecycle;

  /**
   * @schema TargetAllocatorSpec#managementState
   */
  readonly managementState: TargetAllocatorSpecManagementState;

  /**
   * @schema TargetAllocatorSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema TargetAllocatorSpec#observability
   */
  readonly observability?: TargetAllocatorSpecObservability;

  /**
   * @schema TargetAllocatorSpec#podAnnotations
   */
  readonly podAnnotations?: { [key: string]: string };

  /**
   * @schema TargetAllocatorSpec#podDisruptionBudget
   */
  readonly podDisruptionBudget?: TargetAllocatorSpecPodDisruptionBudget;

  /**
   * @schema TargetAllocatorSpec#podDnsConfig
   */
  readonly podDnsConfig?: TargetAllocatorSpecPodDnsConfig;

  /**
   * @schema TargetAllocatorSpec#podSecurityContext
   */
  readonly podSecurityContext?: TargetAllocatorSpecPodSecurityContext;

  /**
   * @schema TargetAllocatorSpec#ports
   */
  readonly ports?: TargetAllocatorSpecPorts[];

  /**
   * @schema TargetAllocatorSpec#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * @schema TargetAllocatorSpec#prometheusCR
   */
  readonly prometheusCr?: TargetAllocatorSpecPrometheusCr;

  /**
   * @schema TargetAllocatorSpec#replicas
   */
  readonly replicas?: number;

  /**
   * @schema TargetAllocatorSpec#resources
   */
  readonly resources?: TargetAllocatorSpecResources;

  /**
   * @schema TargetAllocatorSpec#scrapeConfigs
   */
  readonly scrapeConfigs?: any[];

  /**
   * @schema TargetAllocatorSpec#securityContext
   */
  readonly securityContext?: TargetAllocatorSpecSecurityContext;

  /**
   * @schema TargetAllocatorSpec#serviceAccount
   */
  readonly serviceAccount?: string;

  /**
   * @schema TargetAllocatorSpec#shareProcessNamespace
   */
  readonly shareProcessNamespace?: boolean;

  /**
   * @schema TargetAllocatorSpec#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TargetAllocatorSpec#tolerations
   */
  readonly tolerations?: TargetAllocatorSpecTolerations[];

  /**
   * @schema TargetAllocatorSpec#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: TargetAllocatorSpecTopologySpreadConstraints[];

  /**
   * @schema TargetAllocatorSpec#volumeMounts
   */
  readonly volumeMounts?: TargetAllocatorSpecVolumeMounts[];

  /**
   * @schema TargetAllocatorSpec#volumes
   */
  readonly volumes?: TargetAllocatorSpecVolumes[];

}

/**
 * Converts an object of type 'TargetAllocatorSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpec(obj: TargetAllocatorSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'additionalContainers': obj.additionalContainers?.map(y => toJson_TargetAllocatorSpecAdditionalContainers(y)),
    'affinity': toJson_TargetAllocatorSpecAffinity(obj.affinity),
    'allocationStrategy': obj.allocationStrategy,
    'args': ((obj.args) === undefined) ? undefined : (Object.entries(obj.args).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'collectorNotReadyGracePeriod': obj.collectorNotReadyGracePeriod,
    'env': obj.env?.map(y => toJson_TargetAllocatorSpecEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_TargetAllocatorSpecEnvFrom(y)),
    'filterStrategy': obj.filterStrategy,
    'global': obj.global,
    'hostNetwork': obj.hostNetwork,
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'initContainers': obj.initContainers?.map(y => toJson_TargetAllocatorSpecInitContainers(y)),
    'ipFamilies': obj.ipFamilies?.map(y => y),
    'ipFamilyPolicy': obj.ipFamilyPolicy,
    'lifecycle': toJson_TargetAllocatorSpecLifecycle(obj.lifecycle),
    'managementState': obj.managementState,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'observability': toJson_TargetAllocatorSpecObservability(obj.observability),
    'podAnnotations': ((obj.podAnnotations) === undefined) ? undefined : (Object.entries(obj.podAnnotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'podDisruptionBudget': toJson_TargetAllocatorSpecPodDisruptionBudget(obj.podDisruptionBudget),
    'podDnsConfig': toJson_TargetAllocatorSpecPodDnsConfig(obj.podDnsConfig),
    'podSecurityContext': toJson_TargetAllocatorSpecPodSecurityContext(obj.podSecurityContext),
    'ports': obj.ports?.map(y => toJson_TargetAllocatorSpecPorts(y)),
    'priorityClassName': obj.priorityClassName,
    'prometheusCR': toJson_TargetAllocatorSpecPrometheusCr(obj.prometheusCr),
    'replicas': obj.replicas,
    'resources': toJson_TargetAllocatorSpecResources(obj.resources),
    'scrapeConfigs': obj.scrapeConfigs?.map(y => y),
    'securityContext': toJson_TargetAllocatorSpecSecurityContext(obj.securityContext),
    'serviceAccount': obj.serviceAccount,
    'shareProcessNamespace': obj.shareProcessNamespace,
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'tolerations': obj.tolerations?.map(y => toJson_TargetAllocatorSpecTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_TargetAllocatorSpecTopologySpreadConstraints(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_TargetAllocatorSpecVolumeMounts(y)),
    'volumes': obj.volumes?.map(y => toJson_TargetAllocatorSpecVolumes(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainers
 */
export interface TargetAllocatorSpecAdditionalContainers {
  /**
   * @schema TargetAllocatorSpecAdditionalContainers#args
   */
  readonly args?: string[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#command
   */
  readonly command?: string[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#env
   */
  readonly env?: TargetAllocatorSpecAdditionalContainersEnv[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#envFrom
   */
  readonly envFrom?: TargetAllocatorSpecAdditionalContainersEnvFrom[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#image
   */
  readonly image?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#lifecycle
   */
  readonly lifecycle?: TargetAllocatorSpecAdditionalContainersLifecycle;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#livenessProbe
   */
  readonly livenessProbe?: TargetAllocatorSpecAdditionalContainersLivenessProbe;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#ports
   */
  readonly ports?: TargetAllocatorSpecAdditionalContainersPorts[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#readinessProbe
   */
  readonly readinessProbe?: TargetAllocatorSpecAdditionalContainersReadinessProbe;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#resizePolicy
   */
  readonly resizePolicy?: TargetAllocatorSpecAdditionalContainersResizePolicy[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#resources
   */
  readonly resources?: TargetAllocatorSpecAdditionalContainersResources;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#securityContext
   */
  readonly securityContext?: TargetAllocatorSpecAdditionalContainersSecurityContext;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#startupProbe
   */
  readonly startupProbe?: TargetAllocatorSpecAdditionalContainersStartupProbe;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#volumeDevices
   */
  readonly volumeDevices?: TargetAllocatorSpecAdditionalContainersVolumeDevices[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#volumeMounts
   */
  readonly volumeMounts?: TargetAllocatorSpecAdditionalContainersVolumeMounts[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainers(obj: TargetAllocatorSpecAdditionalContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_TargetAllocatorSpecAdditionalContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_TargetAllocatorSpecAdditionalContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_TargetAllocatorSpecAdditionalContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_TargetAllocatorSpecAdditionalContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_TargetAllocatorSpecAdditionalContainersPorts(y)),
    'readinessProbe': toJson_TargetAllocatorSpecAdditionalContainersReadinessProbe(obj.readinessProbe),
    'resizePolicy': obj.resizePolicy?.map(y => toJson_TargetAllocatorSpecAdditionalContainersResizePolicy(y)),
    'resources': toJson_TargetAllocatorSpecAdditionalContainersResources(obj.resources),
    'restartPolicy': obj.restartPolicy,
    'securityContext': toJson_TargetAllocatorSpecAdditionalContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_TargetAllocatorSpecAdditionalContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_TargetAllocatorSpecAdditionalContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_TargetAllocatorSpecAdditionalContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinity
 */
export interface TargetAllocatorSpecAffinity {
  /**
   * @schema TargetAllocatorSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: TargetAllocatorSpecAffinityNodeAffinity;

  /**
   * @schema TargetAllocatorSpecAffinity#podAffinity
   */
  readonly podAffinity?: TargetAllocatorSpecAffinityPodAffinity;

  /**
   * @schema TargetAllocatorSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: TargetAllocatorSpecAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinity(obj: TargetAllocatorSpecAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_TargetAllocatorSpecAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_TargetAllocatorSpecAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_TargetAllocatorSpecAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAllocationStrategy
 */
export enum TargetAllocatorSpecAllocationStrategy {
  /** least-weighted */
  LEAST_HYPHEN_WEIGHTED = "least-weighted",
  /** consistent-hashing */
  CONSISTENT_HYPHEN_HASHING = "consistent-hashing",
  /** per-node */
  PER_HYPHEN_NODE = "per-node",
}

/**
 * @schema TargetAllocatorSpecEnv
 */
export interface TargetAllocatorSpecEnv {
  /**
   * @schema TargetAllocatorSpecEnv#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecEnv#value
   */
  readonly value?: string;

  /**
   * @schema TargetAllocatorSpecEnv#valueFrom
   */
  readonly valueFrom?: TargetAllocatorSpecEnvValueFrom;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnv(obj: TargetAllocatorSpecEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_TargetAllocatorSpecEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvFrom
 */
export interface TargetAllocatorSpecEnvFrom {
  /**
   * @schema TargetAllocatorSpecEnvFrom#configMapRef
   */
  readonly configMapRef?: TargetAllocatorSpecEnvFromConfigMapRef;

  /**
   * @schema TargetAllocatorSpecEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema TargetAllocatorSpecEnvFrom#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecEnvFromSecretRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnvFrom(obj: TargetAllocatorSpecEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_TargetAllocatorSpecEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_TargetAllocatorSpecEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecFilterStrategy
 */
export enum TargetAllocatorSpecFilterStrategy {
  /** relabel-config */
  RELABEL_HYPHEN_CONFIG = "relabel-config",
}

/**
 * @schema TargetAllocatorSpecInitContainers
 */
export interface TargetAllocatorSpecInitContainers {
  /**
   * @schema TargetAllocatorSpecInitContainers#args
   */
  readonly args?: string[];

  /**
   * @schema TargetAllocatorSpecInitContainers#command
   */
  readonly command?: string[];

  /**
   * @schema TargetAllocatorSpecInitContainers#env
   */
  readonly env?: TargetAllocatorSpecInitContainersEnv[];

  /**
   * @schema TargetAllocatorSpecInitContainers#envFrom
   */
  readonly envFrom?: TargetAllocatorSpecInitContainersEnvFrom[];

  /**
   * @schema TargetAllocatorSpecInitContainers#image
   */
  readonly image?: string;

  /**
   * @schema TargetAllocatorSpecInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema TargetAllocatorSpecInitContainers#lifecycle
   */
  readonly lifecycle?: TargetAllocatorSpecInitContainersLifecycle;

  /**
   * @schema TargetAllocatorSpecInitContainers#livenessProbe
   */
  readonly livenessProbe?: TargetAllocatorSpecInitContainersLivenessProbe;

  /**
   * @schema TargetAllocatorSpecInitContainers#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainers#ports
   */
  readonly ports?: TargetAllocatorSpecInitContainersPorts[];

  /**
   * @schema TargetAllocatorSpecInitContainers#readinessProbe
   */
  readonly readinessProbe?: TargetAllocatorSpecInitContainersReadinessProbe;

  /**
   * @schema TargetAllocatorSpecInitContainers#resizePolicy
   */
  readonly resizePolicy?: TargetAllocatorSpecInitContainersResizePolicy[];

  /**
   * @schema TargetAllocatorSpecInitContainers#resources
   */
  readonly resources?: TargetAllocatorSpecInitContainersResources;

  /**
   * @schema TargetAllocatorSpecInitContainers#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * @schema TargetAllocatorSpecInitContainers#securityContext
   */
  readonly securityContext?: TargetAllocatorSpecInitContainersSecurityContext;

  /**
   * @schema TargetAllocatorSpecInitContainers#startupProbe
   */
  readonly startupProbe?: TargetAllocatorSpecInitContainersStartupProbe;

  /**
   * @schema TargetAllocatorSpecInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema TargetAllocatorSpecInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema TargetAllocatorSpecInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainers#volumeDevices
   */
  readonly volumeDevices?: TargetAllocatorSpecInitContainersVolumeDevices[];

  /**
   * @schema TargetAllocatorSpecInitContainers#volumeMounts
   */
  readonly volumeMounts?: TargetAllocatorSpecInitContainersVolumeMounts[];

  /**
   * @schema TargetAllocatorSpecInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainers(obj: TargetAllocatorSpecInitContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_TargetAllocatorSpecInitContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_TargetAllocatorSpecInitContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_TargetAllocatorSpecInitContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_TargetAllocatorSpecInitContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_TargetAllocatorSpecInitContainersPorts(y)),
    'readinessProbe': toJson_TargetAllocatorSpecInitContainersReadinessProbe(obj.readinessProbe),
    'resizePolicy': obj.resizePolicy?.map(y => toJson_TargetAllocatorSpecInitContainersResizePolicy(y)),
    'resources': toJson_TargetAllocatorSpecInitContainersResources(obj.resources),
    'restartPolicy': obj.restartPolicy,
    'securityContext': toJson_TargetAllocatorSpecInitContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_TargetAllocatorSpecInitContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_TargetAllocatorSpecInitContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_TargetAllocatorSpecInitContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecycle
 */
export interface TargetAllocatorSpecLifecycle {
  /**
   * @schema TargetAllocatorSpecLifecycle#postStart
   */
  readonly postStart?: TargetAllocatorSpecLifecyclePostStart;

  /**
   * @schema TargetAllocatorSpecLifecycle#preStop
   */
  readonly preStop?: TargetAllocatorSpecLifecyclePreStop;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecycle(obj: TargetAllocatorSpecLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_TargetAllocatorSpecLifecyclePostStart(obj.postStart),
    'preStop': toJson_TargetAllocatorSpecLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecManagementState
 */
export enum TargetAllocatorSpecManagementState {
  /** managed */
  MANAGED = "managed",
  /** unmanaged */
  UNMANAGED = "unmanaged",
}

/**
 * @schema TargetAllocatorSpecObservability
 */
export interface TargetAllocatorSpecObservability {
  /**
   * @schema TargetAllocatorSpecObservability#metrics
   */
  readonly metrics?: TargetAllocatorSpecObservabilityMetrics;

}

/**
 * Converts an object of type 'TargetAllocatorSpecObservability' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecObservability(obj: TargetAllocatorSpecObservability | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metrics': toJson_TargetAllocatorSpecObservabilityMetrics(obj.metrics),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodDisruptionBudget
 */
export interface TargetAllocatorSpecPodDisruptionBudget {
  /**
   * @schema TargetAllocatorSpecPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: TargetAllocatorSpecPodDisruptionBudgetMaxUnavailable;

  /**
   * @schema TargetAllocatorSpecPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: TargetAllocatorSpecPodDisruptionBudgetMinAvailable;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodDisruptionBudget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodDisruptionBudget(obj: TargetAllocatorSpecPodDisruptionBudget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxUnavailable': obj.maxUnavailable?.value,
    'minAvailable': obj.minAvailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodDnsConfig
 */
export interface TargetAllocatorSpecPodDnsConfig {
  /**
   * @schema TargetAllocatorSpecPodDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * @schema TargetAllocatorSpecPodDnsConfig#options
   */
  readonly options?: TargetAllocatorSpecPodDnsConfigOptions[];

  /**
   * @schema TargetAllocatorSpecPodDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodDnsConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodDnsConfig(obj: TargetAllocatorSpecPodDnsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nameservers': obj.nameservers?.map(y => y),
    'options': obj.options?.map(y => toJson_TargetAllocatorSpecPodDnsConfigOptions(y)),
    'searches': obj.searches?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodSecurityContext
 */
export interface TargetAllocatorSpecPodSecurityContext {
  /**
   * @schema TargetAllocatorSpecPodSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: TargetAllocatorSpecPodSecurityContextAppArmorProfile;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#seLinuxChangePolicy
   */
  readonly seLinuxChangePolicy?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TargetAllocatorSpecPodSecurityContextSeLinuxOptions;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TargetAllocatorSpecPodSecurityContextSeccompProfile;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#supplementalGroupsPolicy
   */
  readonly supplementalGroupsPolicy?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#sysctls
   */
  readonly sysctls?: TargetAllocatorSpecPodSecurityContextSysctls[];

  /**
   * @schema TargetAllocatorSpecPodSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TargetAllocatorSpecPodSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodSecurityContext(obj: TargetAllocatorSpecPodSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appArmorProfile': toJson_TargetAllocatorSpecPodSecurityContextAppArmorProfile(obj.appArmorProfile),
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxChangePolicy': obj.seLinuxChangePolicy,
    'seLinuxOptions': toJson_TargetAllocatorSpecPodSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TargetAllocatorSpecPodSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'supplementalGroupsPolicy': obj.supplementalGroupsPolicy,
    'sysctls': obj.sysctls?.map(y => toJson_TargetAllocatorSpecPodSecurityContextSysctls(y)),
    'windowsOptions': toJson_TargetAllocatorSpecPodSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPorts
 */
export interface TargetAllocatorSpecPorts {
  /**
   * @schema TargetAllocatorSpecPorts#appProtocol
   */
  readonly appProtocol?: string;

  /**
   * @schema TargetAllocatorSpecPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema TargetAllocatorSpecPorts#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecPorts#nodePort
   */
  readonly nodePort?: number;

  /**
   * @schema TargetAllocatorSpecPorts#port
   */
  readonly port: number;

  /**
   * @schema TargetAllocatorSpecPorts#protocol
   */
  readonly protocol?: string;

  /**
   * @schema TargetAllocatorSpecPorts#targetPort
   */
  readonly targetPort?: TargetAllocatorSpecPortsTargetPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPorts(obj: TargetAllocatorSpecPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appProtocol': obj.appProtocol,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'nodePort': obj.nodePort,
    'port': obj.port,
    'protocol': obj.protocol,
    'targetPort': obj.targetPort?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPrometheusCr
 */
export interface TargetAllocatorSpecPrometheusCr {
  /**
   * @schema TargetAllocatorSpecPrometheusCr#allowNamespaces
   */
  readonly allowNamespaces?: string[];

  /**
   * @schema TargetAllocatorSpecPrometheusCr#denyNamespaces
   */
  readonly denyNamespaces?: string[];

  /**
   * @schema TargetAllocatorSpecPrometheusCr#enabled
   */
  readonly enabled?: boolean;

  /**
   * @schema TargetAllocatorSpecPrometheusCr#podMonitorSelector
   */
  readonly podMonitorSelector?: TargetAllocatorSpecPrometheusCrPodMonitorSelector;

  /**
   * @schema TargetAllocatorSpecPrometheusCr#probeSelector
   */
  readonly probeSelector?: TargetAllocatorSpecPrometheusCrProbeSelector;

  /**
   * @schema TargetAllocatorSpecPrometheusCr#scrapeConfigSelector
   */
  readonly scrapeConfigSelector?: TargetAllocatorSpecPrometheusCrScrapeConfigSelector;

  /**
   * @schema TargetAllocatorSpecPrometheusCr#scrapeInterval
   */
  readonly scrapeInterval?: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCr#serviceMonitorSelector
   */
  readonly serviceMonitorSelector?: TargetAllocatorSpecPrometheusCrServiceMonitorSelector;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCr(obj: TargetAllocatorSpecPrometheusCr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowNamespaces': obj.allowNamespaces?.map(y => y),
    'denyNamespaces': obj.denyNamespaces?.map(y => y),
    'enabled': obj.enabled,
    'podMonitorSelector': toJson_TargetAllocatorSpecPrometheusCrPodMonitorSelector(obj.podMonitorSelector),
    'probeSelector': toJson_TargetAllocatorSpecPrometheusCrProbeSelector(obj.probeSelector),
    'scrapeConfigSelector': toJson_TargetAllocatorSpecPrometheusCrScrapeConfigSelector(obj.scrapeConfigSelector),
    'scrapeInterval': obj.scrapeInterval,
    'serviceMonitorSelector': toJson_TargetAllocatorSpecPrometheusCrServiceMonitorSelector(obj.serviceMonitorSelector),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecResources
 */
export interface TargetAllocatorSpecResources {
  /**
   * @schema TargetAllocatorSpecResources#claims
   */
  readonly claims?: TargetAllocatorSpecResourcesClaims[];

  /**
   * @schema TargetAllocatorSpecResources#limits
   */
  readonly limits?: { [key: string]: TargetAllocatorSpecResourcesLimits };

  /**
   * @schema TargetAllocatorSpecResources#requests
   */
  readonly requests?: { [key: string]: TargetAllocatorSpecResourcesRequests };

}

/**
 * Converts an object of type 'TargetAllocatorSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecResources(obj: TargetAllocatorSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_TargetAllocatorSpecResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecSecurityContext
 */
export interface TargetAllocatorSpecSecurityContext {
  /**
   * @schema TargetAllocatorSpecSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema TargetAllocatorSpecSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: TargetAllocatorSpecSecurityContextAppArmorProfile;

  /**
   * @schema TargetAllocatorSpecSecurityContext#capabilities
   */
  readonly capabilities?: TargetAllocatorSpecSecurityContextCapabilities;

  /**
   * @schema TargetAllocatorSpecSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema TargetAllocatorSpecSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema TargetAllocatorSpecSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema TargetAllocatorSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TargetAllocatorSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TargetAllocatorSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TargetAllocatorSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TargetAllocatorSpecSecurityContextSeLinuxOptions;

  /**
   * @schema TargetAllocatorSpecSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TargetAllocatorSpecSecurityContextSeccompProfile;

  /**
   * @schema TargetAllocatorSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TargetAllocatorSpecSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TargetAllocatorSpecSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecSecurityContext(obj: TargetAllocatorSpecSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_TargetAllocatorSpecSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_TargetAllocatorSpecSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TargetAllocatorSpecSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TargetAllocatorSpecSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_TargetAllocatorSpecSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecTolerations
 */
export interface TargetAllocatorSpecTolerations {
  /**
   * @schema TargetAllocatorSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema TargetAllocatorSpecTolerations#key
   */
  readonly key?: string;

  /**
   * @schema TargetAllocatorSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema TargetAllocatorSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema TargetAllocatorSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecTolerations(obj: TargetAllocatorSpecTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecTopologySpreadConstraints
 */
export interface TargetAllocatorSpecTopologySpreadConstraints {
  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: TargetAllocatorSpecTopologySpreadConstraintsLabelSelector;

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraints#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraints#minDomains
   */
  readonly minDomains?: number;

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraints#nodeAffinityPolicy
   */
  readonly nodeAffinityPolicy?: string;

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraints#nodeTaintsPolicy
   */
  readonly nodeTaintsPolicy?: string;

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecTopologySpreadConstraints(obj: TargetAllocatorSpecTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TargetAllocatorSpecTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'maxSkew': obj.maxSkew,
    'minDomains': obj.minDomains,
    'nodeAffinityPolicy': obj.nodeAffinityPolicy,
    'nodeTaintsPolicy': obj.nodeTaintsPolicy,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumeMounts
 */
export interface TargetAllocatorSpecVolumeMounts {
  /**
   * @schema TargetAllocatorSpecVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema TargetAllocatorSpecVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema TargetAllocatorSpecVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema TargetAllocatorSpecVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema TargetAllocatorSpecVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumeMounts(obj: TargetAllocatorSpecVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumes
 */
export interface TargetAllocatorSpecVolumes {
  /**
   * @schema TargetAllocatorSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: TargetAllocatorSpecVolumesAwsElasticBlockStore;

  /**
   * @schema TargetAllocatorSpecVolumes#azureDisk
   */
  readonly azureDisk?: TargetAllocatorSpecVolumesAzureDisk;

  /**
   * @schema TargetAllocatorSpecVolumes#azureFile
   */
  readonly azureFile?: TargetAllocatorSpecVolumesAzureFile;

  /**
   * @schema TargetAllocatorSpecVolumes#cephfs
   */
  readonly cephfs?: TargetAllocatorSpecVolumesCephfs;

  /**
   * @schema TargetAllocatorSpecVolumes#cinder
   */
  readonly cinder?: TargetAllocatorSpecVolumesCinder;

  /**
   * @schema TargetAllocatorSpecVolumes#configMap
   */
  readonly configMap?: TargetAllocatorSpecVolumesConfigMap;

  /**
   * @schema TargetAllocatorSpecVolumes#csi
   */
  readonly csi?: TargetAllocatorSpecVolumesCsi;

  /**
   * @schema TargetAllocatorSpecVolumes#downwardAPI
   */
  readonly downwardApi?: TargetAllocatorSpecVolumesDownwardApi;

  /**
   * @schema TargetAllocatorSpecVolumes#emptyDir
   */
  readonly emptyDir?: TargetAllocatorSpecVolumesEmptyDir;

  /**
   * @schema TargetAllocatorSpecVolumes#ephemeral
   */
  readonly ephemeral?: TargetAllocatorSpecVolumesEphemeral;

  /**
   * @schema TargetAllocatorSpecVolumes#fc
   */
  readonly fc?: TargetAllocatorSpecVolumesFc;

  /**
   * @schema TargetAllocatorSpecVolumes#flexVolume
   */
  readonly flexVolume?: TargetAllocatorSpecVolumesFlexVolume;

  /**
   * @schema TargetAllocatorSpecVolumes#flocker
   */
  readonly flocker?: TargetAllocatorSpecVolumesFlocker;

  /**
   * @schema TargetAllocatorSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: TargetAllocatorSpecVolumesGcePersistentDisk;

  /**
   * @schema TargetAllocatorSpecVolumes#gitRepo
   */
  readonly gitRepo?: TargetAllocatorSpecVolumesGitRepo;

  /**
   * @schema TargetAllocatorSpecVolumes#glusterfs
   */
  readonly glusterfs?: TargetAllocatorSpecVolumesGlusterfs;

  /**
   * @schema TargetAllocatorSpecVolumes#hostPath
   */
  readonly hostPath?: TargetAllocatorSpecVolumesHostPath;

  /**
   * @schema TargetAllocatorSpecVolumes#image
   */
  readonly image?: TargetAllocatorSpecVolumesImage;

  /**
   * @schema TargetAllocatorSpecVolumes#iscsi
   */
  readonly iscsi?: TargetAllocatorSpecVolumesIscsi;

  /**
   * @schema TargetAllocatorSpecVolumes#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecVolumes#nfs
   */
  readonly nfs?: TargetAllocatorSpecVolumesNfs;

  /**
   * @schema TargetAllocatorSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: TargetAllocatorSpecVolumesPersistentVolumeClaim;

  /**
   * @schema TargetAllocatorSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: TargetAllocatorSpecVolumesPhotonPersistentDisk;

  /**
   * @schema TargetAllocatorSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: TargetAllocatorSpecVolumesPortworxVolume;

  /**
   * @schema TargetAllocatorSpecVolumes#projected
   */
  readonly projected?: TargetAllocatorSpecVolumesProjected;

  /**
   * @schema TargetAllocatorSpecVolumes#quobyte
   */
  readonly quobyte?: TargetAllocatorSpecVolumesQuobyte;

  /**
   * @schema TargetAllocatorSpecVolumes#rbd
   */
  readonly rbd?: TargetAllocatorSpecVolumesRbd;

  /**
   * @schema TargetAllocatorSpecVolumes#scaleIO
   */
  readonly scaleIo?: TargetAllocatorSpecVolumesScaleIo;

  /**
   * @schema TargetAllocatorSpecVolumes#secret
   */
  readonly secret?: TargetAllocatorSpecVolumesSecret;

  /**
   * @schema TargetAllocatorSpecVolumes#storageos
   */
  readonly storageos?: TargetAllocatorSpecVolumesStorageos;

  /**
   * @schema TargetAllocatorSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: TargetAllocatorSpecVolumesVsphereVolume;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumes(obj: TargetAllocatorSpecVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_TargetAllocatorSpecVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_TargetAllocatorSpecVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_TargetAllocatorSpecVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_TargetAllocatorSpecVolumesCephfs(obj.cephfs),
    'cinder': toJson_TargetAllocatorSpecVolumesCinder(obj.cinder),
    'configMap': toJson_TargetAllocatorSpecVolumesConfigMap(obj.configMap),
    'csi': toJson_TargetAllocatorSpecVolumesCsi(obj.csi),
    'downwardAPI': toJson_TargetAllocatorSpecVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_TargetAllocatorSpecVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_TargetAllocatorSpecVolumesEphemeral(obj.ephemeral),
    'fc': toJson_TargetAllocatorSpecVolumesFc(obj.fc),
    'flexVolume': toJson_TargetAllocatorSpecVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_TargetAllocatorSpecVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_TargetAllocatorSpecVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_TargetAllocatorSpecVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_TargetAllocatorSpecVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_TargetAllocatorSpecVolumesHostPath(obj.hostPath),
    'image': toJson_TargetAllocatorSpecVolumesImage(obj.image),
    'iscsi': toJson_TargetAllocatorSpecVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_TargetAllocatorSpecVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_TargetAllocatorSpecVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_TargetAllocatorSpecVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_TargetAllocatorSpecVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_TargetAllocatorSpecVolumesProjected(obj.projected),
    'quobyte': toJson_TargetAllocatorSpecVolumesQuobyte(obj.quobyte),
    'rbd': toJson_TargetAllocatorSpecVolumesRbd(obj.rbd),
    'scaleIO': toJson_TargetAllocatorSpecVolumesScaleIo(obj.scaleIo),
    'secret': toJson_TargetAllocatorSpecVolumesSecret(obj.secret),
    'storageos': toJson_TargetAllocatorSpecVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_TargetAllocatorSpecVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnv
 */
export interface TargetAllocatorSpecAdditionalContainersEnv {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnv#valueFrom
   */
  readonly valueFrom?: TargetAllocatorSpecAdditionalContainersEnvValueFrom;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnv(obj: TargetAllocatorSpecAdditionalContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_TargetAllocatorSpecAdditionalContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvFrom
 */
export interface TargetAllocatorSpecAdditionalContainersEnvFrom {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvFrom#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecAdditionalContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnvFrom(obj: TargetAllocatorSpecAdditionalContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_TargetAllocatorSpecAdditionalContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecycle
 */
export interface TargetAllocatorSpecAdditionalContainersLifecycle {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecycle#postStart
   */
  readonly postStart?: TargetAllocatorSpecAdditionalContainersLifecyclePostStart;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecycle#preStop
   */
  readonly preStop?: TargetAllocatorSpecAdditionalContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecycle(obj: TargetAllocatorSpecAdditionalContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe
 */
export interface TargetAllocatorSpecAdditionalContainersLivenessProbe {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#exec
   */
  readonly exec?: TargetAllocatorSpecAdditionalContainersLivenessProbeExec;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#grpc
   */
  readonly grpc?: TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLivenessProbe(obj: TargetAllocatorSpecAdditionalContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersPorts
 */
export interface TargetAllocatorSpecAdditionalContainersPorts {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersPorts(obj: TargetAllocatorSpecAdditionalContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe
 */
export interface TargetAllocatorSpecAdditionalContainersReadinessProbe {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#exec
   */
  readonly exec?: TargetAllocatorSpecAdditionalContainersReadinessProbeExec;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#grpc
   */
  readonly grpc?: TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersReadinessProbe(obj: TargetAllocatorSpecAdditionalContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersResizePolicy
 */
export interface TargetAllocatorSpecAdditionalContainersResizePolicy {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersResizePolicy#resourceName
   */
  readonly resourceName: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersResizePolicy#restartPolicy
   */
  readonly restartPolicy: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersResizePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersResizePolicy(obj: TargetAllocatorSpecAdditionalContainersResizePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceName': obj.resourceName,
    'restartPolicy': obj.restartPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersResources
 */
export interface TargetAllocatorSpecAdditionalContainersResources {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersResources#claims
   */
  readonly claims?: TargetAllocatorSpecAdditionalContainersResourcesClaims[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainersResources#limits
   */
  readonly limits?: { [key: string]: TargetAllocatorSpecAdditionalContainersResourcesLimits };

  /**
   * @schema TargetAllocatorSpecAdditionalContainersResources#requests
   */
  readonly requests?: { [key: string]: TargetAllocatorSpecAdditionalContainersResourcesRequests };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersResources(obj: TargetAllocatorSpecAdditionalContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_TargetAllocatorSpecAdditionalContainersResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersSecurityContext
 */
export interface TargetAllocatorSpecAdditionalContainersSecurityContext {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#capabilities
   */
  readonly capabilities?: TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersSecurityContext(obj: TargetAllocatorSpecAdditionalContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersStartupProbe
 */
export interface TargetAllocatorSpecAdditionalContainersStartupProbe {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#exec
   */
  readonly exec?: TargetAllocatorSpecAdditionalContainersStartupProbeExec;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#grpc
   */
  readonly grpc?: TargetAllocatorSpecAdditionalContainersStartupProbeGrpc;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersStartupProbe(obj: TargetAllocatorSpecAdditionalContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecAdditionalContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TargetAllocatorSpecAdditionalContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersVolumeDevices
 */
export interface TargetAllocatorSpecAdditionalContainersVolumeDevices {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersVolumeDevices(obj: TargetAllocatorSpecAdditionalContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersVolumeMounts
 */
export interface TargetAllocatorSpecAdditionalContainersVolumeMounts {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersVolumeMounts(obj: TargetAllocatorSpecAdditionalContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinity
 */
export interface TargetAllocatorSpecAffinityNodeAffinity {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinity(obj: TargetAllocatorSpecAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinity
 */
export interface TargetAllocatorSpecAffinityPodAffinity {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinity(obj: TargetAllocatorSpecAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinity
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinity {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinity(obj: TargetAllocatorSpecAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvValueFrom
 */
export interface TargetAllocatorSpecEnvValueFrom {
  /**
   * @schema TargetAllocatorSpecEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: TargetAllocatorSpecEnvValueFromConfigMapKeyRef;

  /**
   * @schema TargetAllocatorSpecEnvValueFrom#fieldRef
   */
  readonly fieldRef?: TargetAllocatorSpecEnvValueFromFieldRef;

  /**
   * @schema TargetAllocatorSpecEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: TargetAllocatorSpecEnvValueFromResourceFieldRef;

  /**
   * @schema TargetAllocatorSpecEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: TargetAllocatorSpecEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnvValueFrom(obj: TargetAllocatorSpecEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_TargetAllocatorSpecEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_TargetAllocatorSpecEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_TargetAllocatorSpecEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_TargetAllocatorSpecEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvFromConfigMapRef
 */
export interface TargetAllocatorSpecEnvFromConfigMapRef {
  /**
   * @schema TargetAllocatorSpecEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnvFromConfigMapRef(obj: TargetAllocatorSpecEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvFromSecretRef
 */
export interface TargetAllocatorSpecEnvFromSecretRef {
  /**
   * @schema TargetAllocatorSpecEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnvFromSecretRef(obj: TargetAllocatorSpecEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnv
 */
export interface TargetAllocatorSpecInitContainersEnv {
  /**
   * @schema TargetAllocatorSpecInitContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnv#valueFrom
   */
  readonly valueFrom?: TargetAllocatorSpecInitContainersEnvValueFrom;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnv(obj: TargetAllocatorSpecInitContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_TargetAllocatorSpecInitContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnvFrom
 */
export interface TargetAllocatorSpecInitContainersEnvFrom {
  /**
   * @schema TargetAllocatorSpecInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: TargetAllocatorSpecInitContainersEnvFromConfigMapRef;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecInitContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnvFrom(obj: TargetAllocatorSpecInitContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_TargetAllocatorSpecInitContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_TargetAllocatorSpecInitContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecycle
 */
export interface TargetAllocatorSpecInitContainersLifecycle {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecycle#postStart
   */
  readonly postStart?: TargetAllocatorSpecInitContainersLifecyclePostStart;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecycle#preStop
   */
  readonly preStop?: TargetAllocatorSpecInitContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecycle(obj: TargetAllocatorSpecInitContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_TargetAllocatorSpecInitContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_TargetAllocatorSpecInitContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLivenessProbe
 */
export interface TargetAllocatorSpecInitContainersLivenessProbe {
  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#exec
   */
  readonly exec?: TargetAllocatorSpecInitContainersLivenessProbeExec;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#grpc
   */
  readonly grpc?: TargetAllocatorSpecInitContainersLivenessProbeGrpc;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecInitContainersLivenessProbeHttpGet;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecInitContainersLivenessProbeTcpSocket;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLivenessProbe(obj: TargetAllocatorSpecInitContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecInitContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TargetAllocatorSpecInitContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_TargetAllocatorSpecInitContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TargetAllocatorSpecInitContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersPorts
 */
export interface TargetAllocatorSpecInitContainersPorts {
  /**
   * @schema TargetAllocatorSpecInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema TargetAllocatorSpecInitContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersPorts(obj: TargetAllocatorSpecInitContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersReadinessProbe
 */
export interface TargetAllocatorSpecInitContainersReadinessProbe {
  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#exec
   */
  readonly exec?: TargetAllocatorSpecInitContainersReadinessProbeExec;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#grpc
   */
  readonly grpc?: TargetAllocatorSpecInitContainersReadinessProbeGrpc;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecInitContainersReadinessProbeHttpGet;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecInitContainersReadinessProbeTcpSocket;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersReadinessProbe(obj: TargetAllocatorSpecInitContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecInitContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TargetAllocatorSpecInitContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_TargetAllocatorSpecInitContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TargetAllocatorSpecInitContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersResizePolicy
 */
export interface TargetAllocatorSpecInitContainersResizePolicy {
  /**
   * @schema TargetAllocatorSpecInitContainersResizePolicy#resourceName
   */
  readonly resourceName: string;

  /**
   * @schema TargetAllocatorSpecInitContainersResizePolicy#restartPolicy
   */
  readonly restartPolicy: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersResizePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersResizePolicy(obj: TargetAllocatorSpecInitContainersResizePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceName': obj.resourceName,
    'restartPolicy': obj.restartPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersResources
 */
export interface TargetAllocatorSpecInitContainersResources {
  /**
   * @schema TargetAllocatorSpecInitContainersResources#claims
   */
  readonly claims?: TargetAllocatorSpecInitContainersResourcesClaims[];

  /**
   * @schema TargetAllocatorSpecInitContainersResources#limits
   */
  readonly limits?: { [key: string]: TargetAllocatorSpecInitContainersResourcesLimits };

  /**
   * @schema TargetAllocatorSpecInitContainersResources#requests
   */
  readonly requests?: { [key: string]: TargetAllocatorSpecInitContainersResourcesRequests };

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersResources(obj: TargetAllocatorSpecInitContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_TargetAllocatorSpecInitContainersResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersSecurityContext
 */
export interface TargetAllocatorSpecInitContainersSecurityContext {
  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: TargetAllocatorSpecInitContainersSecurityContextCapabilities;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TargetAllocatorSpecInitContainersSecurityContextSeccompProfile;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TargetAllocatorSpecInitContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersSecurityContext(obj: TargetAllocatorSpecInitContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_TargetAllocatorSpecInitContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TargetAllocatorSpecInitContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_TargetAllocatorSpecInitContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersStartupProbe
 */
export interface TargetAllocatorSpecInitContainersStartupProbe {
  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#exec
   */
  readonly exec?: TargetAllocatorSpecInitContainersStartupProbeExec;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#grpc
   */
  readonly grpc?: TargetAllocatorSpecInitContainersStartupProbeGrpc;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecInitContainersStartupProbeHttpGet;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecInitContainersStartupProbeTcpSocket;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersStartupProbe(obj: TargetAllocatorSpecInitContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecInitContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TargetAllocatorSpecInitContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_TargetAllocatorSpecInitContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TargetAllocatorSpecInitContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersVolumeDevices
 */
export interface TargetAllocatorSpecInitContainersVolumeDevices {
  /**
   * @schema TargetAllocatorSpecInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema TargetAllocatorSpecInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersVolumeDevices(obj: TargetAllocatorSpecInitContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersVolumeMounts
 */
export interface TargetAllocatorSpecInitContainersVolumeMounts {
  /**
   * @schema TargetAllocatorSpecInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema TargetAllocatorSpecInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainersVolumeMounts#recursiveReadOnly
   */
  readonly recursiveReadOnly?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersVolumeMounts(obj: TargetAllocatorSpecInitContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'recursiveReadOnly': obj.recursiveReadOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePostStart
 */
export interface TargetAllocatorSpecLifecyclePostStart {
  /**
   * @schema TargetAllocatorSpecLifecyclePostStart#exec
   */
  readonly exec?: TargetAllocatorSpecLifecyclePostStartExec;

  /**
   * @schema TargetAllocatorSpecLifecyclePostStart#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecLifecyclePostStartHttpGet;

  /**
   * @schema TargetAllocatorSpecLifecyclePostStart#sleep
   */
  readonly sleep?: TargetAllocatorSpecLifecyclePostStartSleep;

  /**
   * @schema TargetAllocatorSpecLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePostStart(obj: TargetAllocatorSpecLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_TargetAllocatorSpecLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_TargetAllocatorSpecLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_TargetAllocatorSpecLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePreStop
 */
export interface TargetAllocatorSpecLifecyclePreStop {
  /**
   * @schema TargetAllocatorSpecLifecyclePreStop#exec
   */
  readonly exec?: TargetAllocatorSpecLifecyclePreStopExec;

  /**
   * @schema TargetAllocatorSpecLifecyclePreStop#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecLifecyclePreStopHttpGet;

  /**
   * @schema TargetAllocatorSpecLifecyclePreStop#sleep
   */
  readonly sleep?: TargetAllocatorSpecLifecyclePreStopSleep;

  /**
   * @schema TargetAllocatorSpecLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePreStop(obj: TargetAllocatorSpecLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_TargetAllocatorSpecLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_TargetAllocatorSpecLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_TargetAllocatorSpecLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecObservabilityMetrics
 */
export interface TargetAllocatorSpecObservabilityMetrics {
  /**
   * @schema TargetAllocatorSpecObservabilityMetrics#disablePrometheusAnnotations
   */
  readonly disablePrometheusAnnotations?: boolean;

  /**
   * @schema TargetAllocatorSpecObservabilityMetrics#enableMetrics
   */
  readonly enableMetrics?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecObservabilityMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecObservabilityMetrics(obj: TargetAllocatorSpecObservabilityMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'disablePrometheusAnnotations': obj.disablePrometheusAnnotations,
    'enableMetrics': obj.enableMetrics,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodDisruptionBudgetMaxUnavailable
 */
export class TargetAllocatorSpecPodDisruptionBudgetMaxUnavailable {
  public static fromNumber(value: number): TargetAllocatorSpecPodDisruptionBudgetMaxUnavailable {
    return new TargetAllocatorSpecPodDisruptionBudgetMaxUnavailable(value);
  }
  public static fromString(value: string): TargetAllocatorSpecPodDisruptionBudgetMaxUnavailable {
    return new TargetAllocatorSpecPodDisruptionBudgetMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecPodDisruptionBudgetMinAvailable
 */
export class TargetAllocatorSpecPodDisruptionBudgetMinAvailable {
  public static fromNumber(value: number): TargetAllocatorSpecPodDisruptionBudgetMinAvailable {
    return new TargetAllocatorSpecPodDisruptionBudgetMinAvailable(value);
  }
  public static fromString(value: string): TargetAllocatorSpecPodDisruptionBudgetMinAvailable {
    return new TargetAllocatorSpecPodDisruptionBudgetMinAvailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecPodDnsConfigOptions
 */
export interface TargetAllocatorSpecPodDnsConfigOptions {
  /**
   * @schema TargetAllocatorSpecPodDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecPodDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodDnsConfigOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodDnsConfigOptions(obj: TargetAllocatorSpecPodDnsConfigOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodSecurityContextAppArmorProfile
 */
export interface TargetAllocatorSpecPodSecurityContextAppArmorProfile {
  /**
   * @schema TargetAllocatorSpecPodSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodSecurityContextAppArmorProfile(obj: TargetAllocatorSpecPodSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodSecurityContextSeLinuxOptions
 */
export interface TargetAllocatorSpecPodSecurityContextSeLinuxOptions {
  /**
   * @schema TargetAllocatorSpecPodSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodSecurityContextSeLinuxOptions(obj: TargetAllocatorSpecPodSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodSecurityContextSeccompProfile
 */
export interface TargetAllocatorSpecPodSecurityContextSeccompProfile {
  /**
   * @schema TargetAllocatorSpecPodSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodSecurityContextSeccompProfile(obj: TargetAllocatorSpecPodSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodSecurityContextSysctls
 */
export interface TargetAllocatorSpecPodSecurityContextSysctls {
  /**
   * @schema TargetAllocatorSpecPodSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodSecurityContextSysctls(obj: TargetAllocatorSpecPodSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPodSecurityContextWindowsOptions
 */
export interface TargetAllocatorSpecPodSecurityContextWindowsOptions {
  /**
   * @schema TargetAllocatorSpecPodSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TargetAllocatorSpecPodSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecPodSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPodSecurityContextWindowsOptions(obj: TargetAllocatorSpecPodSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPortsTargetPort
 */
export class TargetAllocatorSpecPortsTargetPort {
  public static fromNumber(value: number): TargetAllocatorSpecPortsTargetPort {
    return new TargetAllocatorSpecPortsTargetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecPortsTargetPort {
    return new TargetAllocatorSpecPortsTargetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecPrometheusCrPodMonitorSelector
 */
export interface TargetAllocatorSpecPrometheusCrPodMonitorSelector {
  /**
   * @schema TargetAllocatorSpecPrometheusCrPodMonitorSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecPrometheusCrPodMonitorSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCrPodMonitorSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCrPodMonitorSelector(obj: TargetAllocatorSpecPrometheusCrPodMonitorSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPrometheusCrProbeSelector
 */
export interface TargetAllocatorSpecPrometheusCrProbeSelector {
  /**
   * @schema TargetAllocatorSpecPrometheusCrProbeSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecPrometheusCrProbeSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCrProbeSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCrProbeSelector(obj: TargetAllocatorSpecPrometheusCrProbeSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPrometheusCrScrapeConfigSelector
 */
export interface TargetAllocatorSpecPrometheusCrScrapeConfigSelector {
  /**
   * @schema TargetAllocatorSpecPrometheusCrScrapeConfigSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecPrometheusCrScrapeConfigSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCrScrapeConfigSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCrScrapeConfigSelector(obj: TargetAllocatorSpecPrometheusCrScrapeConfigSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPrometheusCrServiceMonitorSelector
 */
export interface TargetAllocatorSpecPrometheusCrServiceMonitorSelector {
  /**
   * @schema TargetAllocatorSpecPrometheusCrServiceMonitorSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecPrometheusCrServiceMonitorSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCrServiceMonitorSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCrServiceMonitorSelector(obj: TargetAllocatorSpecPrometheusCrServiceMonitorSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecResourcesClaims
 */
export interface TargetAllocatorSpecResourcesClaims {
  /**
   * @schema TargetAllocatorSpecResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecResourcesClaims(obj: TargetAllocatorSpecResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecResourcesLimits
 */
export class TargetAllocatorSpecResourcesLimits {
  public static fromNumber(value: number): TargetAllocatorSpecResourcesLimits {
    return new TargetAllocatorSpecResourcesLimits(value);
  }
  public static fromString(value: string): TargetAllocatorSpecResourcesLimits {
    return new TargetAllocatorSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecResourcesRequests
 */
export class TargetAllocatorSpecResourcesRequests {
  public static fromNumber(value: number): TargetAllocatorSpecResourcesRequests {
    return new TargetAllocatorSpecResourcesRequests(value);
  }
  public static fromString(value: string): TargetAllocatorSpecResourcesRequests {
    return new TargetAllocatorSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecSecurityContextAppArmorProfile
 */
export interface TargetAllocatorSpecSecurityContextAppArmorProfile {
  /**
   * @schema TargetAllocatorSpecSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TargetAllocatorSpecSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecSecurityContextAppArmorProfile(obj: TargetAllocatorSpecSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecSecurityContextCapabilities
 */
export interface TargetAllocatorSpecSecurityContextCapabilities {
  /**
   * @schema TargetAllocatorSpecSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema TargetAllocatorSpecSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecSecurityContextCapabilities(obj: TargetAllocatorSpecSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecSecurityContextSeLinuxOptions
 */
export interface TargetAllocatorSpecSecurityContextSeLinuxOptions {
  /**
   * @schema TargetAllocatorSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TargetAllocatorSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TargetAllocatorSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TargetAllocatorSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecSecurityContextSeLinuxOptions(obj: TargetAllocatorSpecSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecSecurityContextSeccompProfile
 */
export interface TargetAllocatorSpecSecurityContextSeccompProfile {
  /**
   * @schema TargetAllocatorSpecSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TargetAllocatorSpecSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecSecurityContextSeccompProfile(obj: TargetAllocatorSpecSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecSecurityContextWindowsOptions
 */
export interface TargetAllocatorSpecSecurityContextWindowsOptions {
  /**
   * @schema TargetAllocatorSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TargetAllocatorSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TargetAllocatorSpecSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TargetAllocatorSpecSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecSecurityContextWindowsOptions(obj: TargetAllocatorSpecSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecTopologySpreadConstraintsLabelSelector
 */
export interface TargetAllocatorSpecTopologySpreadConstraintsLabelSelector {
  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecTopologySpreadConstraintsLabelSelector(obj: TargetAllocatorSpecTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesAwsElasticBlockStore
 */
export interface TargetAllocatorSpecVolumesAwsElasticBlockStore {
  /**
   * @schema TargetAllocatorSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema TargetAllocatorSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesAwsElasticBlockStore(obj: TargetAllocatorSpecVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesAzureDisk
 */
export interface TargetAllocatorSpecVolumesAzureDisk {
  /**
   * @schema TargetAllocatorSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema TargetAllocatorSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema TargetAllocatorSpecVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema TargetAllocatorSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema TargetAllocatorSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesAzureDisk(obj: TargetAllocatorSpecVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesAzureFile
 */
export interface TargetAllocatorSpecVolumesAzureFile {
  /**
   * @schema TargetAllocatorSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema TargetAllocatorSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesAzureFile(obj: TargetAllocatorSpecVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesCephfs
 */
export interface TargetAllocatorSpecVolumesCephfs {
  /**
   * @schema TargetAllocatorSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema TargetAllocatorSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema TargetAllocatorSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecVolumesCephfsSecretRef;

  /**
   * @schema TargetAllocatorSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesCephfs(obj: TargetAllocatorSpecVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_TargetAllocatorSpecVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesCinder
 */
export interface TargetAllocatorSpecVolumesCinder {
  /**
   * @schema TargetAllocatorSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesCinder#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecVolumesCinderSecretRef;

  /**
   * @schema TargetAllocatorSpecVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesCinder(obj: TargetAllocatorSpecVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TargetAllocatorSpecVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesConfigMap
 */
export interface TargetAllocatorSpecVolumesConfigMap {
  /**
   * @schema TargetAllocatorSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesConfigMap#items
   */
  readonly items?: TargetAllocatorSpecVolumesConfigMapItems[];

  /**
   * @schema TargetAllocatorSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesConfigMap(obj: TargetAllocatorSpecVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TargetAllocatorSpecVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesCsi
 */
export interface TargetAllocatorSpecVolumesCsi {
  /**
   * @schema TargetAllocatorSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema TargetAllocatorSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: TargetAllocatorSpecVolumesCsiNodePublishSecretRef;

  /**
   * @schema TargetAllocatorSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesCsi(obj: TargetAllocatorSpecVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_TargetAllocatorSpecVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesDownwardApi
 */
export interface TargetAllocatorSpecVolumesDownwardApi {
  /**
   * @schema TargetAllocatorSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesDownwardApi#items
   */
  readonly items?: TargetAllocatorSpecVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesDownwardApi(obj: TargetAllocatorSpecVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TargetAllocatorSpecVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEmptyDir
 */
export interface TargetAllocatorSpecVolumesEmptyDir {
  /**
   * @schema TargetAllocatorSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema TargetAllocatorSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: TargetAllocatorSpecVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEmptyDir(obj: TargetAllocatorSpecVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEphemeral
 */
export interface TargetAllocatorSpecVolumesEphemeral {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeral(obj: TargetAllocatorSpecVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesFc
 */
export interface TargetAllocatorSpecVolumesFc {
  /**
   * @schema TargetAllocatorSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema TargetAllocatorSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema TargetAllocatorSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesFc(obj: TargetAllocatorSpecVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesFlexVolume
 */
export interface TargetAllocatorSpecVolumesFlexVolume {
  /**
   * @schema TargetAllocatorSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema TargetAllocatorSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema TargetAllocatorSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesFlexVolume(obj: TargetAllocatorSpecVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_TargetAllocatorSpecVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesFlocker
 */
export interface TargetAllocatorSpecVolumesFlocker {
  /**
   * @schema TargetAllocatorSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema TargetAllocatorSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesFlocker(obj: TargetAllocatorSpecVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesGcePersistentDisk
 */
export interface TargetAllocatorSpecVolumesGcePersistentDisk {
  /**
   * @schema TargetAllocatorSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema TargetAllocatorSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema TargetAllocatorSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesGcePersistentDisk(obj: TargetAllocatorSpecVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesGitRepo
 */
export interface TargetAllocatorSpecVolumesGitRepo {
  /**
   * @schema TargetAllocatorSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema TargetAllocatorSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema TargetAllocatorSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesGitRepo(obj: TargetAllocatorSpecVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesGlusterfs
 */
export interface TargetAllocatorSpecVolumesGlusterfs {
  /**
   * @schema TargetAllocatorSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema TargetAllocatorSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema TargetAllocatorSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesGlusterfs(obj: TargetAllocatorSpecVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesHostPath
 */
export interface TargetAllocatorSpecVolumesHostPath {
  /**
   * @schema TargetAllocatorSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema TargetAllocatorSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesHostPath(obj: TargetAllocatorSpecVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesImage
 */
export interface TargetAllocatorSpecVolumesImage {
  /**
   * @schema TargetAllocatorSpecVolumesImage#pullPolicy
   */
  readonly pullPolicy?: string;

  /**
   * @schema TargetAllocatorSpecVolumesImage#reference
   */
  readonly reference?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesImage' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesImage(obj: TargetAllocatorSpecVolumesImage | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'pullPolicy': obj.pullPolicy,
    'reference': obj.reference,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesIscsi
 */
export interface TargetAllocatorSpecVolumesIscsi {
  /**
   * @schema TargetAllocatorSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecVolumesIscsiSecretRef;

  /**
   * @schema TargetAllocatorSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesIscsi(obj: TargetAllocatorSpecVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_TargetAllocatorSpecVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesNfs
 */
export interface TargetAllocatorSpecVolumesNfs {
  /**
   * @schema TargetAllocatorSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema TargetAllocatorSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesNfs(obj: TargetAllocatorSpecVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesPersistentVolumeClaim
 */
export interface TargetAllocatorSpecVolumesPersistentVolumeClaim {
  /**
   * @schema TargetAllocatorSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema TargetAllocatorSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesPersistentVolumeClaim(obj: TargetAllocatorSpecVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesPhotonPersistentDisk
 */
export interface TargetAllocatorSpecVolumesPhotonPersistentDisk {
  /**
   * @schema TargetAllocatorSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesPhotonPersistentDisk(obj: TargetAllocatorSpecVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesPortworxVolume
 */
export interface TargetAllocatorSpecVolumesPortworxVolume {
  /**
   * @schema TargetAllocatorSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesPortworxVolume(obj: TargetAllocatorSpecVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjected
 */
export interface TargetAllocatorSpecVolumesProjected {
  /**
   * @schema TargetAllocatorSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesProjected#sources
   */
  readonly sources?: TargetAllocatorSpecVolumesProjectedSources[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjected(obj: TargetAllocatorSpecVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_TargetAllocatorSpecVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesQuobyte
 */
export interface TargetAllocatorSpecVolumesQuobyte {
  /**
   * @schema TargetAllocatorSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema TargetAllocatorSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema TargetAllocatorSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema TargetAllocatorSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema TargetAllocatorSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesQuobyte(obj: TargetAllocatorSpecVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesRbd
 */
export interface TargetAllocatorSpecVolumesRbd {
  /**
   * @schema TargetAllocatorSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema TargetAllocatorSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema TargetAllocatorSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema TargetAllocatorSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema TargetAllocatorSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesRbd#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecVolumesRbdSecretRef;

  /**
   * @schema TargetAllocatorSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesRbd(obj: TargetAllocatorSpecVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TargetAllocatorSpecVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesScaleIo
 */
export interface TargetAllocatorSpecVolumesScaleIo {
  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: TargetAllocatorSpecVolumesScaleIoSecretRef;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema TargetAllocatorSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesScaleIo(obj: TargetAllocatorSpecVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TargetAllocatorSpecVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesSecret
 */
export interface TargetAllocatorSpecVolumesSecret {
  /**
   * @schema TargetAllocatorSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesSecret#items
   */
  readonly items?: TargetAllocatorSpecVolumesSecretItems[];

  /**
   * @schema TargetAllocatorSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesSecret(obj: TargetAllocatorSpecVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TargetAllocatorSpecVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesStorageos
 */
export interface TargetAllocatorSpecVolumesStorageos {
  /**
   * @schema TargetAllocatorSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: TargetAllocatorSpecVolumesStorageosSecretRef;

  /**
   * @schema TargetAllocatorSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema TargetAllocatorSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesStorageos(obj: TargetAllocatorSpecVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TargetAllocatorSpecVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesVsphereVolume
 */
export interface TargetAllocatorSpecVolumesVsphereVolume {
  /**
   * @schema TargetAllocatorSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TargetAllocatorSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema TargetAllocatorSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema TargetAllocatorSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesVsphereVolume(obj: TargetAllocatorSpecVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvValueFrom
 */
export interface TargetAllocatorSpecAdditionalContainersEnvValueFrom {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnvValueFrom(obj: TargetAllocatorSpecAdditionalContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef
 */
export interface TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef(obj: TargetAllocatorSpecAdditionalContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvFromSecretRef
 */
export interface TargetAllocatorSpecAdditionalContainersEnvFromSecretRef {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnvFromSecretRef(obj: TargetAllocatorSpecAdditionalContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStart
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePostStart {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStart#exec
   */
  readonly exec?: TargetAllocatorSpecAdditionalContainersLifecyclePostStartExec;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStart#sleep
   */
  readonly sleep?: TargetAllocatorSpecAdditionalContainersLifecyclePostStartSleep;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStart(obj: TargetAllocatorSpecAdditionalContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStop
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePreStop {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStop#exec
   */
  readonly exec?: TargetAllocatorSpecAdditionalContainersLifecyclePreStopExec;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStop#sleep
   */
  readonly sleep?: TargetAllocatorSpecAdditionalContainersLifecyclePreStopSleep;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStop(obj: TargetAllocatorSpecAdditionalContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeExec
 */
export interface TargetAllocatorSpecAdditionalContainersLivenessProbeExec {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeExec(obj: TargetAllocatorSpecAdditionalContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc
 */
export interface TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc(obj: TargetAllocatorSpecAdditionalContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet
 */
export interface TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetPort;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet(obj: TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket
 */
export interface TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket(obj: TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeExec
 */
export interface TargetAllocatorSpecAdditionalContainersReadinessProbeExec {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeExec(obj: TargetAllocatorSpecAdditionalContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc
 */
export interface TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc(obj: TargetAllocatorSpecAdditionalContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet
 */
export interface TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetPort;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet(obj: TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket
 */
export interface TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket(obj: TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersResourcesClaims
 */
export interface TargetAllocatorSpecAdditionalContainersResourcesClaims {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersResourcesClaims(obj: TargetAllocatorSpecAdditionalContainersResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersResourcesLimits
 */
export class TargetAllocatorSpecAdditionalContainersResourcesLimits {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersResourcesLimits {
    return new TargetAllocatorSpecAdditionalContainersResourcesLimits(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersResourcesLimits {
    return new TargetAllocatorSpecAdditionalContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersResourcesRequests
 */
export class TargetAllocatorSpecAdditionalContainersResourcesRequests {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersResourcesRequests {
    return new TargetAllocatorSpecAdditionalContainersResourcesRequests(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersResourcesRequests {
    return new TargetAllocatorSpecAdditionalContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile
 */
export interface TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile(obj: TargetAllocatorSpecAdditionalContainersSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities
 */
export interface TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities(obj: TargetAllocatorSpecAdditionalContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions
 */
export interface TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions(obj: TargetAllocatorSpecAdditionalContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile
 */
export interface TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile(obj: TargetAllocatorSpecAdditionalContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions
 */
export interface TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions(obj: TargetAllocatorSpecAdditionalContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersStartupProbeExec
 */
export interface TargetAllocatorSpecAdditionalContainersStartupProbeExec {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersStartupProbeExec(obj: TargetAllocatorSpecAdditionalContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersStartupProbeGrpc
 */
export interface TargetAllocatorSpecAdditionalContainersStartupProbeGrpc {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersStartupProbeGrpc(obj: TargetAllocatorSpecAdditionalContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet
 */
export interface TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetPort;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet(obj: TargetAllocatorSpecAdditionalContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket
 */
export interface TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket(obj: TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvValueFromConfigMapKeyRef
 */
export interface TargetAllocatorSpecEnvValueFromConfigMapKeyRef {
  /**
   * @schema TargetAllocatorSpecEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnvValueFromConfigMapKeyRef(obj: TargetAllocatorSpecEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvValueFromFieldRef
 */
export interface TargetAllocatorSpecEnvValueFromFieldRef {
  /**
   * @schema TargetAllocatorSpecEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TargetAllocatorSpecEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnvValueFromFieldRef(obj: TargetAllocatorSpecEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvValueFromResourceFieldRef
 */
export interface TargetAllocatorSpecEnvValueFromResourceFieldRef {
  /**
   * @schema TargetAllocatorSpecEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TargetAllocatorSpecEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: TargetAllocatorSpecEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema TargetAllocatorSpecEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnvValueFromResourceFieldRef(obj: TargetAllocatorSpecEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvValueFromSecretKeyRef
 */
export interface TargetAllocatorSpecEnvValueFromSecretKeyRef {
  /**
   * @schema TargetAllocatorSpecEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecEnvValueFromSecretKeyRef(obj: TargetAllocatorSpecEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnvValueFrom
 */
export interface TargetAllocatorSpecInitContainersEnvValueFrom {
  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: TargetAllocatorSpecInitContainersEnvValueFromFieldRef;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnvValueFrom(obj: TargetAllocatorSpecInitContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_TargetAllocatorSpecInitContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnvFromConfigMapRef
 */
export interface TargetAllocatorSpecInitContainersEnvFromConfigMapRef {
  /**
   * @schema TargetAllocatorSpecInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnvFromConfigMapRef(obj: TargetAllocatorSpecInitContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnvFromSecretRef
 */
export interface TargetAllocatorSpecInitContainersEnvFromSecretRef {
  /**
   * @schema TargetAllocatorSpecInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnvFromSecretRef(obj: TargetAllocatorSpecInitContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePostStart
 */
export interface TargetAllocatorSpecInitContainersLifecyclePostStart {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStart#exec
   */
  readonly exec?: TargetAllocatorSpecInitContainersLifecyclePostStartExec;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStart#sleep
   */
  readonly sleep?: TargetAllocatorSpecInitContainersLifecyclePostStartSleep;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePostStart(obj: TargetAllocatorSpecInitContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecInitContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_TargetAllocatorSpecInitContainersLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePreStop
 */
export interface TargetAllocatorSpecInitContainersLifecyclePreStop {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStop#exec
   */
  readonly exec?: TargetAllocatorSpecInitContainersLifecyclePreStopExec;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStop#sleep
   */
  readonly sleep?: TargetAllocatorSpecInitContainersLifecyclePreStopSleep;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePreStop(obj: TargetAllocatorSpecInitContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TargetAllocatorSpecInitContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_TargetAllocatorSpecInitContainersLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLivenessProbeExec
 */
export interface TargetAllocatorSpecInitContainersLivenessProbeExec {
  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLivenessProbeExec(obj: TargetAllocatorSpecInitContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLivenessProbeGrpc
 */
export interface TargetAllocatorSpecInitContainersLivenessProbeGrpc {
  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLivenessProbeGrpc(obj: TargetAllocatorSpecInitContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGet
 */
export interface TargetAllocatorSpecInitContainersLivenessProbeHttpGet {
  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGet#port
   */
  readonly port: TargetAllocatorSpecInitContainersLivenessProbeHttpGetPort;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLivenessProbeHttpGet(obj: TargetAllocatorSpecInitContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLivenessProbeTcpSocket
 */
export interface TargetAllocatorSpecInitContainersLivenessProbeTcpSocket {
  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: TargetAllocatorSpecInitContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLivenessProbeTcpSocket(obj: TargetAllocatorSpecInitContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersReadinessProbeExec
 */
export interface TargetAllocatorSpecInitContainersReadinessProbeExec {
  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersReadinessProbeExec(obj: TargetAllocatorSpecInitContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersReadinessProbeGrpc
 */
export interface TargetAllocatorSpecInitContainersReadinessProbeGrpc {
  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersReadinessProbeGrpc(obj: TargetAllocatorSpecInitContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGet
 */
export interface TargetAllocatorSpecInitContainersReadinessProbeHttpGet {
  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGet#port
   */
  readonly port: TargetAllocatorSpecInitContainersReadinessProbeHttpGetPort;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersReadinessProbeHttpGet(obj: TargetAllocatorSpecInitContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersReadinessProbeTcpSocket
 */
export interface TargetAllocatorSpecInitContainersReadinessProbeTcpSocket {
  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: TargetAllocatorSpecInitContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersReadinessProbeTcpSocket(obj: TargetAllocatorSpecInitContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersResourcesClaims
 */
export interface TargetAllocatorSpecInitContainersResourcesClaims {
  /**
   * @schema TargetAllocatorSpecInitContainersResourcesClaims#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainersResourcesClaims#request
   */
  readonly request?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersResourcesClaims(obj: TargetAllocatorSpecInitContainersResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'request': obj.request,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersResourcesLimits
 */
export class TargetAllocatorSpecInitContainersResourcesLimits {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersResourcesLimits {
    return new TargetAllocatorSpecInitContainersResourcesLimits(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersResourcesLimits {
    return new TargetAllocatorSpecInitContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersResourcesRequests
 */
export class TargetAllocatorSpecInitContainersResourcesRequests {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersResourcesRequests {
    return new TargetAllocatorSpecInitContainersResourcesRequests(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersResourcesRequests {
    return new TargetAllocatorSpecInitContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile
 */
export interface TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile {
  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile(obj: TargetAllocatorSpecInitContainersSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersSecurityContextCapabilities
 */
export interface TargetAllocatorSpecInitContainersSecurityContextCapabilities {
  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersSecurityContextCapabilities(obj: TargetAllocatorSpecInitContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions
 */
export interface TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions {
  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions(obj: TargetAllocatorSpecInitContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersSecurityContextSeccompProfile
 */
export interface TargetAllocatorSpecInitContainersSecurityContextSeccompProfile {
  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersSecurityContextSeccompProfile(obj: TargetAllocatorSpecInitContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersSecurityContextWindowsOptions
 */
export interface TargetAllocatorSpecInitContainersSecurityContextWindowsOptions {
  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TargetAllocatorSpecInitContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersSecurityContextWindowsOptions(obj: TargetAllocatorSpecInitContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersStartupProbeExec
 */
export interface TargetAllocatorSpecInitContainersStartupProbeExec {
  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersStartupProbeExec(obj: TargetAllocatorSpecInitContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersStartupProbeGrpc
 */
export interface TargetAllocatorSpecInitContainersStartupProbeGrpc {
  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersStartupProbeGrpc(obj: TargetAllocatorSpecInitContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGet
 */
export interface TargetAllocatorSpecInitContainersStartupProbeHttpGet {
  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGet#port
   */
  readonly port: TargetAllocatorSpecInitContainersStartupProbeHttpGetPort;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersStartupProbeHttpGet(obj: TargetAllocatorSpecInitContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersStartupProbeTcpSocket
 */
export interface TargetAllocatorSpecInitContainersStartupProbeTcpSocket {
  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeTcpSocket#port
   */
  readonly port: TargetAllocatorSpecInitContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersStartupProbeTcpSocket(obj: TargetAllocatorSpecInitContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePostStartExec
 */
export interface TargetAllocatorSpecLifecyclePostStartExec {
  /**
   * @schema TargetAllocatorSpecLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePostStartExec(obj: TargetAllocatorSpecLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePostStartHttpGet
 */
export interface TargetAllocatorSpecLifecyclePostStartHttpGet {
  /**
   * @schema TargetAllocatorSpecLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecLifecyclePostStartHttpGet#port
   */
  readonly port: TargetAllocatorSpecLifecyclePostStartHttpGetPort;

  /**
   * @schema TargetAllocatorSpecLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePostStartHttpGet(obj: TargetAllocatorSpecLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePostStartSleep
 */
export interface TargetAllocatorSpecLifecyclePostStartSleep {
  /**
   * @schema TargetAllocatorSpecLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePostStartSleep(obj: TargetAllocatorSpecLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePostStartTcpSocket
 */
export interface TargetAllocatorSpecLifecyclePostStartTcpSocket {
  /**
   * @schema TargetAllocatorSpecLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecLifecyclePostStartTcpSocket#port
   */
  readonly port: TargetAllocatorSpecLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePostStartTcpSocket(obj: TargetAllocatorSpecLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePreStopExec
 */
export interface TargetAllocatorSpecLifecyclePreStopExec {
  /**
   * @schema TargetAllocatorSpecLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePreStopExec(obj: TargetAllocatorSpecLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePreStopHttpGet
 */
export interface TargetAllocatorSpecLifecyclePreStopHttpGet {
  /**
   * @schema TargetAllocatorSpecLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecLifecyclePreStopHttpGet#port
   */
  readonly port: TargetAllocatorSpecLifecyclePreStopHttpGetPort;

  /**
   * @schema TargetAllocatorSpecLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePreStopHttpGet(obj: TargetAllocatorSpecLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePreStopSleep
 */
export interface TargetAllocatorSpecLifecyclePreStopSleep {
  /**
   * @schema TargetAllocatorSpecLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePreStopSleep(obj: TargetAllocatorSpecLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePreStopTcpSocket
 */
export interface TargetAllocatorSpecLifecyclePreStopTcpSocket {
  /**
   * @schema TargetAllocatorSpecLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecLifecyclePreStopTcpSocket#port
   */
  readonly port: TargetAllocatorSpecLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePreStopTcpSocket(obj: TargetAllocatorSpecLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions
 */
export interface TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions(obj: TargetAllocatorSpecPrometheusCrPodMonitorSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions
 */
export interface TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions(obj: TargetAllocatorSpecPrometheusCrProbeSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions
 */
export interface TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions(obj: TargetAllocatorSpecPrometheusCrScrapeConfigSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions
 */
export interface TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions(obj: TargetAllocatorSpecPrometheusCrServiceMonitorSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: TargetAllocatorSpecTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesCephfsSecretRef
 */
export interface TargetAllocatorSpecVolumesCephfsSecretRef {
  /**
   * @schema TargetAllocatorSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesCephfsSecretRef(obj: TargetAllocatorSpecVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesCinderSecretRef
 */
export interface TargetAllocatorSpecVolumesCinderSecretRef {
  /**
   * @schema TargetAllocatorSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesCinderSecretRef(obj: TargetAllocatorSpecVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesConfigMapItems
 */
export interface TargetAllocatorSpecVolumesConfigMapItems {
  /**
   * @schema TargetAllocatorSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesConfigMapItems(obj: TargetAllocatorSpecVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesCsiNodePublishSecretRef
 */
export interface TargetAllocatorSpecVolumesCsiNodePublishSecretRef {
  /**
   * @schema TargetAllocatorSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesCsiNodePublishSecretRef(obj: TargetAllocatorSpecVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesDownwardApiItems
 */
export interface TargetAllocatorSpecVolumesDownwardApiItems {
  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: TargetAllocatorSpecVolumesDownwardApiItemsFieldRef;

  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesDownwardApiItems(obj: TargetAllocatorSpecVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_TargetAllocatorSpecVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEmptyDirSizeLimit
 */
export class TargetAllocatorSpecVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): TargetAllocatorSpecVolumesEmptyDirSizeLimit {
    return new TargetAllocatorSpecVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): TargetAllocatorSpecVolumesEmptyDirSizeLimit {
    return new TargetAllocatorSpecVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate
 */
export interface TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate(obj: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesFlexVolumeSecretRef
 */
export interface TargetAllocatorSpecVolumesFlexVolumeSecretRef {
  /**
   * @schema TargetAllocatorSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesFlexVolumeSecretRef(obj: TargetAllocatorSpecVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesIscsiSecretRef
 */
export interface TargetAllocatorSpecVolumesIscsiSecretRef {
  /**
   * @schema TargetAllocatorSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesIscsiSecretRef(obj: TargetAllocatorSpecVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSources
 */
export interface TargetAllocatorSpecVolumesProjectedSources {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSources#clusterTrustBundle
   */
  readonly clusterTrustBundle?: TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: TargetAllocatorSpecVolumesProjectedSourcesConfigMap;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: TargetAllocatorSpecVolumesProjectedSourcesDownwardApi;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSources#secret
   */
  readonly secret?: TargetAllocatorSpecVolumesProjectedSourcesSecret;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSources(obj: TargetAllocatorSpecVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterTrustBundle': toJson_TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle(obj.clusterTrustBundle),
    'configMap': toJson_TargetAllocatorSpecVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_TargetAllocatorSpecVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_TargetAllocatorSpecVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesRbdSecretRef
 */
export interface TargetAllocatorSpecVolumesRbdSecretRef {
  /**
   * @schema TargetAllocatorSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesRbdSecretRef(obj: TargetAllocatorSpecVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesScaleIoSecretRef
 */
export interface TargetAllocatorSpecVolumesScaleIoSecretRef {
  /**
   * @schema TargetAllocatorSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesScaleIoSecretRef(obj: TargetAllocatorSpecVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesSecretItems
 */
export interface TargetAllocatorSpecVolumesSecretItems {
  /**
   * @schema TargetAllocatorSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesSecretItems(obj: TargetAllocatorSpecVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesStorageosSecretRef
 */
export interface TargetAllocatorSpecVolumesStorageosSecretRef {
  /**
   * @schema TargetAllocatorSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesStorageosSecretRef(obj: TargetAllocatorSpecVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef
 */
export interface TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef(obj: TargetAllocatorSpecAdditionalContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef
 */
export interface TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef(obj: TargetAllocatorSpecAdditionalContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef
 */
export interface TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef(obj: TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef
 */
export interface TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef(obj: TargetAllocatorSpecAdditionalContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartExec
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePostStartExec {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartExec(obj: TargetAllocatorSpecAdditionalContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet(obj: TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartSleep
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePostStartSleep {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartSleep(obj: TargetAllocatorSpecAdditionalContainersLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket(obj: TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopExec
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePreStopExec {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopExec(obj: TargetAllocatorSpecAdditionalContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet(obj: TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopSleep
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePreStopSleep {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopSleep(obj: TargetAllocatorSpecAdditionalContainersLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket(obj: TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders(obj: TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetPort
 */
export class TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocketPort
 */
export class TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders(obj: TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetPort
 */
export class TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocketPort
 */
export class TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders(obj: TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetPort
 */
export class TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocketPort
 */
export class TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecEnvValueFromResourceFieldRefDivisor
 */
export class TargetAllocatorSpecEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): TargetAllocatorSpecEnvValueFromResourceFieldRefDivisor {
    return new TargetAllocatorSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TargetAllocatorSpecEnvValueFromResourceFieldRefDivisor {
    return new TargetAllocatorSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef
 */
export interface TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef(obj: TargetAllocatorSpecInitContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnvValueFromFieldRef
 */
export interface TargetAllocatorSpecInitContainersEnvValueFromFieldRef {
  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnvValueFromFieldRef(obj: TargetAllocatorSpecInitContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef
 */
export interface TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef {
  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef(obj: TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef
 */
export interface TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef {
  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef(obj: TargetAllocatorSpecInitContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePostStartExec
 */
export interface TargetAllocatorSpecInitContainersLifecyclePostStartExec {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePostStartExec(obj: TargetAllocatorSpecInitContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet
 */
export interface TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet(obj: TargetAllocatorSpecInitContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePostStartSleep
 */
export interface TargetAllocatorSpecInitContainersLifecyclePostStartSleep {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePostStartSleep(obj: TargetAllocatorSpecInitContainersLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket
 */
export interface TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket(obj: TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePreStopExec
 */
export interface TargetAllocatorSpecInitContainersLifecyclePreStopExec {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePreStopExec(obj: TargetAllocatorSpecInitContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet
 */
export interface TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet(obj: TargetAllocatorSpecInitContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePreStopSleep
 */
export interface TargetAllocatorSpecInitContainersLifecyclePreStopSleep {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePreStopSleep(obj: TargetAllocatorSpecInitContainersLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket
 */
export interface TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket(obj: TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders(obj: TargetAllocatorSpecInitContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLivenessProbeHttpGetPort
 */
export class TargetAllocatorSpecInitContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersLivenessProbeHttpGetPort {
    return new TargetAllocatorSpecInitContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersLivenessProbeHttpGetPort {
    return new TargetAllocatorSpecInitContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersLivenessProbeTcpSocketPort
 */
export class TargetAllocatorSpecInitContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersLivenessProbeTcpSocketPort {
    return new TargetAllocatorSpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersLivenessProbeTcpSocketPort {
    return new TargetAllocatorSpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders(obj: TargetAllocatorSpecInitContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersReadinessProbeHttpGetPort
 */
export class TargetAllocatorSpecInitContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersReadinessProbeHttpGetPort {
    return new TargetAllocatorSpecInitContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersReadinessProbeHttpGetPort {
    return new TargetAllocatorSpecInitContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersReadinessProbeTcpSocketPort
 */
export class TargetAllocatorSpecInitContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersReadinessProbeTcpSocketPort {
    return new TargetAllocatorSpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersReadinessProbeTcpSocketPort {
    return new TargetAllocatorSpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders(obj: TargetAllocatorSpecInitContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersStartupProbeHttpGetPort
 */
export class TargetAllocatorSpecInitContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersStartupProbeHttpGetPort {
    return new TargetAllocatorSpecInitContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersStartupProbeHttpGetPort {
    return new TargetAllocatorSpecInitContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersStartupProbeTcpSocketPort
 */
export class TargetAllocatorSpecInitContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersStartupProbeTcpSocketPort {
    return new TargetAllocatorSpecInitContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersStartupProbeTcpSocketPort {
    return new TargetAllocatorSpecInitContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders(obj: TargetAllocatorSpecLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePostStartHttpGetPort
 */
export class TargetAllocatorSpecLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecLifecyclePostStartHttpGetPort {
    return new TargetAllocatorSpecLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecLifecyclePostStartHttpGetPort {
    return new TargetAllocatorSpecLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecLifecyclePostStartTcpSocketPort
 */
export class TargetAllocatorSpecLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecLifecyclePostStartTcpSocketPort {
    return new TargetAllocatorSpecLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecLifecyclePostStartTcpSocketPort {
    return new TargetAllocatorSpecLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders(obj: TargetAllocatorSpecLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecLifecyclePreStopHttpGetPort
 */
export class TargetAllocatorSpecLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecLifecyclePreStopHttpGetPort {
    return new TargetAllocatorSpecLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecLifecyclePreStopHttpGetPort {
    return new TargetAllocatorSpecLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecLifecyclePreStopTcpSocketPort
 */
export class TargetAllocatorSpecLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecLifecyclePreStopTcpSocketPort {
    return new TargetAllocatorSpecLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecLifecyclePreStopTcpSocketPort {
    return new TargetAllocatorSpecLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecVolumesDownwardApiItemsFieldRef
 */
export interface TargetAllocatorSpecVolumesDownwardApiItemsFieldRef {
  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesDownwardApiItemsFieldRef(obj: TargetAllocatorSpecVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef(obj: TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata
 */
export interface TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata(obj: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec(obj: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle#labelSelector
   */
  readonly labelSelector?: TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle#optional
   */
  readonly optional?: boolean;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle#path
   */
  readonly path: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle#signerName
   */
  readonly signerName?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle(obj: TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj.labelSelector),
    'name': obj.name,
    'optional': obj.optional,
    'path': obj.path,
    'signerName': obj.signerName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesConfigMap
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesConfigMap {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesConfigMap(obj: TargetAllocatorSpecVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApi
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesDownwardApi {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesDownwardApi(obj: TargetAllocatorSpecVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesSecret
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesSecret {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: TargetAllocatorSpecVolumesProjectedSourcesSecretItems[];

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesSecret(obj: TargetAllocatorSpecVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TargetAllocatorSpecVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken(obj: TargetAllocatorSpecVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor
 */
export class TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
    return new TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor {
    return new TargetAllocatorSpecAdditionalContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders(obj: TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetPort
 */
export class TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocketPort
 */
export class TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders(obj: TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetPort
 */
export class TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetPort {
    return new TargetAllocatorSpecAdditionalContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocketPort
 */
export class TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocketPort {
    return new TargetAllocatorSpecAdditionalContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: TargetAllocatorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: TargetAllocatorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: TargetAllocatorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: TargetAllocatorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRefDivisor
 */
export class TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new TargetAllocatorSpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders(obj: TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetPort
 */
export class TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetPort {
    return new TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetPort {
    return new TargetAllocatorSpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocketPort
 */
export class TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocketPort {
    return new TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocketPort {
    return new TargetAllocatorSpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders(obj: TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetPort
 */
export class TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetPort {
    return new TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetPort {
    return new TargetAllocatorSpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocketPort
 */
export class TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocketPort {
    return new TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocketPort {
    return new TargetAllocatorSpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new TargetAllocatorSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[];

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj: TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems(obj: TargetAllocatorSpecVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems(obj: TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesSecretItems
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesSecretItems {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesSecretItems(obj: TargetAllocatorSpecVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: TargetAllocatorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: TargetAllocatorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: TargetAllocatorSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(obj: TargetAllocatorSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new TargetAllocatorSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

