// @ts-nocheck
// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 * AutoScalingGroup is the Schema for the AutoScalingGroups API
 *
 * @schema AutoScalingGroup
 */
export class AutoScalingGroup extends ApiObject {
  /**
   * Returns the apiVersion and kind for "AutoScalingGroup"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'autoscaling.aws.crossplane.io/v1beta1',
    kind: 'AutoScalingGroup',
  }

  /**
   * Renders a Kubernetes manifest for "AutoScalingGroup".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: AutoScalingGroupProps): any {
    return {
      ...AutoScalingGroup.GVK,
      ...toJson_AutoScalingGroupProps(props),
    };
  }

  /**
   * Defines a "AutoScalingGroup" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: AutoScalingGroupProps) {
    super(scope, id, {
      ...AutoScalingGroup.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...AutoScalingGroup.GVK,
      ...toJson_AutoScalingGroupProps(resolved),
    };
  }
}

/**
 * AutoScalingGroup is the Schema for the AutoScalingGroups API
 *
 * @schema AutoScalingGroup
 */
export interface AutoScalingGroupProps {
  /**
   * @schema AutoScalingGroup#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * AutoScalingGroupSpec defines the desired state of AutoScalingGroup
   *
   * @schema AutoScalingGroup#spec
   */
  readonly spec: AutoScalingGroupSpec;

}

/**
 * Converts an object of type 'AutoScalingGroupProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupProps(obj: AutoScalingGroupProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_AutoScalingGroupSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * AutoScalingGroupSpec defines the desired state of AutoScalingGroup
 *
 * @schema AutoScalingGroupSpec
 */
export interface AutoScalingGroupSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
   *
   * @schema AutoScalingGroupSpec#deletionPolicy
   */
  readonly deletionPolicy?: AutoScalingGroupSpecDeletionPolicy;

  /**
   * AutoScalingGroupParameters defines the desired state of AutoScalingGroup
   *
   * @schema AutoScalingGroupSpec#forProvider
   */
  readonly forProvider: AutoScalingGroupSpecForProvider;

  /**
   * THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
   *
   * @schema AutoScalingGroupSpec#managementPolicies
   */
  readonly managementPolicies?: AutoScalingGroupSpecManagementPolicies[];

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema AutoScalingGroupSpec#providerConfigRef
   */
  readonly providerConfigRef?: AutoScalingGroupSpecProviderConfigRef;

  /**
   * PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema AutoScalingGroupSpec#publishConnectionDetailsTo
   */
  readonly publishConnectionDetailsTo?: AutoScalingGroupSpecPublishConnectionDetailsTo;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
   *
   * @schema AutoScalingGroupSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: AutoScalingGroupSpecWriteConnectionSecretToRef;

}

/**
 * Converts an object of type 'AutoScalingGroupSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpec(obj: AutoScalingGroupSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'deletionPolicy': obj.deletionPolicy,
    'forProvider': toJson_AutoScalingGroupSpecForProvider(obj.forProvider),
    'managementPolicies': obj.managementPolicies?.map(y => y),
    'providerConfigRef': toJson_AutoScalingGroupSpecProviderConfigRef(obj.providerConfigRef),
    'publishConnectionDetailsTo': toJson_AutoScalingGroupSpecPublishConnectionDetailsTo(obj.publishConnectionDetailsTo),
    'writeConnectionSecretToRef': toJson_AutoScalingGroupSpecWriteConnectionSecretToRef(obj.writeConnectionSecretToRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
 *
 * @schema AutoScalingGroupSpecDeletionPolicy
 */
export enum AutoScalingGroupSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = "Orphan",
  /** Delete */
  DELETE = "Delete",
}

/**
 * AutoScalingGroupParameters defines the desired state of AutoScalingGroup
 *
 * @schema AutoScalingGroupSpecForProvider
 */
export interface AutoScalingGroupSpecForProvider {
  /**
   * A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the VPCZoneIdentifier property, or for attaching a network interface when an existing network interface ID is specified in a launch template.
   *
   * @schema AutoScalingGroupSpecForProvider#availabilityZones
   */
  readonly availabilityZones?: string[];

  /**
   * Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html) in the in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#capacityRebalance
   */
  readonly capacityRebalance?: boolean;

  /**
   * Reserved.
   *
   * @schema AutoScalingGroupSpecForProvider#context
   */
  readonly context?: string;

  /**
   * Only needed if you use simple scaling policies.
   * The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see Scaling cooldowns for Amazon EC2 Auto Scaling (https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the Amazon EC2 Auto Scaling User Guide.
   * Default: 300 seconds
   *
   * @schema AutoScalingGroupSpecForProvider#defaultCooldown
   */
  readonly defaultCooldown?: number;

  /**
   * The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the InService state.
   * During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see Set the default instance warmup for an Auto Scaling group (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html) in the Amazon EC2 Auto Scaling User Guide.
   * To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, even if it is set to 0 seconds. To remove a value that you previously set, include the property but specify -1 for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of 0 or other nominal value.
   * Default: None
   *
   * @schema AutoScalingGroupSpecForProvider#defaultInstanceWarmup
   */
  readonly defaultInstanceWarmup?: number;

  /**
   * The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure auto scaling. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.
   *
   * @schema AutoScalingGroupSpecForProvider#desiredCapacity
   */
  readonly desiredCapacity?: number;

  /**
   * The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports DesiredCapacityType for attribute-based instance type selection only. For more information, see Creating an Auto Scaling group using attribute-based instance type selection (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the Amazon EC2 Auto Scaling User Guide.
   * By default, Amazon EC2 Auto Scaling specifies units, which translates into number of instances.
   * Valid values: units | vcpu | memory-mib
   *
   * @schema AutoScalingGroupSpecForProvider#desiredCapacityType
   */
  readonly desiredCapacityType?: string;

  /**
   * The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do not immediately pass their health checks after they enter the InService state. For more information, see Set the health check grace period for an Auto Scaling group (https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html) in the Amazon EC2 Auto Scaling User Guide.
   * Default: 0 seconds
   *
   * @schema AutoScalingGroupSpecForProvider#healthCheckGracePeriod
   */
  readonly healthCheckGracePeriod?: number;

  /**
   * A comma-separated value string of one or more health check types.
   * The valid values are EC2, ELB, and VPC_LATTICE. EC2 is the default health check and cannot be disabled. For more information, see Health checks for Auto Scaling instances (https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html) in the Amazon EC2 Auto Scaling User Guide.
   * Only specify EC2 if you must clear a value that was previously set.
   *
   * @schema AutoScalingGroupSpecForProvider#healthCheckType
   */
  readonly healthCheckType?: string;

  /**
   * The ID of the instance used to base the launch configuration on. If specified, Amazon EC2 Auto Scaling uses the configuration values from the specified instance to create a new launch configuration. To get the instance ID, use the Amazon EC2 DescribeInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) API operation. For more information, see Creating an Auto Scaling group using an EC2 instance (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#instanceID
   */
  readonly instanceId?: string;

  /**
   * The name of the launch configuration to use to launch instances.
   * Conditional: You must specify either a launch template (LaunchTemplate or MixedInstancesPolicy) or a launch configuration (LaunchConfigurationName or InstanceId).
   *
   * @schema AutoScalingGroupSpecForProvider#launchConfigurationName
   */
  readonly launchConfigurationName?: string;

  /**
   * Information used to specify the launch template and version to use to launch instances.
   * Conditional: You must specify either a launch template (LaunchTemplate or MixedInstancesPolicy) or a launch configuration (LaunchConfigurationName or InstanceId).
   * The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see Creating a launch template for an Auto Scaling group (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#launchTemplate
   */
  readonly launchTemplate?: AutoScalingGroupSpecForProviderLaunchTemplate;

  /**
   * One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.
   *
   * @schema AutoScalingGroupSpecForProvider#lifecycleHookSpecificationList
   */
  readonly lifecycleHookSpecificationList?: AutoScalingGroupSpecForProviderLifecycleHookSpecificationList[];

  /**
   * A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load Balancers, and Gateway Load Balancers, specify the TargetGroupARNs property instead.
   *
   * @schema AutoScalingGroupSpecForProvider#loadBalancerNames
   */
  readonly loadBalancerNames?: string[];

  /**
   * The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see Replacing Auto Scaling instances based on maximum instance lifetime (https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#maxInstanceLifetime
   */
  readonly maxInstanceLifetime?: number;

  /**
   * The maximum size of the group.
   * With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above MaxSize to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above MaxSize by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).
   *
   * @schema AutoScalingGroupSpecForProvider#maxSize
   */
  readonly maxSize: number;

  /**
   * The minimum size of the group.
   *
   * @schema AutoScalingGroupSpecForProvider#minSize
   */
  readonly minSize: number;

  /**
   * The mixed instances policy. For more information, see Auto Scaling groups with multiple instance types and purchase options (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#mixedInstancesPolicy
   */
  readonly mixedInstancesPolicy?: AutoScalingGroupSpecForProviderMixedInstancesPolicy;

  /**
   * Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see Using instance scale-in protection (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#newInstancesProtectedFromScaleIn
   */
  readonly newInstancesProtectedFromScaleIn?: boolean;

  /**
   * The name of the placement group into which to launch your instances. For more information, see Placement groups (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the Amazon EC2 User Guide for Linux Instances.
   * A cluster placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.
   *
   * @schema AutoScalingGroupSpecForProvider#placementGroup
   */
  readonly placementGroup?: string;

  /**
   * Region is which region the AutoScalingGroup will be created.
   *
   * @schema AutoScalingGroupSpecForProvider#region
   */
  readonly region: string;

  /**
   * The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services service on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if it does not exist. For more information, see Service-linked roles (https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#serviceLinkedRoleARN
   */
  readonly serviceLinkedRoleArn?: string;

  /**
   * One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For more information, see Tag Auto Scaling groups and instances (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#tags
   */
  readonly tags?: AutoScalingGroupSpecForProviderTags[];

  /**
   * The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group. Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group (https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProvider#targetGroupARNs
   */
  readonly targetGroupArNs?: string[];

  /**
   * A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order that you list them. For more information, see Work with Amazon EC2 Auto Scaling termination policies (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html) in the Amazon EC2 Auto Scaling User Guide.
   * Valid values: Default | AllocationStrategy | ClosestToNextInstanceHour | NewestInstance | OldestInstance | OldestLaunchConfiguration | OldestLaunchTemplate | arn:aws:lambda:region:account-id:function:my-function:my-alias
   *
   * @schema AutoScalingGroupSpecForProvider#terminationPolicies
   */
  readonly terminationPolicies?: string[];

  /**
   * A comma-separated list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created. If you specify VPCZoneIdentifier with AvailabilityZones, the subnets that you specify must reside in those Availability Zones.
   *
   * @schema AutoScalingGroupSpecForProvider#vpcZoneIdentifier
   */
  readonly vpcZoneIdentifier?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProvider' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProvider(obj: AutoScalingGroupSpecForProvider | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'availabilityZones': obj.availabilityZones?.map(y => y),
    'capacityRebalance': obj.capacityRebalance,
    'context': obj.context,
    'defaultCooldown': obj.defaultCooldown,
    'defaultInstanceWarmup': obj.defaultInstanceWarmup,
    'desiredCapacity': obj.desiredCapacity,
    'desiredCapacityType': obj.desiredCapacityType,
    'healthCheckGracePeriod': obj.healthCheckGracePeriod,
    'healthCheckType': obj.healthCheckType,
    'instanceID': obj.instanceId,
    'launchConfigurationName': obj.launchConfigurationName,
    'launchTemplate': toJson_AutoScalingGroupSpecForProviderLaunchTemplate(obj.launchTemplate),
    'lifecycleHookSpecificationList': obj.lifecycleHookSpecificationList?.map(y => toJson_AutoScalingGroupSpecForProviderLifecycleHookSpecificationList(y)),
    'loadBalancerNames': obj.loadBalancerNames?.map(y => y),
    'maxInstanceLifetime': obj.maxInstanceLifetime,
    'maxSize': obj.maxSize,
    'minSize': obj.minSize,
    'mixedInstancesPolicy': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicy(obj.mixedInstancesPolicy),
    'newInstancesProtectedFromScaleIn': obj.newInstancesProtectedFromScaleIn,
    'placementGroup': obj.placementGroup,
    'region': obj.region,
    'serviceLinkedRoleARN': obj.serviceLinkedRoleArn,
    'tags': obj.tags?.map(y => toJson_AutoScalingGroupSpecForProviderTags(y)),
    'targetGroupARNs': obj.targetGroupArNs?.map(y => y),
    'terminationPolicies': obj.terminationPolicies?.map(y => y),
    'vpcZoneIdentifier': obj.vpcZoneIdentifier,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A ManagementAction represents an action that the Crossplane controllers can take on an external resource.
 *
 * @schema AutoScalingGroupSpecManagementPolicies
 */
export enum AutoScalingGroupSpecManagementPolicies {
  /** Observe */
  OBSERVE = "Observe",
  /** Create */
  CREATE = "Create",
  /** Update */
  UPDATE = "Update",
  /** Delete */
  DELETE = "Delete",
  /** LateInitialize */
  LATE_INITIALIZE = "LateInitialize",
  /** * */
  VALUE_ASTERISK = "*",
}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema AutoScalingGroupSpecProviderConfigRef
 */
export interface AutoScalingGroupSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema AutoScalingGroupSpecProviderConfigRef#name
   */
  readonly name: string;

  /**
   * Policies for referencing.
   *
   * @schema AutoScalingGroupSpecProviderConfigRef#policy
   */
  readonly policy?: AutoScalingGroupSpecProviderConfigRefPolicy;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecProviderConfigRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecProviderConfigRef(obj: AutoScalingGroupSpecProviderConfigRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'policy': toJson_AutoScalingGroupSpecProviderConfigRefPolicy(obj.policy),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema AutoScalingGroupSpecPublishConnectionDetailsTo
 */
export interface AutoScalingGroupSpecPublishConnectionDetailsTo {
  /**
   * SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsTo#configRef
   */
  readonly configRef?: AutoScalingGroupSpecPublishConnectionDetailsToConfigRef;

  /**
   * Metadata is the metadata for connection secret.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsTo#metadata
   */
  readonly metadata?: AutoScalingGroupSpecPublishConnectionDetailsToMetadata;

  /**
   * Name is the name of the connection secret.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsTo#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecPublishConnectionDetailsTo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecPublishConnectionDetailsTo(obj: AutoScalingGroupSpecPublishConnectionDetailsTo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configRef': toJson_AutoScalingGroupSpecPublishConnectionDetailsToConfigRef(obj.configRef),
    'metadata': toJson_AutoScalingGroupSpecPublishConnectionDetailsToMetadata(obj.metadata),
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
 *
 * @schema AutoScalingGroupSpecWriteConnectionSecretToRef
 */
export interface AutoScalingGroupSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema AutoScalingGroupSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema AutoScalingGroupSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecWriteConnectionSecretToRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecWriteConnectionSecretToRef(obj: AutoScalingGroupSpecWriteConnectionSecretToRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Information used to specify the launch template and version to use to launch instances.
 * Conditional: You must specify either a launch template (LaunchTemplate or MixedInstancesPolicy) or a launch configuration (LaunchConfigurationName or InstanceId).
 * The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see Creating a launch template for an Auto Scaling group (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the Amazon EC2 Auto Scaling User Guide.
 *
 * @schema AutoScalingGroupSpecForProviderLaunchTemplate
 */
export interface AutoScalingGroupSpecForProviderLaunchTemplate {
  /**
   * @schema AutoScalingGroupSpecForProviderLaunchTemplate#launchTemplateID
   */
  readonly launchTemplateId?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderLaunchTemplate#launchTemplateName
   */
  readonly launchTemplateName?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderLaunchTemplate#version
   */
  readonly version?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderLaunchTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderLaunchTemplate(obj: AutoScalingGroupSpecForProviderLaunchTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'launchTemplateID': obj.launchTemplateId,
    'launchTemplateName': obj.launchTemplateName,
    'version': obj.version,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AutoScalingGroupSpecForProviderLifecycleHookSpecificationList
 */
export interface AutoScalingGroupSpecForProviderLifecycleHookSpecificationList {
  /**
   * @schema AutoScalingGroupSpecForProviderLifecycleHookSpecificationList#defaultResult
   */
  readonly defaultResult?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderLifecycleHookSpecificationList#heartbeatTimeout
   */
  readonly heartbeatTimeout?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderLifecycleHookSpecificationList#lifecycleHookName
   */
  readonly lifecycleHookName?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderLifecycleHookSpecificationList#lifecycleTransition
   */
  readonly lifecycleTransition?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderLifecycleHookSpecificationList#notificationMetadata
   */
  readonly notificationMetadata?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderLifecycleHookSpecificationList#notificationTargetARN
   */
  readonly notificationTargetArn?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderLifecycleHookSpecificationList#roleARN
   */
  readonly roleArn?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderLifecycleHookSpecificationList' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderLifecycleHookSpecificationList(obj: AutoScalingGroupSpecForProviderLifecycleHookSpecificationList | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultResult': obj.defaultResult,
    'heartbeatTimeout': obj.heartbeatTimeout,
    'lifecycleHookName': obj.lifecycleHookName,
    'lifecycleTransition': obj.lifecycleTransition,
    'notificationMetadata': obj.notificationMetadata,
    'notificationTargetARN': obj.notificationTargetArn,
    'roleARN': obj.roleArn,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The mixed instances policy. For more information, see Auto Scaling groups with multiple instance types and purchase options (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the Amazon EC2 Auto Scaling User Guide.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicy
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicy {
  /**
   * Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicy#instancesDistribution
   */
  readonly instancesDistribution?: AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution;

  /**
   * Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicy#launchTemplate
   */
  readonly launchTemplate?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicy(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'instancesDistribution': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution(obj.instancesDistribution),
    'launchTemplate': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate(obj.launchTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AutoScalingGroupSpecForProviderTags
 */
export interface AutoScalingGroupSpecForProviderTags {
  /**
   * @schema AutoScalingGroupSpecForProviderTags#key
   */
  readonly key?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderTags#propagateAtLaunch
   */
  readonly propagateAtLaunch?: boolean;

  /**
   * @schema AutoScalingGroupSpecForProviderTags#resourceID
   */
  readonly resourceId?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderTags#resourceType
   */
  readonly resourceType?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderTags#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderTags' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderTags(obj: AutoScalingGroupSpecForProviderTags | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'propagateAtLaunch': obj.propagateAtLaunch,
    'resourceID': obj.resourceId,
    'resourceType': obj.resourceType,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Policies for referencing.
 *
 * @schema AutoScalingGroupSpecProviderConfigRefPolicy
 */
export interface AutoScalingGroupSpecProviderConfigRefPolicy {
  /**
   * Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
   *
   * @schema AutoScalingGroupSpecProviderConfigRefPolicy#resolution
   */
  readonly resolution?: AutoScalingGroupSpecProviderConfigRefPolicyResolution;

  /**
   * Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
   *
   * @schema AutoScalingGroupSpecProviderConfigRefPolicy#resolve
   */
  readonly resolve?: AutoScalingGroupSpecProviderConfigRefPolicyResolve;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecProviderConfigRefPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecProviderConfigRefPolicy(obj: AutoScalingGroupSpecProviderConfigRefPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resolution': obj.resolution,
    'resolve': obj.resolve,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
 *
 * @schema AutoScalingGroupSpecPublishConnectionDetailsToConfigRef
 */
export interface AutoScalingGroupSpecPublishConnectionDetailsToConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsToConfigRef#name
   */
  readonly name: string;

  /**
   * Policies for referencing.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsToConfigRef#policy
   */
  readonly policy?: AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecPublishConnectionDetailsToConfigRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecPublishConnectionDetailsToConfigRef(obj: AutoScalingGroupSpecPublishConnectionDetailsToConfigRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'policy': toJson_AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy(obj.policy),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Metadata is the metadata for connection secret.
 *
 * @schema AutoScalingGroupSpecPublishConnectionDetailsToMetadata
 */
export interface AutoScalingGroupSpecPublishConnectionDetailsToMetadata {
  /**
   * Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsToMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsToMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsToMetadata#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecPublishConnectionDetailsToMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecPublishConnectionDetailsToMetadata(obj: AutoScalingGroupSpecPublishConnectionDetailsToMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution#onDemandAllocationStrategy
   */
  readonly onDemandAllocationStrategy?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution#onDemandBaseCapacity
   */
  readonly onDemandBaseCapacity?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution#onDemandPercentageAboveBaseCapacity
   */
  readonly onDemandPercentageAboveBaseCapacity?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution#spotAllocationStrategy
   */
  readonly spotAllocationStrategy?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution#spotInstancePools
   */
  readonly spotInstancePools?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution#spotMaxPrice
   */
  readonly spotMaxPrice?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'onDemandAllocationStrategy': obj.onDemandAllocationStrategy,
    'onDemandBaseCapacity': obj.onDemandBaseCapacity,
    'onDemandPercentageAboveBaseCapacity': obj.onDemandPercentageAboveBaseCapacity,
    'spotAllocationStrategy': obj.spotAllocationStrategy,
    'spotInstancePools': obj.spotInstancePools,
    'spotMaxPrice': obj.spotMaxPrice,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate {
  /**
   * Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate#launchTemplateSpecification
   */
  readonly launchTemplateSpecification?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate#overrides
   */
  readonly overrides?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides[];

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'launchTemplateSpecification': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification(obj.launchTemplateSpecification),
    'overrides': obj.overrides?.map(y => toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
 *
 * @schema AutoScalingGroupSpecProviderConfigRefPolicyResolution
 */
export enum AutoScalingGroupSpecProviderConfigRefPolicyResolution {
  /** Required */
  REQUIRED = "Required",
  /** Optional */
  OPTIONAL = "Optional",
}

/**
 * Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
 *
 * @schema AutoScalingGroupSpecProviderConfigRefPolicyResolve
 */
export enum AutoScalingGroupSpecProviderConfigRefPolicyResolve {
  /** Always */
  ALWAYS = "Always",
  /** IfNotPresent */
  IF_NOT_PRESENT = "IfNotPresent",
}

/**
 * Policies for referencing.
 *
 * @schema AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy
 */
export interface AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy {
  /**
   * Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy#resolution
   */
  readonly resolution?: AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicyResolution;

  /**
   * Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
   *
   * @schema AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy#resolve
   */
  readonly resolve?: AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicyResolve;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy(obj: AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resolution': obj.resolution,
    'resolve': obj.resolve,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html) in the Amazon EC2 Auto Scaling User Guide.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification#launchTemplateID
   */
  readonly launchTemplateId?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification#launchTemplateName
   */
  readonly launchTemplateName?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification#version
   */
  readonly version?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'launchTemplateID': obj.launchTemplateId,
    'launchTemplateName': obj.launchTemplateName,
    'version': obj.version,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides {
  /**
   * The attributes for the instance types for a mixed instances policy. Amazon EC2 Auto Scaling uses your specified requirements to identify instance types. Then, it uses your On-Demand and Spot allocation strategies to launch instances from these instance types.
   * When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.
   * To limit the list of instance types from which Amazon EC2 Auto Scaling can identify matching instance types, you can use one of the following parameters, but not both in the same request:
   * * AllowedInstanceTypes - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.
   * * ExcludedInstanceTypes - The instance types to exclude from the list, even if they match your specified attributes.
   * You must specify VCpuCount and MemoryMiB. All other attributes are optional. Any unspecified optional attribute is set to its default.
   * For more information, see Creating an Auto Scaling group using attribute-based instance type selection (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the Amazon EC2 Auto Scaling User Guide. For help determining which instance types match your attributes before you apply them to your Auto Scaling group, see Preview instance types with specified attributes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html#ec2fleet-get-instance-types-from-instance-requirements) in the Amazon EC2 User Guide for Linux Instances.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides#instanceRequirements
   */
  readonly instanceRequirements?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides#instanceType
   */
  readonly instanceType?: string;

  /**
   * Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html) in the Amazon EC2 Auto Scaling User Guide.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides#launchTemplateSpecification
   */
  readonly launchTemplateSpecification?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides#weightedCapacity
   */
  readonly weightedCapacity?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrides | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'instanceRequirements': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements(obj.instanceRequirements),
    'instanceType': obj.instanceType,
    'launchTemplateSpecification': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification(obj.launchTemplateSpecification),
    'weightedCapacity': obj.weightedCapacity,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
 *
 * @schema AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicyResolution
 */
export enum AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicyResolution {
  /** Required */
  REQUIRED = "Required",
  /** Optional */
  OPTIONAL = "Optional",
}

/**
 * Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
 *
 * @schema AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicyResolve
 */
export enum AutoScalingGroupSpecPublishConnectionDetailsToConfigRefPolicyResolve {
  /** Always */
  ALWAYS = "Always",
  /** IfNotPresent */
  IF_NOT_PRESENT = "IfNotPresent",
}

/**
 * The attributes for the instance types for a mixed instances policy. Amazon EC2 Auto Scaling uses your specified requirements to identify instance types. Then, it uses your On-Demand and Spot allocation strategies to launch instances from these instance types.
 * When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.
 * To limit the list of instance types from which Amazon EC2 Auto Scaling can identify matching instance types, you can use one of the following parameters, but not both in the same request:
 * * AllowedInstanceTypes - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.
 * * ExcludedInstanceTypes - The instance types to exclude from the list, even if they match your specified attributes.
 * You must specify VCpuCount and MemoryMiB. All other attributes are optional. Any unspecified optional attribute is set to its default.
 * For more information, see Creating an Auto Scaling group using attribute-based instance type selection (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the Amazon EC2 Auto Scaling User Guide. For help determining which instance types match your attributes before you apply them to your Auto Scaling group, see Preview instance types with specified attributes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html#ec2fleet-get-instance-types-from-instance-requirements) in the Amazon EC2 User Guide for Linux Instances.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements {
  /**
   * Specifies the minimum and maximum for the AcceleratorCount object when you specify InstanceRequirements for an Auto Scaling group.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#acceleratorCount
   */
  readonly acceleratorCount?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#acceleratorManufacturers
   */
  readonly acceleratorManufacturers?: string[];

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#acceleratorNames
   */
  readonly acceleratorNames?: string[];

  /**
   * Specifies the minimum and maximum for the AcceleratorTotalMemoryMiB object when you specify InstanceRequirements for an Auto Scaling group.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#acceleratorTotalMemoryMiB
   */
  readonly acceleratorTotalMemoryMiB?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#acceleratorTypes
   */
  readonly acceleratorTypes?: string[];

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#allowedInstanceTypes
   */
  readonly allowedInstanceTypes?: string[];

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#bareMetal
   */
  readonly bareMetal?: string;

  /**
   * Specifies the minimum and maximum for the BaselineEbsBandwidthMbps object when you specify InstanceRequirements for an Auto Scaling group.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#baselineEBSBandwidthMbps
   */
  readonly baselineEbsBandwidthMbps?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#burstablePerformance
   */
  readonly burstablePerformance?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#cpuManufacturers
   */
  readonly cpuManufacturers?: string[];

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#excludedInstanceTypes
   */
  readonly excludedInstanceTypes?: string[];

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#instanceGenerations
   */
  readonly instanceGenerations?: string[];

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#localStorage
   */
  readonly localStorage?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#localStorageTypes
   */
  readonly localStorageTypes?: string[];

  /**
   * Specifies the minimum and maximum for the MemoryGiBPerVCpu object when you specify InstanceRequirements for an Auto Scaling group.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#memoryGiBPerVCPU
   */
  readonly memoryGiBPerVcpu?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu;

  /**
   * Specifies the minimum and maximum for the MemoryMiB object when you specify InstanceRequirements for an Auto Scaling group.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#memoryMiB
   */
  readonly memoryMiB?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB;

  /**
   * Specifies the minimum and maximum for the NetworkBandwidthGbps object when you specify InstanceRequirements for an Auto Scaling group.
   * Setting the minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For more information, see Available instance bandwidth (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth) in the Amazon EC2 User Guide for Linux Instances.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#networkBandwidthGbps
   */
  readonly networkBandwidthGbps?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps;

  /**
   * Specifies the minimum and maximum for the NetworkInterfaceCount object when you specify InstanceRequirements for an Auto Scaling group.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#networkInterfaceCount
   */
  readonly networkInterfaceCount?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#onDemandMaxPricePercentageOverLowestPrice
   */
  readonly onDemandMaxPricePercentageOverLowestPrice?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#requireHibernateSupport
   */
  readonly requireHibernateSupport?: boolean;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#spotMaxPricePercentageOverLowestPrice
   */
  readonly spotMaxPricePercentageOverLowestPrice?: number;

  /**
   * Specifies the minimum and maximum for the TotalLocalStorageGB object when you specify InstanceRequirements for an Auto Scaling group.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#totalLocalStorageGB
   */
  readonly totalLocalStorageGb?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb;

  /**
   * Specifies the minimum and maximum for the VCpuCount object when you specify InstanceRequirements for an Auto Scaling group.
   *
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements#vCPUCount
   */
  readonly vCpuCount?: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirements | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'acceleratorCount': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount(obj.acceleratorCount),
    'acceleratorManufacturers': obj.acceleratorManufacturers?.map(y => y),
    'acceleratorNames': obj.acceleratorNames?.map(y => y),
    'acceleratorTotalMemoryMiB': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB(obj.acceleratorTotalMemoryMiB),
    'acceleratorTypes': obj.acceleratorTypes?.map(y => y),
    'allowedInstanceTypes': obj.allowedInstanceTypes?.map(y => y),
    'bareMetal': obj.bareMetal,
    'baselineEBSBandwidthMbps': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps(obj.baselineEbsBandwidthMbps),
    'burstablePerformance': obj.burstablePerformance,
    'cpuManufacturers': obj.cpuManufacturers?.map(y => y),
    'excludedInstanceTypes': obj.excludedInstanceTypes?.map(y => y),
    'instanceGenerations': obj.instanceGenerations?.map(y => y),
    'localStorage': obj.localStorage,
    'localStorageTypes': obj.localStorageTypes?.map(y => y),
    'memoryGiBPerVCPU': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu(obj.memoryGiBPerVcpu),
    'memoryMiB': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB(obj.memoryMiB),
    'networkBandwidthGbps': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps(obj.networkBandwidthGbps),
    'networkInterfaceCount': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount(obj.networkInterfaceCount),
    'onDemandMaxPricePercentageOverLowestPrice': obj.onDemandMaxPricePercentageOverLowestPrice,
    'requireHibernateSupport': obj.requireHibernateSupport,
    'spotMaxPricePercentageOverLowestPrice': obj.spotMaxPricePercentageOverLowestPrice,
    'totalLocalStorageGB': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb(obj.totalLocalStorageGb),
    'vCPUCount': toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount(obj.vCpuCount),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html) in the Amazon EC2 Auto Scaling User Guide.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification#launchTemplateID
   */
  readonly launchTemplateId?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification#launchTemplateName
   */
  readonly launchTemplateName?: string;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification#version
   */
  readonly version?: string;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesLaunchTemplateSpecification | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'launchTemplateID': obj.launchTemplateId,
    'launchTemplateName': obj.launchTemplateName,
    'version': obj.version,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the AcceleratorCount object when you specify InstanceRequirements for an Auto Scaling group.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorCount | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the AcceleratorTotalMemoryMiB object when you specify InstanceRequirements for an Auto Scaling group.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsAcceleratorTotalMemoryMiB | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the BaselineEbsBandwidthMbps object when you specify InstanceRequirements for an Auto Scaling group.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsBaselineEbsBandwidthMbps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the MemoryGiBPerVCpu object when you specify InstanceRequirements for an Auto Scaling group.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryGiBPerVcpu | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the MemoryMiB object when you specify InstanceRequirements for an Auto Scaling group.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsMemoryMiB | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the NetworkBandwidthGbps object when you specify InstanceRequirements for an Auto Scaling group.
 * Setting the minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For more information, see Available instance bandwidth (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth) in the Amazon EC2 User Guide for Linux Instances.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkBandwidthGbps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the NetworkInterfaceCount object when you specify InstanceRequirements for an Auto Scaling group.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsNetworkInterfaceCount | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the TotalLocalStorageGB object when you specify InstanceRequirements for an Auto Scaling group.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsTotalLocalStorageGb | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the minimum and maximum for the VCpuCount object when you specify InstanceRequirements for an Auto Scaling group.
 *
 * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount
 */
export interface AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount {
  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount#max
   */
  readonly max?: number;

  /**
   * @schema AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount#min
   */
  readonly min?: number;

}

/**
 * Converts an object of type 'AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount(obj: AutoScalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverridesInstanceRequirementsVCpuCount | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'max': obj.max,
    'min': obj.min,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

