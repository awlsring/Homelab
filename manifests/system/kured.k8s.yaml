apiVersion: v1
kind: Namespace
metadata:
  name: kured
  namespace: kured
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kured-helm-c8b3d86f
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kured
    helm.sh/chart: kured-5.3.2
  name: kured-helm-c8b3d86f
  namespace: kured
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kured-helm-c8b3d86f
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kured
    helm.sh/chart: kured-5.3.2
  name: kured-helm-c8b3d86f
  namespace: kured
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - delete
      - get
  - apiGroups:
      - extensions
    resources:
      - daemonsets
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kured-helm-c8b3d86f
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kured
    helm.sh/chart: kured-5.3.2
  name: kured-helm-c8b3d86f
  namespace: kured
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kured-helm-c8b3d86f
subjects:
  - kind: ServiceAccount
    name: kured-helm-c8b3d86f
    namespace: kured
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kured-helm-c8b3d86f
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kured
    helm.sh/chart: kured-5.3.2
  name: kured-helm-c8b3d86f
  namespace: kured
rules:
  - apiGroups:
      - extensions
    resourceNames:
      - kured-helm-c8b3d86f
    resources:
      - daemonsets
    verbs:
      - update
      - patch
  - apiGroups:
      - apps
    resourceNames:
      - kured-helm-c8b3d86f
    resources:
      - daemonsets
    verbs:
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kured-helm-c8b3d86f
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kured
    helm.sh/chart: kured-5.3.2
  name: kured-helm-c8b3d86f
  namespace: kured
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kured-helm-c8b3d86f
subjects:
  - kind: ServiceAccount
    name: kured-helm-c8b3d86f
    namespace: kured
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: kured-helm-c8b3d86f
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kured
    helm.sh/chart: kured-5.3.2
  name: kured-helm-c8b3d86f
  namespace: kured
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kured-helm-c8b3d86f
      app.kubernetes.io/name: kured
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kured-helm-c8b3d86f
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kured
        helm.sh/chart: kured-5.3.2
    spec:
      containers:
        - args:
            - --ds-name=kured-helm-c8b3d86f
            - --ds-namespace=kured
            - --metrics-port=8080
            - --reboot-command=/bin/systemctl reboot
            - --time-zone=America/Los_Angeles
            - --annotate-nodes=true
            - --log-format=text
            - --concurrency=1
          command:
            - /usr/bin/kured
          env:
            - name: KURED_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: ghcr.io/kubereboot/kured:1.14.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: kured
          ports:
            - containerPort: 8080
              name: metrics
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
      hostNetwork: false
      hostPID: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      serviceAccountName: kured-helm-c8b3d86f
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
